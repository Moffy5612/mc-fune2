import {
  __commonJS
} from "./chunk-CEQRFMJQ.js";

// client/node_modules/jimp/browser/lib/jimp.js
var require_jimp = __commonJS({
  "client/node_modules/jimp/browser/lib/jimp.js"(exports, module) {
    (() => {
      var __webpack_modules__ = { 236: (t, e, r) => {
        var i = r(4618);
        function n(t2, e2) {
          var r2 = new i(t2, e2);
          return function(t3) {
            return r2.convert(t3);
          };
        }
        n.BIN = "01", n.OCT = "01234567", n.DEC = "0123456789", n.HEX = "0123456789abcdef", t.exports = n;
      }, 4618: (t) => {
        "use strict";
        function e(t2, e2) {
          if (!(t2 && e2 && t2.length && e2.length))
            throw new Error("Bad alphabet");
          this.srcAlphabet = t2, this.dstAlphabet = e2;
        }
        e.prototype.convert = function(t2) {
          var e2, r, i, n = {}, a = this.srcAlphabet.length, o = this.dstAlphabet.length, s = t2.length, h = "string" == typeof t2 ? "" : [];
          if (!this.isValid(t2))
            throw new Error('Number "' + t2 + '" contains of non-alphabetic digits (' + this.srcAlphabet + ")");
          if (this.srcAlphabet === this.dstAlphabet)
            return t2;
          for (e2 = 0; e2 < s; e2++)
            n[e2] = this.srcAlphabet.indexOf(t2[e2]);
          do {
            for (r = 0, i = 0, e2 = 0; e2 < s; e2++)
              (r = r * a + n[e2]) >= o ? (n[i++] = parseInt(r / o, 10), r %= o) : i > 0 && (n[i++] = 0);
            s = i, h = this.dstAlphabet.slice(r, r + 1).concat(h);
          } while (0 !== i);
          return h;
        }, e.prototype.isValid = function(t2) {
          for (var e2 = 0; e2 < t2.length; ++e2)
            if (-1 === this.srcAlphabet.indexOf(t2[e2]))
              return false;
          return true;
        }, t.exports = e;
      }, 5766: (t, e) => {
        "use strict";
        e.byteLength = function(t2) {
          var e2 = h(t2), r2 = e2[0], i2 = e2[1];
          return 3 * (r2 + i2) / 4 - i2;
        }, e.toByteArray = function(t2) {
          var e2, r2, a2 = h(t2), o2 = a2[0], s2 = a2[1], l2 = new n(function(t3, e3, r3) {
            return 3 * (e3 + r3) / 4 - r3;
          }(0, o2, s2)), f = 0, u = s2 > 0 ? o2 - 4 : o2;
          for (r2 = 0; r2 < u; r2 += 4)
            e2 = i[t2.charCodeAt(r2)] << 18 | i[t2.charCodeAt(r2 + 1)] << 12 | i[t2.charCodeAt(r2 + 2)] << 6 | i[t2.charCodeAt(r2 + 3)], l2[f++] = e2 >> 16 & 255, l2[f++] = e2 >> 8 & 255, l2[f++] = 255 & e2;
          return 2 === s2 && (e2 = i[t2.charCodeAt(r2)] << 2 | i[t2.charCodeAt(r2 + 1)] >> 4, l2[f++] = 255 & e2), 1 === s2 && (e2 = i[t2.charCodeAt(r2)] << 10 | i[t2.charCodeAt(r2 + 1)] << 4 | i[t2.charCodeAt(r2 + 2)] >> 2, l2[f++] = e2 >> 8 & 255, l2[f++] = 255 & e2), l2;
        }, e.fromByteArray = function(t2) {
          for (var e2, i2 = t2.length, n2 = i2 % 3, a2 = [], o2 = 16383, s2 = 0, h2 = i2 - n2; s2 < h2; s2 += o2)
            a2.push(l(t2, s2, s2 + o2 > h2 ? h2 : s2 + o2));
          return 1 === n2 ? (e2 = t2[i2 - 1], a2.push(r[e2 >> 2] + r[e2 << 4 & 63] + "==")) : 2 === n2 && (e2 = (t2[i2 - 2] << 8) + t2[i2 - 1], a2.push(r[e2 >> 10] + r[e2 >> 4 & 63] + r[e2 << 2 & 63] + "=")), a2.join("");
        };
        for (var r = [], i = [], n = "undefined" != typeof Uint8Array ? Uint8Array : Array, a = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/", o = 0, s = a.length; o < s; ++o)
          r[o] = a[o], i[a.charCodeAt(o)] = o;
        function h(t2) {
          var e2 = t2.length;
          if (e2 % 4 > 0)
            throw new Error("Invalid string. Length must be a multiple of 4");
          var r2 = t2.indexOf("=");
          return -1 === r2 && (r2 = e2), [r2, r2 === e2 ? 0 : 4 - r2 % 4];
        }
        function l(t2, e2, i2) {
          for (var n2, a2, o2 = [], s2 = e2; s2 < i2; s2 += 3)
            n2 = (t2[s2] << 16 & 16711680) + (t2[s2 + 1] << 8 & 65280) + (255 & t2[s2 + 2]), o2.push(r[(a2 = n2) >> 18 & 63] + r[a2 >> 12 & 63] + r[a2 >> 6 & 63] + r[63 & a2]);
          return o2.join("");
        }
        i["-".charCodeAt(0)] = 62, i["_".charCodeAt(0)] = 63;
      }, 486: (t, e, r) => {
        var i = r(5433), n = r(1651);
        t.exports = { encode: i, decode: n };
      }, 1651: (t, e, r) => {
        var i = r(8834).lW;
        function n(t2, e2) {
          if (this.pos = 0, this.buffer = t2, this.is_with_alpha = !!e2, this.bottom_up = true, this.flag = this.buffer.toString("utf-8", 0, this.pos += 2), "BM" != this.flag)
            throw new Error("Invalid BMP File");
          this.parseHeader(), this.parseRGBA();
        }
        n.prototype.parseHeader = function() {
          if (this.fileSize = this.buffer.readUInt32LE(this.pos), this.pos += 4, this.reserved = this.buffer.readUInt32LE(this.pos), this.pos += 4, this.offset = this.buffer.readUInt32LE(this.pos), this.pos += 4, this.headerSize = this.buffer.readUInt32LE(this.pos), this.pos += 4, this.width = this.buffer.readUInt32LE(this.pos), this.pos += 4, this.height = this.buffer.readInt32LE(this.pos), this.pos += 4, this.planes = this.buffer.readUInt16LE(this.pos), this.pos += 2, this.bitPP = this.buffer.readUInt16LE(this.pos), this.pos += 2, this.compress = this.buffer.readUInt32LE(this.pos), this.pos += 4, this.rawSize = this.buffer.readUInt32LE(this.pos), this.pos += 4, this.hr = this.buffer.readUInt32LE(this.pos), this.pos += 4, this.vr = this.buffer.readUInt32LE(this.pos), this.pos += 4, this.colors = this.buffer.readUInt32LE(this.pos), this.pos += 4, this.importantColors = this.buffer.readUInt32LE(this.pos), this.pos += 4, 16 === this.bitPP && this.is_with_alpha && (this.bitPP = 15), this.bitPP < 15) {
            var t2 = 0 === this.colors ? 1 << this.bitPP : this.colors;
            this.palette = new Array(t2);
            for (var e2 = 0; e2 < t2; e2++) {
              var r2 = this.buffer.readUInt8(this.pos++), i2 = this.buffer.readUInt8(this.pos++), n2 = this.buffer.readUInt8(this.pos++), a = this.buffer.readUInt8(this.pos++);
              this.palette[e2] = { red: n2, green: i2, blue: r2, quad: a };
            }
          }
          this.height < 0 && (this.height *= -1, this.bottom_up = false);
        }, n.prototype.parseRGBA = function() {
          var t2 = "bit" + this.bitPP, e2 = this.width * this.height * 4;
          this.data = new i(e2), this[t2]();
        }, n.prototype.bit1 = function() {
          var t2 = Math.ceil(this.width / 8), e2 = t2 % 4, r2 = this.height >= 0 ? this.height - 1 : -this.height;
          for (r2 = this.height - 1; r2 >= 0; r2--) {
            for (var i2 = this.bottom_up ? r2 : this.height - 1 - r2, n2 = 0; n2 < t2; n2++)
              for (var a = this.buffer.readUInt8(this.pos++), o = i2 * this.width * 4 + 8 * n2 * 4, s = 0; s < 8 && 8 * n2 + s < this.width; s++) {
                var h = this.palette[a >> 7 - s & 1];
                this.data[o + 4 * s] = 0, this.data[o + 4 * s + 1] = h.blue, this.data[o + 4 * s + 2] = h.green, this.data[o + 4 * s + 3] = h.red;
              }
            0 != e2 && (this.pos += 4 - e2);
          }
        }, n.prototype.bit4 = function() {
          if (2 == this.compress) {
            let l2 = function(e3) {
              var r3 = this.palette[e3];
              this.data[t2] = 0, this.data[t2 + 1] = r3.blue, this.data[t2 + 2] = r3.green, this.data[t2 + 3] = r3.red, t2 += 4;
            };
            var l = l2;
            this.data.fill(255);
            for (var t2 = 0, e2 = this.bottom_up ? this.height - 1 : 0, r2 = false; t2 < this.data.length; ) {
              var i2 = this.buffer.readUInt8(this.pos++), n2 = this.buffer.readUInt8(this.pos++);
              if (0 == i2) {
                if (0 == n2) {
                  this.bottom_up ? e2-- : e2++, t2 = e2 * this.width * 4, r2 = false;
                  continue;
                }
                if (1 == n2)
                  break;
                if (2 == n2) {
                  var a = this.buffer.readUInt8(this.pos++), o = this.buffer.readUInt8(this.pos++);
                  this.bottom_up ? e2 -= o : e2 += o, t2 += o * this.width * 4 + 4 * a;
                } else {
                  for (var s = this.buffer.readUInt8(this.pos++), h = 0; h < n2; h++)
                    r2 ? l2.call(this, 15 & s) : l2.call(this, (240 & s) >> 4), 1 & h && h + 1 < n2 && (s = this.buffer.readUInt8(this.pos++)), r2 = !r2;
                  1 == (n2 + 1 >> 1 & 1) && this.pos++;
                }
              } else
                for (h = 0; h < i2; h++)
                  r2 ? l2.call(this, 15 & n2) : l2.call(this, (240 & n2) >> 4), r2 = !r2;
            }
          } else {
            var f = Math.ceil(this.width / 2), u = f % 4;
            for (o = this.height - 1; o >= 0; o--) {
              var c = this.bottom_up ? o : this.height - 1 - o;
              for (a = 0; a < f; a++) {
                n2 = this.buffer.readUInt8(this.pos++), t2 = c * this.width * 4 + 2 * a * 4;
                var d = n2 >> 4, p = 15 & n2, m = this.palette[d];
                if (this.data[t2] = 0, this.data[t2 + 1] = m.blue, this.data[t2 + 2] = m.green, this.data[t2 + 3] = m.red, 2 * a + 1 >= this.width)
                  break;
                m = this.palette[p], this.data[t2 + 4] = 0, this.data[t2 + 4 + 1] = m.blue, this.data[t2 + 4 + 2] = m.green, this.data[t2 + 4 + 3] = m.red;
              }
              0 != u && (this.pos += 4 - u);
            }
          }
        }, n.prototype.bit8 = function() {
          if (1 == this.compress) {
            let h2 = function(e3) {
              var r3 = this.palette[e3];
              this.data[t2] = 0, this.data[t2 + 1] = r3.blue, this.data[t2 + 2] = r3.green, this.data[t2 + 3] = r3.red, t2 += 4;
            };
            var h = h2;
            this.data.fill(255);
            for (var t2 = 0, e2 = this.bottom_up ? this.height - 1 : 0; t2 < this.data.length; ) {
              var r2 = this.buffer.readUInt8(this.pos++), i2 = this.buffer.readUInt8(this.pos++);
              if (0 == r2) {
                if (0 == i2) {
                  this.bottom_up ? e2-- : e2++, t2 = e2 * this.width * 4;
                  continue;
                }
                if (1 == i2)
                  break;
                if (2 == i2) {
                  var n2 = this.buffer.readUInt8(this.pos++), a = this.buffer.readUInt8(this.pos++);
                  this.bottom_up ? e2 -= a : e2 += a, t2 += a * this.width * 4 + 4 * n2;
                } else {
                  for (var o = 0; o < i2; o++) {
                    var s = this.buffer.readUInt8(this.pos++);
                    h2.call(this, s);
                  }
                  true & i2 && this.pos++;
                }
              } else
                for (o = 0; o < r2; o++)
                  h2.call(this, i2);
            }
          } else {
            var l = this.width % 4;
            for (a = this.height - 1; a >= 0; a--) {
              var f = this.bottom_up ? a : this.height - 1 - a;
              for (n2 = 0; n2 < this.width; n2++)
                if (i2 = this.buffer.readUInt8(this.pos++), t2 = f * this.width * 4 + 4 * n2, i2 < this.palette.length) {
                  var u = this.palette[i2];
                  this.data[t2] = 0, this.data[t2 + 1] = u.blue, this.data[t2 + 2] = u.green, this.data[t2 + 3] = u.red;
                } else
                  this.data[t2] = 0, this.data[t2 + 1] = 255, this.data[t2 + 2] = 255, this.data[t2 + 3] = 255;
              0 != l && (this.pos += 4 - l);
            }
          }
        }, n.prototype.bit15 = function() {
          for (var t2 = this.width % 3, e2 = parseInt("11111", 2), r2 = this.height - 1; r2 >= 0; r2--) {
            for (var i2 = this.bottom_up ? r2 : this.height - 1 - r2, n2 = 0; n2 < this.width; n2++) {
              var a = this.buffer.readUInt16LE(this.pos);
              this.pos += 2;
              var o = (a & e2) / e2 * 255 | 0, s = (a >> 5 & e2) / e2 * 255 | 0, h = (a >> 10 & e2) / e2 * 255 | 0, l = a >> 15 ? 255 : 0, f = i2 * this.width * 4 + 4 * n2;
              this.data[f] = l, this.data[f + 1] = o, this.data[f + 2] = s, this.data[f + 3] = h;
            }
            this.pos += t2;
          }
        }, n.prototype.bit16 = function() {
          var t2 = this.width % 2 * 2;
          this.maskRed = 31744, this.maskGreen = 992, this.maskBlue = 31, this.mask0 = 0, 3 == this.compress && (this.maskRed = this.buffer.readUInt32LE(this.pos), this.pos += 4, this.maskGreen = this.buffer.readUInt32LE(this.pos), this.pos += 4, this.maskBlue = this.buffer.readUInt32LE(this.pos), this.pos += 4, this.mask0 = this.buffer.readUInt32LE(this.pos), this.pos += 4);
          for (var e2 = [0, 0, 0], r2 = 0; r2 < 16; r2++)
            this.maskRed >> r2 & 1 && e2[0]++, this.maskGreen >> r2 & 1 && e2[1]++, this.maskBlue >> r2 & 1 && e2[2]++;
          e2[1] += e2[0], e2[2] += e2[1], e2[0] = 8 - e2[0], e2[1] -= 8, e2[2] -= 8;
          for (var i2 = this.height - 1; i2 >= 0; i2--) {
            for (var n2 = this.bottom_up ? i2 : this.height - 1 - i2, a = 0; a < this.width; a++) {
              var o = this.buffer.readUInt16LE(this.pos);
              this.pos += 2;
              var s = (o & this.maskBlue) << e2[0], h = (o & this.maskGreen) >> e2[1], l = (o & this.maskRed) >> e2[2], f = n2 * this.width * 4 + 4 * a;
              this.data[f] = 0, this.data[f + 1] = s, this.data[f + 2] = h, this.data[f + 3] = l;
            }
            this.pos += t2;
          }
        }, n.prototype.bit24 = function() {
          for (var t2 = this.height - 1; t2 >= 0; t2--) {
            for (var e2 = this.bottom_up ? t2 : this.height - 1 - t2, r2 = 0; r2 < this.width; r2++) {
              var i2 = this.buffer.readUInt8(this.pos++), n2 = this.buffer.readUInt8(this.pos++), a = this.buffer.readUInt8(this.pos++), o = e2 * this.width * 4 + 4 * r2;
              this.data[o] = 0, this.data[o + 1] = i2, this.data[o + 2] = n2, this.data[o + 3] = a;
            }
            this.pos += this.width % 4;
          }
        }, n.prototype.bit32 = function() {
          if (3 == this.compress) {
            this.maskRed = this.buffer.readUInt32LE(this.pos), this.pos += 4, this.maskGreen = this.buffer.readUInt32LE(this.pos), this.pos += 4, this.maskBlue = this.buffer.readUInt32LE(this.pos), this.pos += 4, this.mask0 = this.buffer.readUInt32LE(this.pos), this.pos += 4;
            for (var t2 = this.height - 1; t2 >= 0; t2--)
              for (var e2 = this.bottom_up ? t2 : this.height - 1 - t2, r2 = 0; r2 < this.width; r2++) {
                var i2 = this.buffer.readUInt8(this.pos++), n2 = this.buffer.readUInt8(this.pos++), a = this.buffer.readUInt8(this.pos++), o = this.buffer.readUInt8(this.pos++), s = e2 * this.width * 4 + 4 * r2;
                this.data[s] = i2, this.data[s + 1] = n2, this.data[s + 2] = a, this.data[s + 3] = o;
              }
          } else
            for (t2 = this.height - 1; t2 >= 0; t2--)
              for (e2 = this.bottom_up ? t2 : this.height - 1 - t2, r2 = 0; r2 < this.width; r2++)
                n2 = this.buffer.readUInt8(this.pos++), a = this.buffer.readUInt8(this.pos++), o = this.buffer.readUInt8(this.pos++), i2 = this.buffer.readUInt8(this.pos++), s = e2 * this.width * 4 + 4 * r2, this.data[s] = i2, this.data[s + 1] = n2, this.data[s + 2] = a, this.data[s + 3] = o;
        }, n.prototype.getData = function() {
          return this.data;
        }, t.exports = function(t2) {
          return new n(t2);
        };
      }, 5433: (t, e, r) => {
        var i = r(8834).lW;
        function n(t2) {
          this.buffer = t2.data, this.width = t2.width, this.height = t2.height, this.extraBytes = this.width % 4, this.rgbSize = this.height * (3 * this.width + this.extraBytes), this.headerInfoSize = 40, this.data = [], this.flag = "BM", this.reserved = 0, this.offset = 54, this.fileSize = this.rgbSize + this.offset, this.planes = 1, this.bitPP = 24, this.compress = 0, this.hr = 0, this.vr = 0, this.colors = 0, this.importantColors = 0;
        }
        n.prototype.encode = function() {
          var t2 = new i(this.offset + this.rgbSize);
          this.pos = 0, t2.write(this.flag, this.pos, 2), this.pos += 2, t2.writeUInt32LE(this.fileSize, this.pos), this.pos += 4, t2.writeUInt32LE(this.reserved, this.pos), this.pos += 4, t2.writeUInt32LE(this.offset, this.pos), this.pos += 4, t2.writeUInt32LE(this.headerInfoSize, this.pos), this.pos += 4, t2.writeUInt32LE(this.width, this.pos), this.pos += 4, t2.writeInt32LE(-this.height, this.pos), this.pos += 4, t2.writeUInt16LE(this.planes, this.pos), this.pos += 2, t2.writeUInt16LE(this.bitPP, this.pos), this.pos += 2, t2.writeUInt32LE(this.compress, this.pos), this.pos += 4, t2.writeUInt32LE(this.rgbSize, this.pos), this.pos += 4, t2.writeUInt32LE(this.hr, this.pos), this.pos += 4, t2.writeUInt32LE(this.vr, this.pos), this.pos += 4, t2.writeUInt32LE(this.colors, this.pos), this.pos += 4, t2.writeUInt32LE(this.importantColors, this.pos), this.pos += 4;
          for (var e2 = 0, r2 = 3 * this.width + this.extraBytes, n2 = 0; n2 < this.height; n2++) {
            for (var a = 0; a < this.width; a++) {
              var o = this.pos + n2 * r2 + 3 * a;
              e2++, t2[o] = this.buffer[e2++], t2[o + 1] = this.buffer[e2++], t2[o + 2] = this.buffer[e2++];
            }
            if (this.extraBytes > 0) {
              var s = this.pos + n2 * r2 + 3 * this.width;
              t2.fill(0, s, s + this.extraBytes);
            }
          }
          return t2;
        }, t.exports = function(t2, e2) {
          return void 0 === e2 && (e2 = 100), { data: new n(t2).encode(), width: t2.width, height: t2.height };
        };
      }, 5137: (t, e, r) => {
        var i = r(8834).lW;
        t.exports = function(t2, e2) {
          if (i.isBuffer(t2) && i.isBuffer(e2)) {
            if ("function" == typeof t2.equals)
              return t2.equals(e2);
            if (t2.length !== e2.length)
              return false;
            for (var r2 = 0; r2 < t2.length; r2++)
              if (t2[r2] !== e2[r2])
                return false;
            return true;
          }
        };
      }, 8834: (t, e, r) => {
        "use strict";
        var i = r(5766), n = r(4181);
        e.lW = s, e.h2 = 50;
        var a = 2147483647;
        function o(t2) {
          if (t2 > a)
            throw new RangeError('The value "' + t2 + '" is invalid for option "size"');
          var e2 = new Uint8Array(t2);
          return e2.__proto__ = s.prototype, e2;
        }
        function s(t2, e2, r2) {
          if ("number" == typeof t2) {
            if ("string" == typeof e2)
              throw new TypeError('The "string" argument must be of type string. Received type number');
            return f(t2);
          }
          return h(t2, e2, r2);
        }
        function h(t2, e2, r2) {
          if ("string" == typeof t2)
            return function(t3, e3) {
              if ("string" == typeof e3 && "" !== e3 || (e3 = "utf8"), !s.isEncoding(e3))
                throw new TypeError("Unknown encoding: " + e3);
              var r3 = 0 | d(t3, e3), i3 = o(r3), n3 = i3.write(t3, e3);
              return n3 !== r3 && (i3 = i3.slice(0, n3)), i3;
            }(t2, e2);
          if (ArrayBuffer.isView(t2))
            return u(t2);
          if (null == t2)
            throw TypeError("The first argument must be one of type string, Buffer, ArrayBuffer, Array, or Array-like Object. Received type " + typeof t2);
          if (F(t2, ArrayBuffer) || t2 && F(t2.buffer, ArrayBuffer))
            return function(t3, e3, r3) {
              if (e3 < 0 || t3.byteLength < e3)
                throw new RangeError('"offset" is outside of buffer bounds');
              if (t3.byteLength < e3 + (r3 || 0))
                throw new RangeError('"length" is outside of buffer bounds');
              var i3;
              return (i3 = void 0 === e3 && void 0 === r3 ? new Uint8Array(t3) : void 0 === r3 ? new Uint8Array(t3, e3) : new Uint8Array(t3, e3, r3)).__proto__ = s.prototype, i3;
            }(t2, e2, r2);
          if ("number" == typeof t2)
            throw new TypeError('The "value" argument must not be of type number. Received type number');
          var i2 = t2.valueOf && t2.valueOf();
          if (null != i2 && i2 !== t2)
            return s.from(i2, e2, r2);
          var n2 = function(t3) {
            if (s.isBuffer(t3)) {
              var e3 = 0 | c(t3.length), r3 = o(e3);
              return 0 === r3.length || t3.copy(r3, 0, 0, e3), r3;
            }
            return void 0 !== t3.length ? "number" != typeof t3.length || j(t3.length) ? o(0) : u(t3) : "Buffer" === t3.type && Array.isArray(t3.data) ? u(t3.data) : void 0;
          }(t2);
          if (n2)
            return n2;
          if ("undefined" != typeof Symbol && null != Symbol.toPrimitive && "function" == typeof t2[Symbol.toPrimitive])
            return s.from(t2[Symbol.toPrimitive]("string"), e2, r2);
          throw new TypeError("The first argument must be one of type string, Buffer, ArrayBuffer, Array, or Array-like Object. Received type " + typeof t2);
        }
        function l(t2) {
          if ("number" != typeof t2)
            throw new TypeError('"size" argument must be of type number');
          if (t2 < 0)
            throw new RangeError('The value "' + t2 + '" is invalid for option "size"');
        }
        function f(t2) {
          return l(t2), o(t2 < 0 ? 0 : 0 | c(t2));
        }
        function u(t2) {
          for (var e2 = t2.length < 0 ? 0 : 0 | c(t2.length), r2 = o(e2), i2 = 0; i2 < e2; i2 += 1)
            r2[i2] = 255 & t2[i2];
          return r2;
        }
        function c(t2) {
          if (t2 >= a)
            throw new RangeError("Attempt to allocate Buffer larger than maximum size: 0x" + a.toString(16) + " bytes");
          return 0 | t2;
        }
        function d(t2, e2) {
          if (s.isBuffer(t2))
            return t2.length;
          if (ArrayBuffer.isView(t2) || F(t2, ArrayBuffer))
            return t2.byteLength;
          if ("string" != typeof t2)
            throw new TypeError('The "string" argument must be one of type string, Buffer, or ArrayBuffer. Received type ' + typeof t2);
          var r2 = t2.length, i2 = arguments.length > 2 && true === arguments[2];
          if (!i2 && 0 === r2)
            return 0;
          for (var n2 = false; ; )
            switch (e2) {
              case "ascii":
              case "latin1":
              case "binary":
                return r2;
              case "utf8":
              case "utf-8":
                return z(t2).length;
              case "ucs2":
              case "ucs-2":
              case "utf16le":
              case "utf-16le":
                return 2 * r2;
              case "hex":
                return r2 >>> 1;
              case "base64":
                return D(t2).length;
              default:
                if (n2)
                  return i2 ? -1 : z(t2).length;
                e2 = ("" + e2).toLowerCase(), n2 = true;
            }
        }
        function p(t2, e2, r2) {
          var i2 = false;
          if ((void 0 === e2 || e2 < 0) && (e2 = 0), e2 > this.length)
            return "";
          if ((void 0 === r2 || r2 > this.length) && (r2 = this.length), r2 <= 0)
            return "";
          if ((r2 >>>= 0) <= (e2 >>>= 0))
            return "";
          for (t2 || (t2 = "utf8"); ; )
            switch (t2) {
              case "hex":
                return B(this, e2, r2);
              case "utf8":
              case "utf-8":
                return S(this, e2, r2);
              case "ascii":
                return A(this, e2, r2);
              case "latin1":
              case "binary":
                return I(this, e2, r2);
              case "base64":
                return k(this, e2, r2);
              case "ucs2":
              case "ucs-2":
              case "utf16le":
              case "utf-16le":
                return T(this, e2, r2);
              default:
                if (i2)
                  throw new TypeError("Unknown encoding: " + t2);
                t2 = (t2 + "").toLowerCase(), i2 = true;
            }
        }
        function m(t2, e2, r2) {
          var i2 = t2[e2];
          t2[e2] = t2[r2], t2[r2] = i2;
        }
        function g(t2, e2, r2, i2, n2) {
          if (0 === t2.length)
            return -1;
          if ("string" == typeof r2 ? (i2 = r2, r2 = 0) : r2 > 2147483647 ? r2 = 2147483647 : r2 < -2147483648 && (r2 = -2147483648), j(r2 = +r2) && (r2 = n2 ? 0 : t2.length - 1), r2 < 0 && (r2 = t2.length + r2), r2 >= t2.length) {
            if (n2)
              return -1;
            r2 = t2.length - 1;
          } else if (r2 < 0) {
            if (!n2)
              return -1;
            r2 = 0;
          }
          if ("string" == typeof e2 && (e2 = s.from(e2, i2)), s.isBuffer(e2))
            return 0 === e2.length ? -1 : b(t2, e2, r2, i2, n2);
          if ("number" == typeof e2)
            return e2 &= 255, "function" == typeof Uint8Array.prototype.indexOf ? n2 ? Uint8Array.prototype.indexOf.call(t2, e2, r2) : Uint8Array.prototype.lastIndexOf.call(t2, e2, r2) : b(t2, [e2], r2, i2, n2);
          throw new TypeError("val must be string, number or Buffer");
        }
        function b(t2, e2, r2, i2, n2) {
          var a2, o2 = 1, s2 = t2.length, h2 = e2.length;
          if (void 0 !== i2 && ("ucs2" === (i2 = String(i2).toLowerCase()) || "ucs-2" === i2 || "utf16le" === i2 || "utf-16le" === i2)) {
            if (t2.length < 2 || e2.length < 2)
              return -1;
            o2 = 2, s2 /= 2, h2 /= 2, r2 /= 2;
          }
          function l2(t3, e3) {
            return 1 === o2 ? t3[e3] : t3.readUInt16BE(e3 * o2);
          }
          if (n2) {
            var f2 = -1;
            for (a2 = r2; a2 < s2; a2++)
              if (l2(t2, a2) === l2(e2, -1 === f2 ? 0 : a2 - f2)) {
                if (-1 === f2 && (f2 = a2), a2 - f2 + 1 === h2)
                  return f2 * o2;
              } else
                -1 !== f2 && (a2 -= a2 - f2), f2 = -1;
          } else
            for (r2 + h2 > s2 && (r2 = s2 - h2), a2 = r2; a2 >= 0; a2--) {
              for (var u2 = true, c2 = 0; c2 < h2; c2++)
                if (l2(t2, a2 + c2) !== l2(e2, c2)) {
                  u2 = false;
                  break;
                }
              if (u2)
                return a2;
            }
          return -1;
        }
        function _(t2, e2, r2, i2) {
          r2 = Number(r2) || 0;
          var n2 = t2.length - r2;
          i2 ? (i2 = Number(i2)) > n2 && (i2 = n2) : i2 = n2;
          var a2 = e2.length;
          i2 > a2 / 2 && (i2 = a2 / 2);
          for (var o2 = 0; o2 < i2; ++o2) {
            var s2 = parseInt(e2.substr(2 * o2, 2), 16);
            if (j(s2))
              return o2;
            t2[r2 + o2] = s2;
          }
          return o2;
        }
        function y(t2, e2, r2, i2) {
          return N(z(e2, t2.length - r2), t2, r2, i2);
        }
        function w(t2, e2, r2, i2) {
          return N(function(t3) {
            for (var e3 = [], r3 = 0; r3 < t3.length; ++r3)
              e3.push(255 & t3.charCodeAt(r3));
            return e3;
          }(e2), t2, r2, i2);
        }
        function v(t2, e2, r2, i2) {
          return w(t2, e2, r2, i2);
        }
        function x(t2, e2, r2, i2) {
          return N(D(e2), t2, r2, i2);
        }
        function E(t2, e2, r2, i2) {
          return N(function(t3, e3) {
            for (var r3, i3, n2, a2 = [], o2 = 0; o2 < t3.length && !((e3 -= 2) < 0); ++o2)
              i3 = (r3 = t3.charCodeAt(o2)) >> 8, n2 = r3 % 256, a2.push(n2), a2.push(i3);
            return a2;
          }(e2, t2.length - r2), t2, r2, i2);
        }
        function k(t2, e2, r2) {
          return 0 === e2 && r2 === t2.length ? i.fromByteArray(t2) : i.fromByteArray(t2.slice(e2, r2));
        }
        function S(t2, e2, r2) {
          r2 = Math.min(t2.length, r2);
          for (var i2 = [], n2 = e2; n2 < r2; ) {
            var a2, o2, s2, h2, l2 = t2[n2], f2 = null, u2 = l2 > 239 ? 4 : l2 > 223 ? 3 : l2 > 191 ? 2 : 1;
            if (n2 + u2 <= r2)
              switch (u2) {
                case 1:
                  l2 < 128 && (f2 = l2);
                  break;
                case 2:
                  128 == (192 & (a2 = t2[n2 + 1])) && (h2 = (31 & l2) << 6 | 63 & a2) > 127 && (f2 = h2);
                  break;
                case 3:
                  a2 = t2[n2 + 1], o2 = t2[n2 + 2], 128 == (192 & a2) && 128 == (192 & o2) && (h2 = (15 & l2) << 12 | (63 & a2) << 6 | 63 & o2) > 2047 && (h2 < 55296 || h2 > 57343) && (f2 = h2);
                  break;
                case 4:
                  a2 = t2[n2 + 1], o2 = t2[n2 + 2], s2 = t2[n2 + 3], 128 == (192 & a2) && 128 == (192 & o2) && 128 == (192 & s2) && (h2 = (15 & l2) << 18 | (63 & a2) << 12 | (63 & o2) << 6 | 63 & s2) > 65535 && h2 < 1114112 && (f2 = h2);
              }
            null === f2 ? (f2 = 65533, u2 = 1) : f2 > 65535 && (f2 -= 65536, i2.push(f2 >>> 10 & 1023 | 55296), f2 = 56320 | 1023 & f2), i2.push(f2), n2 += u2;
          }
          return function(t3) {
            var e3 = t3.length;
            if (e3 <= M)
              return String.fromCharCode.apply(String, t3);
            for (var r3 = "", i3 = 0; i3 < e3; )
              r3 += String.fromCharCode.apply(String, t3.slice(i3, i3 += M));
            return r3;
          }(i2);
        }
        s.TYPED_ARRAY_SUPPORT = function() {
          try {
            var t2 = new Uint8Array(1);
            return t2.__proto__ = { __proto__: Uint8Array.prototype, foo: function() {
              return 42;
            } }, 42 === t2.foo();
          } catch (t3) {
            return false;
          }
        }(), s.TYPED_ARRAY_SUPPORT || "undefined" == typeof console || "function" != typeof console.error || console.error("This browser lacks typed array (Uint8Array) support which is required by `buffer` v5.x. Use `buffer` v4.x if you require old browser support."), Object.defineProperty(s.prototype, "parent", { enumerable: true, get: function() {
          if (s.isBuffer(this))
            return this.buffer;
        } }), Object.defineProperty(s.prototype, "offset", { enumerable: true, get: function() {
          if (s.isBuffer(this))
            return this.byteOffset;
        } }), "undefined" != typeof Symbol && null != Symbol.species && s[Symbol.species] === s && Object.defineProperty(s, Symbol.species, { value: null, configurable: true, enumerable: false, writable: false }), s.poolSize = 8192, s.from = function(t2, e2, r2) {
          return h(t2, e2, r2);
        }, s.prototype.__proto__ = Uint8Array.prototype, s.__proto__ = Uint8Array, s.alloc = function(t2, e2, r2) {
          return function(t3, e3, r3) {
            return l(t3), t3 <= 0 ? o(t3) : void 0 !== e3 ? "string" == typeof r3 ? o(t3).fill(e3, r3) : o(t3).fill(e3) : o(t3);
          }(t2, e2, r2);
        }, s.allocUnsafe = function(t2) {
          return f(t2);
        }, s.allocUnsafeSlow = function(t2) {
          return f(t2);
        }, s.isBuffer = function(t2) {
          return null != t2 && true === t2._isBuffer && t2 !== s.prototype;
        }, s.compare = function(t2, e2) {
          if (F(t2, Uint8Array) && (t2 = s.from(t2, t2.offset, t2.byteLength)), F(e2, Uint8Array) && (e2 = s.from(e2, e2.offset, e2.byteLength)), !s.isBuffer(t2) || !s.isBuffer(e2))
            throw new TypeError('The "buf1", "buf2" arguments must be one of type Buffer or Uint8Array');
          if (t2 === e2)
            return 0;
          for (var r2 = t2.length, i2 = e2.length, n2 = 0, a2 = Math.min(r2, i2); n2 < a2; ++n2)
            if (t2[n2] !== e2[n2]) {
              r2 = t2[n2], i2 = e2[n2];
              break;
            }
          return r2 < i2 ? -1 : i2 < r2 ? 1 : 0;
        }, s.isEncoding = function(t2) {
          switch (String(t2).toLowerCase()) {
            case "hex":
            case "utf8":
            case "utf-8":
            case "ascii":
            case "latin1":
            case "binary":
            case "base64":
            case "ucs2":
            case "ucs-2":
            case "utf16le":
            case "utf-16le":
              return true;
            default:
              return false;
          }
        }, s.concat = function(t2, e2) {
          if (!Array.isArray(t2))
            throw new TypeError('"list" argument must be an Array of Buffers');
          if (0 === t2.length)
            return s.alloc(0);
          var r2;
          if (void 0 === e2)
            for (e2 = 0, r2 = 0; r2 < t2.length; ++r2)
              e2 += t2[r2].length;
          var i2 = s.allocUnsafe(e2), n2 = 0;
          for (r2 = 0; r2 < t2.length; ++r2) {
            var a2 = t2[r2];
            if (F(a2, Uint8Array) && (a2 = s.from(a2)), !s.isBuffer(a2))
              throw new TypeError('"list" argument must be an Array of Buffers');
            a2.copy(i2, n2), n2 += a2.length;
          }
          return i2;
        }, s.byteLength = d, s.prototype._isBuffer = true, s.prototype.swap16 = function() {
          var t2 = this.length;
          if (t2 % 2 != 0)
            throw new RangeError("Buffer size must be a multiple of 16-bits");
          for (var e2 = 0; e2 < t2; e2 += 2)
            m(this, e2, e2 + 1);
          return this;
        }, s.prototype.swap32 = function() {
          var t2 = this.length;
          if (t2 % 4 != 0)
            throw new RangeError("Buffer size must be a multiple of 32-bits");
          for (var e2 = 0; e2 < t2; e2 += 4)
            m(this, e2, e2 + 3), m(this, e2 + 1, e2 + 2);
          return this;
        }, s.prototype.swap64 = function() {
          var t2 = this.length;
          if (t2 % 8 != 0)
            throw new RangeError("Buffer size must be a multiple of 64-bits");
          for (var e2 = 0; e2 < t2; e2 += 8)
            m(this, e2, e2 + 7), m(this, e2 + 1, e2 + 6), m(this, e2 + 2, e2 + 5), m(this, e2 + 3, e2 + 4);
          return this;
        }, s.prototype.toString = function() {
          var t2 = this.length;
          return 0 === t2 ? "" : 0 === arguments.length ? S(this, 0, t2) : p.apply(this, arguments);
        }, s.prototype.toLocaleString = s.prototype.toString, s.prototype.equals = function(t2) {
          if (!s.isBuffer(t2))
            throw new TypeError("Argument must be a Buffer");
          return this === t2 || 0 === s.compare(this, t2);
        }, s.prototype.inspect = function() {
          var t2 = "", r2 = e.h2;
          return t2 = this.toString("hex", 0, r2).replace(/(.{2})/g, "$1 ").trim(), this.length > r2 && (t2 += " ... "), "<Buffer " + t2 + ">";
        }, s.prototype.compare = function(t2, e2, r2, i2, n2) {
          if (F(t2, Uint8Array) && (t2 = s.from(t2, t2.offset, t2.byteLength)), !s.isBuffer(t2))
            throw new TypeError('The "target" argument must be one of type Buffer or Uint8Array. Received type ' + typeof t2);
          if (void 0 === e2 && (e2 = 0), void 0 === r2 && (r2 = t2 ? t2.length : 0), void 0 === i2 && (i2 = 0), void 0 === n2 && (n2 = this.length), e2 < 0 || r2 > t2.length || i2 < 0 || n2 > this.length)
            throw new RangeError("out of range index");
          if (i2 >= n2 && e2 >= r2)
            return 0;
          if (i2 >= n2)
            return -1;
          if (e2 >= r2)
            return 1;
          if (this === t2)
            return 0;
          for (var a2 = (n2 >>>= 0) - (i2 >>>= 0), o2 = (r2 >>>= 0) - (e2 >>>= 0), h2 = Math.min(a2, o2), l2 = this.slice(i2, n2), f2 = t2.slice(e2, r2), u2 = 0; u2 < h2; ++u2)
            if (l2[u2] !== f2[u2]) {
              a2 = l2[u2], o2 = f2[u2];
              break;
            }
          return a2 < o2 ? -1 : o2 < a2 ? 1 : 0;
        }, s.prototype.includes = function(t2, e2, r2) {
          return -1 !== this.indexOf(t2, e2, r2);
        }, s.prototype.indexOf = function(t2, e2, r2) {
          return g(this, t2, e2, r2, true);
        }, s.prototype.lastIndexOf = function(t2, e2, r2) {
          return g(this, t2, e2, r2, false);
        }, s.prototype.write = function(t2, e2, r2, i2) {
          if (void 0 === e2)
            i2 = "utf8", r2 = this.length, e2 = 0;
          else if (void 0 === r2 && "string" == typeof e2)
            i2 = e2, r2 = this.length, e2 = 0;
          else {
            if (!isFinite(e2))
              throw new Error("Buffer.write(string, encoding, offset[, length]) is no longer supported");
            e2 >>>= 0, isFinite(r2) ? (r2 >>>= 0, void 0 === i2 && (i2 = "utf8")) : (i2 = r2, r2 = void 0);
          }
          var n2 = this.length - e2;
          if ((void 0 === r2 || r2 > n2) && (r2 = n2), t2.length > 0 && (r2 < 0 || e2 < 0) || e2 > this.length)
            throw new RangeError("Attempt to write outside buffer bounds");
          i2 || (i2 = "utf8");
          for (var a2 = false; ; )
            switch (i2) {
              case "hex":
                return _(this, t2, e2, r2);
              case "utf8":
              case "utf-8":
                return y(this, t2, e2, r2);
              case "ascii":
                return w(this, t2, e2, r2);
              case "latin1":
              case "binary":
                return v(this, t2, e2, r2);
              case "base64":
                return x(this, t2, e2, r2);
              case "ucs2":
              case "ucs-2":
              case "utf16le":
              case "utf-16le":
                return E(this, t2, e2, r2);
              default:
                if (a2)
                  throw new TypeError("Unknown encoding: " + i2);
                i2 = ("" + i2).toLowerCase(), a2 = true;
            }
        }, s.prototype.toJSON = function() {
          return { type: "Buffer", data: Array.prototype.slice.call(this._arr || this, 0) };
        };
        var M = 4096;
        function A(t2, e2, r2) {
          var i2 = "";
          r2 = Math.min(t2.length, r2);
          for (var n2 = e2; n2 < r2; ++n2)
            i2 += String.fromCharCode(127 & t2[n2]);
          return i2;
        }
        function I(t2, e2, r2) {
          var i2 = "";
          r2 = Math.min(t2.length, r2);
          for (var n2 = e2; n2 < r2; ++n2)
            i2 += String.fromCharCode(t2[n2]);
          return i2;
        }
        function B(t2, e2, r2) {
          var i2, n2 = t2.length;
          (!e2 || e2 < 0) && (e2 = 0), (!r2 || r2 < 0 || r2 > n2) && (r2 = n2);
          for (var a2 = "", o2 = e2; o2 < r2; ++o2)
            a2 += (i2 = t2[o2]) < 16 ? "0" + i2.toString(16) : i2.toString(16);
          return a2;
        }
        function T(t2, e2, r2) {
          for (var i2 = t2.slice(e2, r2), n2 = "", a2 = 0; a2 < i2.length; a2 += 2)
            n2 += String.fromCharCode(i2[a2] + 256 * i2[a2 + 1]);
          return n2;
        }
        function R(t2, e2, r2) {
          if (t2 % 1 != 0 || t2 < 0)
            throw new RangeError("offset is not uint");
          if (t2 + e2 > r2)
            throw new RangeError("Trying to access beyond buffer length");
        }
        function P(t2, e2, r2, i2, n2, a2) {
          if (!s.isBuffer(t2))
            throw new TypeError('"buffer" argument must be a Buffer instance');
          if (e2 > n2 || e2 < a2)
            throw new RangeError('"value" argument is out of bounds');
          if (r2 + i2 > t2.length)
            throw new RangeError("Index out of range");
        }
        function O(t2, e2, r2, i2, n2, a2) {
          if (r2 + i2 > t2.length)
            throw new RangeError("Index out of range");
          if (r2 < 0)
            throw new RangeError("Index out of range");
        }
        function L(t2, e2, r2, i2, a2) {
          return e2 = +e2, r2 >>>= 0, a2 || O(t2, 0, r2, 4), n.write(t2, e2, r2, i2, 23, 4), r2 + 4;
        }
        function C(t2, e2, r2, i2, a2) {
          return e2 = +e2, r2 >>>= 0, a2 || O(t2, 0, r2, 8), n.write(t2, e2, r2, i2, 52, 8), r2 + 8;
        }
        s.prototype.slice = function(t2, e2) {
          var r2 = this.length;
          (t2 = ~~t2) < 0 ? (t2 += r2) < 0 && (t2 = 0) : t2 > r2 && (t2 = r2), (e2 = void 0 === e2 ? r2 : ~~e2) < 0 ? (e2 += r2) < 0 && (e2 = 0) : e2 > r2 && (e2 = r2), e2 < t2 && (e2 = t2);
          var i2 = this.subarray(t2, e2);
          return i2.__proto__ = s.prototype, i2;
        }, s.prototype.readUIntLE = function(t2, e2, r2) {
          t2 >>>= 0, e2 >>>= 0, r2 || R(t2, e2, this.length);
          for (var i2 = this[t2], n2 = 1, a2 = 0; ++a2 < e2 && (n2 *= 256); )
            i2 += this[t2 + a2] * n2;
          return i2;
        }, s.prototype.readUIntBE = function(t2, e2, r2) {
          t2 >>>= 0, e2 >>>= 0, r2 || R(t2, e2, this.length);
          for (var i2 = this[t2 + --e2], n2 = 1; e2 > 0 && (n2 *= 256); )
            i2 += this[t2 + --e2] * n2;
          return i2;
        }, s.prototype.readUInt8 = function(t2, e2) {
          return t2 >>>= 0, e2 || R(t2, 1, this.length), this[t2];
        }, s.prototype.readUInt16LE = function(t2, e2) {
          return t2 >>>= 0, e2 || R(t2, 2, this.length), this[t2] | this[t2 + 1] << 8;
        }, s.prototype.readUInt16BE = function(t2, e2) {
          return t2 >>>= 0, e2 || R(t2, 2, this.length), this[t2] << 8 | this[t2 + 1];
        }, s.prototype.readUInt32LE = function(t2, e2) {
          return t2 >>>= 0, e2 || R(t2, 4, this.length), (this[t2] | this[t2 + 1] << 8 | this[t2 + 2] << 16) + 16777216 * this[t2 + 3];
        }, s.prototype.readUInt32BE = function(t2, e2) {
          return t2 >>>= 0, e2 || R(t2, 4, this.length), 16777216 * this[t2] + (this[t2 + 1] << 16 | this[t2 + 2] << 8 | this[t2 + 3]);
        }, s.prototype.readIntLE = function(t2, e2, r2) {
          t2 >>>= 0, e2 >>>= 0, r2 || R(t2, e2, this.length);
          for (var i2 = this[t2], n2 = 1, a2 = 0; ++a2 < e2 && (n2 *= 256); )
            i2 += this[t2 + a2] * n2;
          return i2 >= (n2 *= 128) && (i2 -= Math.pow(2, 8 * e2)), i2;
        }, s.prototype.readIntBE = function(t2, e2, r2) {
          t2 >>>= 0, e2 >>>= 0, r2 || R(t2, e2, this.length);
          for (var i2 = e2, n2 = 1, a2 = this[t2 + --i2]; i2 > 0 && (n2 *= 256); )
            a2 += this[t2 + --i2] * n2;
          return a2 >= (n2 *= 128) && (a2 -= Math.pow(2, 8 * e2)), a2;
        }, s.prototype.readInt8 = function(t2, e2) {
          return t2 >>>= 0, e2 || R(t2, 1, this.length), 128 & this[t2] ? -1 * (255 - this[t2] + 1) : this[t2];
        }, s.prototype.readInt16LE = function(t2, e2) {
          t2 >>>= 0, e2 || R(t2, 2, this.length);
          var r2 = this[t2] | this[t2 + 1] << 8;
          return 32768 & r2 ? 4294901760 | r2 : r2;
        }, s.prototype.readInt16BE = function(t2, e2) {
          t2 >>>= 0, e2 || R(t2, 2, this.length);
          var r2 = this[t2 + 1] | this[t2] << 8;
          return 32768 & r2 ? 4294901760 | r2 : r2;
        }, s.prototype.readInt32LE = function(t2, e2) {
          return t2 >>>= 0, e2 || R(t2, 4, this.length), this[t2] | this[t2 + 1] << 8 | this[t2 + 2] << 16 | this[t2 + 3] << 24;
        }, s.prototype.readInt32BE = function(t2, e2) {
          return t2 >>>= 0, e2 || R(t2, 4, this.length), this[t2] << 24 | this[t2 + 1] << 16 | this[t2 + 2] << 8 | this[t2 + 3];
        }, s.prototype.readFloatLE = function(t2, e2) {
          return t2 >>>= 0, e2 || R(t2, 4, this.length), n.read(this, t2, true, 23, 4);
        }, s.prototype.readFloatBE = function(t2, e2) {
          return t2 >>>= 0, e2 || R(t2, 4, this.length), n.read(this, t2, false, 23, 4);
        }, s.prototype.readDoubleLE = function(t2, e2) {
          return t2 >>>= 0, e2 || R(t2, 8, this.length), n.read(this, t2, true, 52, 8);
        }, s.prototype.readDoubleBE = function(t2, e2) {
          return t2 >>>= 0, e2 || R(t2, 8, this.length), n.read(this, t2, false, 52, 8);
        }, s.prototype.writeUIntLE = function(t2, e2, r2, i2) {
          t2 = +t2, e2 >>>= 0, r2 >>>= 0, i2 || P(this, t2, e2, r2, Math.pow(2, 8 * r2) - 1, 0);
          var n2 = 1, a2 = 0;
          for (this[e2] = 255 & t2; ++a2 < r2 && (n2 *= 256); )
            this[e2 + a2] = t2 / n2 & 255;
          return e2 + r2;
        }, s.prototype.writeUIntBE = function(t2, e2, r2, i2) {
          t2 = +t2, e2 >>>= 0, r2 >>>= 0, i2 || P(this, t2, e2, r2, Math.pow(2, 8 * r2) - 1, 0);
          var n2 = r2 - 1, a2 = 1;
          for (this[e2 + n2] = 255 & t2; --n2 >= 0 && (a2 *= 256); )
            this[e2 + n2] = t2 / a2 & 255;
          return e2 + r2;
        }, s.prototype.writeUInt8 = function(t2, e2, r2) {
          return t2 = +t2, e2 >>>= 0, r2 || P(this, t2, e2, 1, 255, 0), this[e2] = 255 & t2, e2 + 1;
        }, s.prototype.writeUInt16LE = function(t2, e2, r2) {
          return t2 = +t2, e2 >>>= 0, r2 || P(this, t2, e2, 2, 65535, 0), this[e2] = 255 & t2, this[e2 + 1] = t2 >>> 8, e2 + 2;
        }, s.prototype.writeUInt16BE = function(t2, e2, r2) {
          return t2 = +t2, e2 >>>= 0, r2 || P(this, t2, e2, 2, 65535, 0), this[e2] = t2 >>> 8, this[e2 + 1] = 255 & t2, e2 + 2;
        }, s.prototype.writeUInt32LE = function(t2, e2, r2) {
          return t2 = +t2, e2 >>>= 0, r2 || P(this, t2, e2, 4, 4294967295, 0), this[e2 + 3] = t2 >>> 24, this[e2 + 2] = t2 >>> 16, this[e2 + 1] = t2 >>> 8, this[e2] = 255 & t2, e2 + 4;
        }, s.prototype.writeUInt32BE = function(t2, e2, r2) {
          return t2 = +t2, e2 >>>= 0, r2 || P(this, t2, e2, 4, 4294967295, 0), this[e2] = t2 >>> 24, this[e2 + 1] = t2 >>> 16, this[e2 + 2] = t2 >>> 8, this[e2 + 3] = 255 & t2, e2 + 4;
        }, s.prototype.writeIntLE = function(t2, e2, r2, i2) {
          if (t2 = +t2, e2 >>>= 0, !i2) {
            var n2 = Math.pow(2, 8 * r2 - 1);
            P(this, t2, e2, r2, n2 - 1, -n2);
          }
          var a2 = 0, o2 = 1, s2 = 0;
          for (this[e2] = 255 & t2; ++a2 < r2 && (o2 *= 256); )
            t2 < 0 && 0 === s2 && 0 !== this[e2 + a2 - 1] && (s2 = 1), this[e2 + a2] = (t2 / o2 >> 0) - s2 & 255;
          return e2 + r2;
        }, s.prototype.writeIntBE = function(t2, e2, r2, i2) {
          if (t2 = +t2, e2 >>>= 0, !i2) {
            var n2 = Math.pow(2, 8 * r2 - 1);
            P(this, t2, e2, r2, n2 - 1, -n2);
          }
          var a2 = r2 - 1, o2 = 1, s2 = 0;
          for (this[e2 + a2] = 255 & t2; --a2 >= 0 && (o2 *= 256); )
            t2 < 0 && 0 === s2 && 0 !== this[e2 + a2 + 1] && (s2 = 1), this[e2 + a2] = (t2 / o2 >> 0) - s2 & 255;
          return e2 + r2;
        }, s.prototype.writeInt8 = function(t2, e2, r2) {
          return t2 = +t2, e2 >>>= 0, r2 || P(this, t2, e2, 1, 127, -128), t2 < 0 && (t2 = 255 + t2 + 1), this[e2] = 255 & t2, e2 + 1;
        }, s.prototype.writeInt16LE = function(t2, e2, r2) {
          return t2 = +t2, e2 >>>= 0, r2 || P(this, t2, e2, 2, 32767, -32768), this[e2] = 255 & t2, this[e2 + 1] = t2 >>> 8, e2 + 2;
        }, s.prototype.writeInt16BE = function(t2, e2, r2) {
          return t2 = +t2, e2 >>>= 0, r2 || P(this, t2, e2, 2, 32767, -32768), this[e2] = t2 >>> 8, this[e2 + 1] = 255 & t2, e2 + 2;
        }, s.prototype.writeInt32LE = function(t2, e2, r2) {
          return t2 = +t2, e2 >>>= 0, r2 || P(this, t2, e2, 4, 2147483647, -2147483648), this[e2] = 255 & t2, this[e2 + 1] = t2 >>> 8, this[e2 + 2] = t2 >>> 16, this[e2 + 3] = t2 >>> 24, e2 + 4;
        }, s.prototype.writeInt32BE = function(t2, e2, r2) {
          return t2 = +t2, e2 >>>= 0, r2 || P(this, t2, e2, 4, 2147483647, -2147483648), t2 < 0 && (t2 = 4294967295 + t2 + 1), this[e2] = t2 >>> 24, this[e2 + 1] = t2 >>> 16, this[e2 + 2] = t2 >>> 8, this[e2 + 3] = 255 & t2, e2 + 4;
        }, s.prototype.writeFloatLE = function(t2, e2, r2) {
          return L(this, t2, e2, true, r2);
        }, s.prototype.writeFloatBE = function(t2, e2, r2) {
          return L(this, t2, e2, false, r2);
        }, s.prototype.writeDoubleLE = function(t2, e2, r2) {
          return C(this, t2, e2, true, r2);
        }, s.prototype.writeDoubleBE = function(t2, e2, r2) {
          return C(this, t2, e2, false, r2);
        }, s.prototype.copy = function(t2, e2, r2, i2) {
          if (!s.isBuffer(t2))
            throw new TypeError("argument should be a Buffer");
          if (r2 || (r2 = 0), i2 || 0 === i2 || (i2 = this.length), e2 >= t2.length && (e2 = t2.length), e2 || (e2 = 0), i2 > 0 && i2 < r2 && (i2 = r2), i2 === r2)
            return 0;
          if (0 === t2.length || 0 === this.length)
            return 0;
          if (e2 < 0)
            throw new RangeError("targetStart out of bounds");
          if (r2 < 0 || r2 >= this.length)
            throw new RangeError("Index out of range");
          if (i2 < 0)
            throw new RangeError("sourceEnd out of bounds");
          i2 > this.length && (i2 = this.length), t2.length - e2 < i2 - r2 && (i2 = t2.length - e2 + r2);
          var n2 = i2 - r2;
          if (this === t2 && "function" == typeof Uint8Array.prototype.copyWithin)
            this.copyWithin(e2, r2, i2);
          else if (this === t2 && r2 < e2 && e2 < i2)
            for (var a2 = n2 - 1; a2 >= 0; --a2)
              t2[a2 + e2] = this[a2 + r2];
          else
            Uint8Array.prototype.set.call(t2, this.subarray(r2, i2), e2);
          return n2;
        }, s.prototype.fill = function(t2, e2, r2, i2) {
          if ("string" == typeof t2) {
            if ("string" == typeof e2 ? (i2 = e2, e2 = 0, r2 = this.length) : "string" == typeof r2 && (i2 = r2, r2 = this.length), void 0 !== i2 && "string" != typeof i2)
              throw new TypeError("encoding must be a string");
            if ("string" == typeof i2 && !s.isEncoding(i2))
              throw new TypeError("Unknown encoding: " + i2);
            if (1 === t2.length) {
              var n2 = t2.charCodeAt(0);
              ("utf8" === i2 && n2 < 128 || "latin1" === i2) && (t2 = n2);
            }
          } else
            "number" == typeof t2 && (t2 &= 255);
          if (e2 < 0 || this.length < e2 || this.length < r2)
            throw new RangeError("Out of range index");
          if (r2 <= e2)
            return this;
          var a2;
          if (e2 >>>= 0, r2 = void 0 === r2 ? this.length : r2 >>> 0, t2 || (t2 = 0), "number" == typeof t2)
            for (a2 = e2; a2 < r2; ++a2)
              this[a2] = t2;
          else {
            var o2 = s.isBuffer(t2) ? t2 : s.from(t2, i2), h2 = o2.length;
            if (0 === h2)
              throw new TypeError('The value "' + t2 + '" is invalid for argument "value"');
            for (a2 = 0; a2 < r2 - e2; ++a2)
              this[a2 + e2] = o2[a2 % h2];
          }
          return this;
        };
        var U = /[^+/0-9A-Za-z-_]/g;
        function z(t2, e2) {
          var r2;
          e2 = e2 || 1 / 0;
          for (var i2 = t2.length, n2 = null, a2 = [], o2 = 0; o2 < i2; ++o2) {
            if ((r2 = t2.charCodeAt(o2)) > 55295 && r2 < 57344) {
              if (!n2) {
                if (r2 > 56319) {
                  (e2 -= 3) > -1 && a2.push(239, 191, 189);
                  continue;
                }
                if (o2 + 1 === i2) {
                  (e2 -= 3) > -1 && a2.push(239, 191, 189);
                  continue;
                }
                n2 = r2;
                continue;
              }
              if (r2 < 56320) {
                (e2 -= 3) > -1 && a2.push(239, 191, 189), n2 = r2;
                continue;
              }
              r2 = 65536 + (n2 - 55296 << 10 | r2 - 56320);
            } else
              n2 && (e2 -= 3) > -1 && a2.push(239, 191, 189);
            if (n2 = null, r2 < 128) {
              if ((e2 -= 1) < 0)
                break;
              a2.push(r2);
            } else if (r2 < 2048) {
              if ((e2 -= 2) < 0)
                break;
              a2.push(r2 >> 6 | 192, 63 & r2 | 128);
            } else if (r2 < 65536) {
              if ((e2 -= 3) < 0)
                break;
              a2.push(r2 >> 12 | 224, r2 >> 6 & 63 | 128, 63 & r2 | 128);
            } else {
              if (!(r2 < 1114112))
                throw new Error("Invalid code point");
              if ((e2 -= 4) < 0)
                break;
              a2.push(r2 >> 18 | 240, r2 >> 12 & 63 | 128, r2 >> 6 & 63 | 128, 63 & r2 | 128);
            }
          }
          return a2;
        }
        function D(t2) {
          return i.toByteArray(function(t3) {
            if ((t3 = (t3 = t3.split("=")[0]).trim().replace(U, "")).length < 2)
              return "";
            for (; t3.length % 4 != 0; )
              t3 += "=";
            return t3;
          }(t2));
        }
        function N(t2, e2, r2, i2) {
          for (var n2 = 0; n2 < i2 && !(n2 + r2 >= e2.length || n2 >= t2.length); ++n2)
            e2[n2 + r2] = t2[n2];
          return n2;
        }
        function F(t2, e2) {
          return t2 instanceof e2 || null != t2 && null != t2.constructor && null != t2.constructor.name && t2.constructor.name === e2.name;
        }
        function j(t2) {
          return t2 != t2;
        }
      }, 4181: (t, e) => {
        e.read = function(t2, e2, r, i, n) {
          var a, o, s = 8 * n - i - 1, h = (1 << s) - 1, l = h >> 1, f = -7, u = r ? n - 1 : 0, c = r ? -1 : 1, d = t2[e2 + u];
          for (u += c, a = d & (1 << -f) - 1, d >>= -f, f += s; f > 0; a = 256 * a + t2[e2 + u], u += c, f -= 8)
            ;
          for (o = a & (1 << -f) - 1, a >>= -f, f += i; f > 0; o = 256 * o + t2[e2 + u], u += c, f -= 8)
            ;
          if (0 === a)
            a = 1 - l;
          else {
            if (a === h)
              return o ? NaN : 1 / 0 * (d ? -1 : 1);
            o += Math.pow(2, i), a -= l;
          }
          return (d ? -1 : 1) * o * Math.pow(2, a - i);
        }, e.write = function(t2, e2, r, i, n, a) {
          var o, s, h, l = 8 * a - n - 1, f = (1 << l) - 1, u = f >> 1, c = 23 === n ? Math.pow(2, -24) - Math.pow(2, -77) : 0, d = i ? 0 : a - 1, p = i ? 1 : -1, m = e2 < 0 || 0 === e2 && 1 / e2 < 0 ? 1 : 0;
          for (e2 = Math.abs(e2), isNaN(e2) || e2 === 1 / 0 ? (s = isNaN(e2) ? 1 : 0, o = f) : (o = Math.floor(Math.log(e2) / Math.LN2), e2 * (h = Math.pow(2, -o)) < 1 && (o--, h *= 2), (e2 += o + u >= 1 ? c / h : c * Math.pow(2, 1 - u)) * h >= 2 && (o++, h /= 2), o + u >= f ? (s = 0, o = f) : o + u >= 1 ? (s = (e2 * h - 1) * Math.pow(2, n), o += u) : (s = e2 * Math.pow(2, u - 1) * Math.pow(2, n), o = 0)); n >= 8; t2[r + d] = 255 & s, d += p, s /= 256, n -= 8)
            ;
          for (o = o << n | s, l += n; l > 0; t2[r + d] = 255 & o, d += p, o /= 256, l -= 8)
            ;
          t2[r + d - p] |= 128 * m;
        };
      }, 2699: (t) => {
        "use strict";
        var e, r = "object" == typeof Reflect ? Reflect : null, i = r && "function" == typeof r.apply ? r.apply : function(t2, e2, r2) {
          return Function.prototype.apply.call(t2, e2, r2);
        };
        e = r && "function" == typeof r.ownKeys ? r.ownKeys : Object.getOwnPropertySymbols ? function(t2) {
          return Object.getOwnPropertyNames(t2).concat(Object.getOwnPropertySymbols(t2));
        } : function(t2) {
          return Object.getOwnPropertyNames(t2);
        };
        var n = Number.isNaN || function(t2) {
          return t2 != t2;
        };
        function a() {
          a.init.call(this);
        }
        t.exports = a, t.exports.once = function(t2, e2) {
          return new Promise(function(r2, i2) {
            function n2(r3) {
              t2.removeListener(e2, a2), i2(r3);
            }
            function a2() {
              "function" == typeof t2.removeListener && t2.removeListener("error", n2), r2([].slice.call(arguments));
            }
            m(t2, e2, a2, { once: true }), "error" !== e2 && function(t3, e3, r3) {
              "function" == typeof t3.on && m(t3, "error", e3, { once: true });
            }(t2, n2);
          });
        }, a.EventEmitter = a, a.prototype._events = void 0, a.prototype._eventsCount = 0, a.prototype._maxListeners = void 0;
        var o = 10;
        function s(t2) {
          if ("function" != typeof t2)
            throw new TypeError('The "listener" argument must be of type Function. Received type ' + typeof t2);
        }
        function h(t2) {
          return void 0 === t2._maxListeners ? a.defaultMaxListeners : t2._maxListeners;
        }
        function l(t2, e2, r2, i2) {
          var n2, a2, o2, l2;
          if (s(r2), void 0 === (a2 = t2._events) ? (a2 = t2._events = /* @__PURE__ */ Object.create(null), t2._eventsCount = 0) : (void 0 !== a2.newListener && (t2.emit("newListener", e2, r2.listener ? r2.listener : r2), a2 = t2._events), o2 = a2[e2]), void 0 === o2)
            o2 = a2[e2] = r2, ++t2._eventsCount;
          else if ("function" == typeof o2 ? o2 = a2[e2] = i2 ? [r2, o2] : [o2, r2] : i2 ? o2.unshift(r2) : o2.push(r2), (n2 = h(t2)) > 0 && o2.length > n2 && !o2.warned) {
            o2.warned = true;
            var f2 = new Error("Possible EventEmitter memory leak detected. " + o2.length + " " + String(e2) + " listeners added. Use emitter.setMaxListeners() to increase limit");
            f2.name = "MaxListenersExceededWarning", f2.emitter = t2, f2.type = e2, f2.count = o2.length, l2 = f2, console && console.warn && console.warn(l2);
          }
          return t2;
        }
        function f() {
          if (!this.fired)
            return this.target.removeListener(this.type, this.wrapFn), this.fired = true, 0 === arguments.length ? this.listener.call(this.target) : this.listener.apply(this.target, arguments);
        }
        function u(t2, e2, r2) {
          var i2 = { fired: false, wrapFn: void 0, target: t2, type: e2, listener: r2 }, n2 = f.bind(i2);
          return n2.listener = r2, i2.wrapFn = n2, n2;
        }
        function c(t2, e2, r2) {
          var i2 = t2._events;
          if (void 0 === i2)
            return [];
          var n2 = i2[e2];
          return void 0 === n2 ? [] : "function" == typeof n2 ? r2 ? [n2.listener || n2] : [n2] : r2 ? function(t3) {
            for (var e3 = new Array(t3.length), r3 = 0; r3 < e3.length; ++r3)
              e3[r3] = t3[r3].listener || t3[r3];
            return e3;
          }(n2) : p(n2, n2.length);
        }
        function d(t2) {
          var e2 = this._events;
          if (void 0 !== e2) {
            var r2 = e2[t2];
            if ("function" == typeof r2)
              return 1;
            if (void 0 !== r2)
              return r2.length;
          }
          return 0;
        }
        function p(t2, e2) {
          for (var r2 = new Array(e2), i2 = 0; i2 < e2; ++i2)
            r2[i2] = t2[i2];
          return r2;
        }
        function m(t2, e2, r2, i2) {
          if ("function" == typeof t2.on)
            i2.once ? t2.once(e2, r2) : t2.on(e2, r2);
          else {
            if ("function" != typeof t2.addEventListener)
              throw new TypeError('The "emitter" argument must be of type EventEmitter. Received type ' + typeof t2);
            t2.addEventListener(e2, function n2(a2) {
              i2.once && t2.removeEventListener(e2, n2), r2(a2);
            });
          }
        }
        Object.defineProperty(a, "defaultMaxListeners", { enumerable: true, get: function() {
          return o;
        }, set: function(t2) {
          if ("number" != typeof t2 || t2 < 0 || n(t2))
            throw new RangeError('The value of "defaultMaxListeners" is out of range. It must be a non-negative number. Received ' + t2 + ".");
          o = t2;
        } }), a.init = function() {
          void 0 !== this._events && this._events !== Object.getPrototypeOf(this)._events || (this._events = /* @__PURE__ */ Object.create(null), this._eventsCount = 0), this._maxListeners = this._maxListeners || void 0;
        }, a.prototype.setMaxListeners = function(t2) {
          if ("number" != typeof t2 || t2 < 0 || n(t2))
            throw new RangeError('The value of "n" is out of range. It must be a non-negative number. Received ' + t2 + ".");
          return this._maxListeners = t2, this;
        }, a.prototype.getMaxListeners = function() {
          return h(this);
        }, a.prototype.emit = function(t2) {
          for (var e2 = [], r2 = 1; r2 < arguments.length; r2++)
            e2.push(arguments[r2]);
          var n2 = "error" === t2, a2 = this._events;
          if (void 0 !== a2)
            n2 = n2 && void 0 === a2.error;
          else if (!n2)
            return false;
          if (n2) {
            var o2;
            if (e2.length > 0 && (o2 = e2[0]), o2 instanceof Error)
              throw o2;
            var s2 = new Error("Unhandled error." + (o2 ? " (" + o2.message + ")" : ""));
            throw s2.context = o2, s2;
          }
          var h2 = a2[t2];
          if (void 0 === h2)
            return false;
          if ("function" == typeof h2)
            i(h2, this, e2);
          else {
            var l2 = h2.length, f2 = p(h2, l2);
            for (r2 = 0; r2 < l2; ++r2)
              i(f2[r2], this, e2);
          }
          return true;
        }, a.prototype.addListener = function(t2, e2) {
          return l(this, t2, e2, false);
        }, a.prototype.on = a.prototype.addListener, a.prototype.prependListener = function(t2, e2) {
          return l(this, t2, e2, true);
        }, a.prototype.once = function(t2, e2) {
          return s(e2), this.on(t2, u(this, t2, e2)), this;
        }, a.prototype.prependOnceListener = function(t2, e2) {
          return s(e2), this.prependListener(t2, u(this, t2, e2)), this;
        }, a.prototype.removeListener = function(t2, e2) {
          var r2, i2, n2, a2, o2;
          if (s(e2), void 0 === (i2 = this._events))
            return this;
          if (void 0 === (r2 = i2[t2]))
            return this;
          if (r2 === e2 || r2.listener === e2)
            0 == --this._eventsCount ? this._events = /* @__PURE__ */ Object.create(null) : (delete i2[t2], i2.removeListener && this.emit("removeListener", t2, r2.listener || e2));
          else if ("function" != typeof r2) {
            for (n2 = -1, a2 = r2.length - 1; a2 >= 0; a2--)
              if (r2[a2] === e2 || r2[a2].listener === e2) {
                o2 = r2[a2].listener, n2 = a2;
                break;
              }
            if (n2 < 0)
              return this;
            0 === n2 ? r2.shift() : function(t3, e3) {
              for (; e3 + 1 < t3.length; e3++)
                t3[e3] = t3[e3 + 1];
              t3.pop();
            }(r2, n2), 1 === r2.length && (i2[t2] = r2[0]), void 0 !== i2.removeListener && this.emit("removeListener", t2, o2 || e2);
          }
          return this;
        }, a.prototype.off = a.prototype.removeListener, a.prototype.removeAllListeners = function(t2) {
          var e2, r2, i2;
          if (void 0 === (r2 = this._events))
            return this;
          if (void 0 === r2.removeListener)
            return 0 === arguments.length ? (this._events = /* @__PURE__ */ Object.create(null), this._eventsCount = 0) : void 0 !== r2[t2] && (0 == --this._eventsCount ? this._events = /* @__PURE__ */ Object.create(null) : delete r2[t2]), this;
          if (0 === arguments.length) {
            var n2, a2 = Object.keys(r2);
            for (i2 = 0; i2 < a2.length; ++i2)
              "removeListener" !== (n2 = a2[i2]) && this.removeAllListeners(n2);
            return this.removeAllListeners("removeListener"), this._events = /* @__PURE__ */ Object.create(null), this._eventsCount = 0, this;
          }
          if ("function" == typeof (e2 = r2[t2]))
            this.removeListener(t2, e2);
          else if (void 0 !== e2)
            for (i2 = e2.length - 1; i2 >= 0; i2--)
              this.removeListener(t2, e2[i2]);
          return this;
        }, a.prototype.listeners = function(t2) {
          return c(this, t2, true);
        }, a.prototype.rawListeners = function(t2) {
          return c(this, t2, false);
        }, a.listenerCount = function(t2, e2) {
          return "function" == typeof t2.listenerCount ? t2.listenerCount(e2) : d.call(t2, e2);
        }, a.prototype.listenerCount = d, a.prototype.eventNames = function() {
          return this._eventsCount > 0 ? e(this._events) : [];
        };
      }, 6551: (t, e, r) => {
        var i = r(453);
        t.exports = { create: function(t2, e2) {
          if (t2 instanceof (e2 = e2 || (0, eval)("this")).ArrayBuffer) {
            var n = r(909);
            return new i(new n(t2, 0, t2.byteLength, true, e2));
          }
          var a = r(3684);
          return new i(new a(t2, 0, t2.length, true));
        } };
      }, 3684: (t) => {
        function e(t2, e2, r, i) {
          this.buffer = t2, this.offset = e2 || 0, r = "number" == typeof r ? r : t2.length, this.endPosition = this.offset + r, this.setBigEndian(i);
        }
        e.prototype = { setBigEndian: function(t2) {
          this.bigEndian = !!t2;
        }, nextUInt8: function() {
          var t2 = this.buffer.readUInt8(this.offset);
          return this.offset += 1, t2;
        }, nextInt8: function() {
          var t2 = this.buffer.readInt8(this.offset);
          return this.offset += 1, t2;
        }, nextUInt16: function() {
          var t2 = this.bigEndian ? this.buffer.readUInt16BE(this.offset) : this.buffer.readUInt16LE(this.offset);
          return this.offset += 2, t2;
        }, nextUInt32: function() {
          var t2 = this.bigEndian ? this.buffer.readUInt32BE(this.offset) : this.buffer.readUInt32LE(this.offset);
          return this.offset += 4, t2;
        }, nextInt16: function() {
          var t2 = this.bigEndian ? this.buffer.readInt16BE(this.offset) : this.buffer.readInt16LE(this.offset);
          return this.offset += 2, t2;
        }, nextInt32: function() {
          var t2 = this.bigEndian ? this.buffer.readInt32BE(this.offset) : this.buffer.readInt32LE(this.offset);
          return this.offset += 4, t2;
        }, nextFloat: function() {
          var t2 = this.bigEndian ? this.buffer.readFloatBE(this.offset) : this.buffer.readFloatLE(this.offset);
          return this.offset += 4, t2;
        }, nextDouble: function() {
          var t2 = this.bigEndian ? this.buffer.readDoubleBE(this.offset) : this.buffer.readDoubleLE(this.offset);
          return this.offset += 8, t2;
        }, nextBuffer: function(t2) {
          var e2 = this.buffer.slice(this.offset, this.offset + t2);
          return this.offset += t2, e2;
        }, remainingLength: function() {
          return this.endPosition - this.offset;
        }, nextString: function(t2) {
          var e2 = this.buffer.toString("utf8", this.offset, this.offset + t2);
          return this.offset += t2, e2;
        }, mark: function() {
          var t2 = this;
          return { openWithOffset: function(r) {
            return r = (r || 0) + this.offset, new e(t2.buffer, r, t2.endPosition - r, t2.bigEndian);
          }, offset: this.offset };
        }, offsetFrom: function(t2) {
          return this.offset - t2.offset;
        }, skip: function(t2) {
          this.offset += t2;
        }, branch: function(t2, r) {
          return r = "number" == typeof r ? r : this.endPosition - (this.offset + t2), new e(this.buffer, this.offset + t2, r, this.bigEndian);
        } }, t.exports = e;
      }, 565: (t) => {
        function e(t2) {
          return parseInt(t2, 10);
        }
        var r = 3600, i = 60;
        function n(t2, r2) {
          t2 = t2.map(e), r2 = r2.map(e);
          var i2 = t2[0], n2 = t2[1] - 1, a2 = t2[2], o2 = r2[0], s = r2[1], h = r2[2];
          return Date.UTC(i2, n2, a2, o2, s, h, 0) / 1e3;
        }
        function a(t2) {
          var a2 = t2.substr(0, 10).split("-"), o2 = t2.substr(11, 8).split(":"), s = t2.substr(19, 6).split(":").map(e), h = s[0] * r + s[1] * i, l = n(a2, o2);
          if ("number" == typeof (l -= h) && !isNaN(l))
            return l;
        }
        function o(t2) {
          var e2 = t2.split(" "), r2 = n(e2[0].split(":"), e2[1].split(":"));
          if ("number" == typeof r2 && !isNaN(r2))
            return r2;
        }
        t.exports = { parseDateWithSpecFormat: o, parseDateWithTimezoneFormat: a, parseExifDate: function(t2) {
          var e2 = 19 === t2.length && ":" === t2.charAt(4);
          return 25 === t2.length && "T" === t2.charAt(10) ? a(t2) : e2 ? o(t2) : void 0;
        } };
      }, 909: (t) => {
        function e(t2, e2, r, i, n, a) {
          this.global = n, e2 = e2 || 0, r = r || t2.byteLength - e2, this.arrayBuffer = t2.slice(e2, e2 + r), this.view = new n.DataView(this.arrayBuffer, 0, this.arrayBuffer.byteLength), this.setBigEndian(i), this.offset = 0, this.parentOffset = (a || 0) + e2;
        }
        e.prototype = { setBigEndian: function(t2) {
          this.littleEndian = !t2;
        }, nextUInt8: function() {
          var t2 = this.view.getUint8(this.offset);
          return this.offset += 1, t2;
        }, nextInt8: function() {
          var t2 = this.view.getInt8(this.offset);
          return this.offset += 1, t2;
        }, nextUInt16: function() {
          var t2 = this.view.getUint16(this.offset, this.littleEndian);
          return this.offset += 2, t2;
        }, nextUInt32: function() {
          var t2 = this.view.getUint32(this.offset, this.littleEndian);
          return this.offset += 4, t2;
        }, nextInt16: function() {
          var t2 = this.view.getInt16(this.offset, this.littleEndian);
          return this.offset += 2, t2;
        }, nextInt32: function() {
          var t2 = this.view.getInt32(this.offset, this.littleEndian);
          return this.offset += 4, t2;
        }, nextFloat: function() {
          var t2 = this.view.getFloat32(this.offset, this.littleEndian);
          return this.offset += 4, t2;
        }, nextDouble: function() {
          var t2 = this.view.getFloat64(this.offset, this.littleEndian);
          return this.offset += 8, t2;
        }, nextBuffer: function(t2) {
          var e2 = this.arrayBuffer.slice(this.offset, this.offset + t2);
          return this.offset += t2, e2;
        }, remainingLength: function() {
          return this.arrayBuffer.byteLength - this.offset;
        }, nextString: function(t2) {
          var e2 = this.arrayBuffer.slice(this.offset, this.offset + t2);
          return e2 = String.fromCharCode.apply(null, new this.global.Uint8Array(e2)), this.offset += t2, e2;
        }, mark: function() {
          var t2 = this;
          return { openWithOffset: function(r) {
            return r = (r || 0) + this.offset, new e(t2.arrayBuffer, r, t2.arrayBuffer.byteLength - r, !t2.littleEndian, t2.global, t2.parentOffset);
          }, offset: this.offset, getParentOffset: function() {
            return t2.parentOffset;
          } };
        }, offsetFrom: function(t2) {
          return this.parentOffset + this.offset - (t2.offset + t2.getParentOffset());
        }, skip: function(t2) {
          this.offset += t2;
        }, branch: function(t2, r) {
          return r = "number" == typeof r ? r : this.arrayBuffer.byteLength - (this.offset + t2), new e(this.arrayBuffer, this.offset + t2, r, !this.littleEndian, this.global, this.parentOffset);
        } }, t.exports = e;
      }, 3332: (t) => {
        t.exports = { exif: { 1: "InteropIndex", 2: "InteropVersion", 11: "ProcessingSoftware", 254: "SubfileType", 255: "OldSubfileType", 256: "ImageWidth", 257: "ImageHeight", 258: "BitsPerSample", 259: "Compression", 262: "PhotometricInterpretation", 263: "Thresholding", 264: "CellWidth", 265: "CellLength", 266: "FillOrder", 269: "DocumentName", 270: "ImageDescription", 271: "Make", 272: "Model", 273: "StripOffsets", 274: "Orientation", 277: "SamplesPerPixel", 278: "RowsPerStrip", 279: "StripByteCounts", 280: "MinSampleValue", 281: "MaxSampleValue", 282: "XResolution", 283: "YResolution", 284: "PlanarConfiguration", 285: "PageName", 286: "XPosition", 287: "YPosition", 288: "FreeOffsets", 289: "FreeByteCounts", 290: "GrayResponseUnit", 291: "GrayResponseCurve", 292: "T4Options", 293: "T6Options", 296: "ResolutionUnit", 297: "PageNumber", 300: "ColorResponseUnit", 301: "TransferFunction", 305: "Software", 306: "ModifyDate", 315: "Artist", 316: "HostComputer", 317: "Predictor", 318: "WhitePoint", 319: "PrimaryChromaticities", 320: "ColorMap", 321: "HalftoneHints", 322: "TileWidth", 323: "TileLength", 324: "TileOffsets", 325: "TileByteCounts", 326: "BadFaxLines", 327: "CleanFaxData", 328: "ConsecutiveBadFaxLines", 330: "SubIFD", 332: "InkSet", 333: "InkNames", 334: "NumberofInks", 336: "DotRange", 337: "TargetPrinter", 338: "ExtraSamples", 339: "SampleFormat", 340: "SMinSampleValue", 341: "SMaxSampleValue", 342: "TransferRange", 343: "ClipPath", 344: "XClipPathUnits", 345: "YClipPathUnits", 346: "Indexed", 347: "JPEGTables", 351: "OPIProxy", 400: "GlobalParametersIFD", 401: "ProfileType", 402: "FaxProfile", 403: "CodingMethods", 404: "VersionYear", 405: "ModeNumber", 433: "Decode", 434: "DefaultImageColor", 435: "T82Options", 437: "JPEGTables", 512: "JPEGProc", 513: "ThumbnailOffset", 514: "ThumbnailLength", 515: "JPEGRestartInterval", 517: "JPEGLosslessPredictors", 518: "JPEGPointTransforms", 519: "JPEGQTables", 520: "JPEGDCTables", 521: "JPEGACTables", 529: "YCbCrCoefficients", 530: "YCbCrSubSampling", 531: "YCbCrPositioning", 532: "ReferenceBlackWhite", 559: "StripRowCounts", 700: "ApplicationNotes", 999: "USPTOMiscellaneous", 4096: "RelatedImageFileFormat", 4097: "RelatedImageWidth", 4098: "RelatedImageHeight", 18246: "Rating", 18247: "XP_DIP_XML", 18248: "StitchInfo", 18249: "RatingPercent", 32781: "ImageID", 32931: "WangTag1", 32932: "WangAnnotation", 32933: "WangTag3", 32934: "WangTag4", 32995: "Matteing", 32996: "DataType", 32997: "ImageDepth", 32998: "TileDepth", 33405: "Model2", 33421: "CFARepeatPatternDim", 33422: "CFAPattern2", 33423: "BatteryLevel", 33424: "KodakIFD", 33432: "Copyright", 33434: "ExposureTime", 33437: "FNumber", 33445: "MDFileTag", 33446: "MDScalePixel", 33447: "MDColorTable", 33448: "MDLabName", 33449: "MDSampleInfo", 33450: "MDPrepDate", 33451: "MDPrepTime", 33452: "MDFileUnits", 33550: "PixelScale", 33589: "AdventScale", 33590: "AdventRevision", 33628: "UIC1Tag", 33629: "UIC2Tag", 33630: "UIC3Tag", 33631: "UIC4Tag", 33723: "IPTC-NAA", 33918: "IntergraphPacketData", 33919: "IntergraphFlagRegisters", 33920: "IntergraphMatrix", 33921: "INGRReserved", 33922: "ModelTiePoint", 34016: "Site", 34017: "ColorSequence", 34018: "IT8Header", 34019: "RasterPadding", 34020: "BitsPerRunLength", 34021: "BitsPerExtendedRunLength", 34022: "ColorTable", 34023: "ImageColorIndicator", 34024: "BackgroundColorIndicator", 34025: "ImageColorValue", 34026: "BackgroundColorValue", 34027: "PixelIntensityRange", 34028: "TransparencyIndicator", 34029: "ColorCharacterization", 34030: "HCUsage", 34031: "TrapIndicator", 34032: "CMYKEquivalent", 34118: "SEMInfo", 34152: "AFCP_IPTC", 34232: "PixelMagicJBIGOptions", 34264: "ModelTransform", 34306: "WB_GRGBLevels", 34310: "LeafData", 34377: "PhotoshopSettings", 34665: "ExifOffset", 34675: "ICC_Profile", 34687: "TIFF_FXExtensions", 34688: "MultiProfiles", 34689: "SharedData", 34690: "T88Options", 34732: "ImageLayer", 34735: "GeoTiffDirectory", 34736: "GeoTiffDoubleParams", 34737: "GeoTiffAsciiParams", 34850: "ExposureProgram", 34852: "SpectralSensitivity", 34853: "GPSInfo", 34855: "ISO", 34856: "Opto-ElectricConvFactor", 34857: "Interlace", 34858: "TimeZoneOffset", 34859: "SelfTimerMode", 34864: "SensitivityType", 34865: "StandardOutputSensitivity", 34866: "RecommendedExposureIndex", 34867: "ISOSpeed", 34868: "ISOSpeedLatitudeyyy", 34869: "ISOSpeedLatitudezzz", 34908: "FaxRecvParams", 34909: "FaxSubAddress", 34910: "FaxRecvTime", 34954: "LeafSubIFD", 36864: "ExifVersion", 36867: "DateTimeOriginal", 36868: "CreateDate", 37121: "ComponentsConfiguration", 37122: "CompressedBitsPerPixel", 37377: "ShutterSpeedValue", 37378: "ApertureValue", 37379: "BrightnessValue", 37380: "ExposureCompensation", 37381: "MaxApertureValue", 37382: "SubjectDistance", 37383: "MeteringMode", 37384: "LightSource", 37385: "Flash", 37386: "FocalLength", 37387: "FlashEnergy", 37388: "SpatialFrequencyResponse", 37389: "Noise", 37390: "FocalPlaneXResolution", 37391: "FocalPlaneYResolution", 37392: "FocalPlaneResolutionUnit", 37393: "ImageNumber", 37394: "SecurityClassification", 37395: "ImageHistory", 37396: "SubjectArea", 37397: "ExposureIndex", 37398: "TIFF-EPStandardID", 37399: "SensingMethod", 37434: "CIP3DataFile", 37435: "CIP3Sheet", 37436: "CIP3Side", 37439: "StoNits", 37500: "MakerNote", 37510: "UserComment", 37520: "SubSecTime", 37521: "SubSecTimeOriginal", 37522: "SubSecTimeDigitized", 37679: "MSDocumentText", 37680: "MSPropertySetStorage", 37681: "MSDocumentTextPosition", 37724: "ImageSourceData", 40091: "XPTitle", 40092: "XPComment", 40093: "XPAuthor", 40094: "XPKeywords", 40095: "XPSubject", 40960: "FlashpixVersion", 40961: "ColorSpace", 40962: "ExifImageWidth", 40963: "ExifImageHeight", 40964: "RelatedSoundFile", 40965: "InteropOffset", 41483: "FlashEnergy", 41484: "SpatialFrequencyResponse", 41485: "Noise", 41486: "FocalPlaneXResolution", 41487: "FocalPlaneYResolution", 41488: "FocalPlaneResolutionUnit", 41489: "ImageNumber", 41490: "SecurityClassification", 41491: "ImageHistory", 41492: "SubjectLocation", 41493: "ExposureIndex", 41494: "TIFF-EPStandardID", 41495: "SensingMethod", 41728: "FileSource", 41729: "SceneType", 41730: "CFAPattern", 41985: "CustomRendered", 41986: "ExposureMode", 41987: "WhiteBalance", 41988: "DigitalZoomRatio", 41989: "FocalLengthIn35mmFormat", 41990: "SceneCaptureType", 41991: "GainControl", 41992: "Contrast", 41993: "Saturation", 41994: "Sharpness", 41995: "DeviceSettingDescription", 41996: "SubjectDistanceRange", 42016: "ImageUniqueID", 42032: "OwnerName", 42033: "SerialNumber", 42034: "LensInfo", 42035: "LensMake", 42036: "LensModel", 42037: "LensSerialNumber", 42112: "GDALMetadata", 42113: "GDALNoData", 42240: "Gamma", 44992: "ExpandSoftware", 44993: "ExpandLens", 44994: "ExpandFilm", 44995: "ExpandFilterLens", 44996: "ExpandScanner", 44997: "ExpandFlashLamp", 48129: "PixelFormat", 48130: "Transformation", 48131: "Uncompressed", 48132: "ImageType", 48256: "ImageWidth", 48257: "ImageHeight", 48258: "WidthResolution", 48259: "HeightResolution", 48320: "ImageOffset", 48321: "ImageByteCount", 48322: "AlphaOffset", 48323: "AlphaByteCount", 48324: "ImageDataDiscard", 48325: "AlphaDataDiscard", 50215: "OceScanjobDesc", 50216: "OceApplicationSelector", 50217: "OceIDNumber", 50218: "OceImageLogic", 50255: "Annotations", 50341: "PrintIM", 50560: "USPTOOriginalContentType", 50706: "DNGVersion", 50707: "DNGBackwardVersion", 50708: "UniqueCameraModel", 50709: "LocalizedCameraModel", 50710: "CFAPlaneColor", 50711: "CFALayout", 50712: "LinearizationTable", 50713: "BlackLevelRepeatDim", 50714: "BlackLevel", 50715: "BlackLevelDeltaH", 50716: "BlackLevelDeltaV", 50717: "WhiteLevel", 50718: "DefaultScale", 50719: "DefaultCropOrigin", 50720: "DefaultCropSize", 50721: "ColorMatrix1", 50722: "ColorMatrix2", 50723: "CameraCalibration1", 50724: "CameraCalibration2", 50725: "ReductionMatrix1", 50726: "ReductionMatrix2", 50727: "AnalogBalance", 50728: "AsShotNeutral", 50729: "AsShotWhiteXY", 50730: "BaselineExposure", 50731: "BaselineNoise", 50732: "BaselineSharpness", 50733: "BayerGreenSplit", 50734: "LinearResponseLimit", 50735: "CameraSerialNumber", 50736: "DNGLensInfo", 50737: "ChromaBlurRadius", 50738: "AntiAliasStrength", 50739: "ShadowScale", 50740: "DNGPrivateData", 50741: "MakerNoteSafety", 50752: "RawImageSegmentation", 50778: "CalibrationIlluminant1", 50779: "CalibrationIlluminant2", 50780: "BestQualityScale", 50781: "RawDataUniqueID", 50784: "AliasLayerMetadata", 50827: "OriginalRawFileName", 50828: "OriginalRawFileData", 50829: "ActiveArea", 50830: "MaskedAreas", 50831: "AsShotICCProfile", 50832: "AsShotPreProfileMatrix", 50833: "CurrentICCProfile", 50834: "CurrentPreProfileMatrix", 50879: "ColorimetricReference", 50898: "PanasonicTitle", 50899: "PanasonicTitle2", 50931: "CameraCalibrationSig", 50932: "ProfileCalibrationSig", 50933: "ProfileIFD", 50934: "AsShotProfileName", 50935: "NoiseReductionApplied", 50936: "ProfileName", 50937: "ProfileHueSatMapDims", 50938: "ProfileHueSatMapData1", 50939: "ProfileHueSatMapData2", 50940: "ProfileToneCurve", 50941: "ProfileEmbedPolicy", 50942: "ProfileCopyright", 50964: "ForwardMatrix1", 50965: "ForwardMatrix2", 50966: "PreviewApplicationName", 50967: "PreviewApplicationVersion", 50968: "PreviewSettingsName", 50969: "PreviewSettingsDigest", 50970: "PreviewColorSpace", 50971: "PreviewDateTime", 50972: "RawImageDigest", 50973: "OriginalRawFileDigest", 50974: "SubTileBlockSize", 50975: "RowInterleaveFactor", 50981: "ProfileLookTableDims", 50982: "ProfileLookTableData", 51008: "OpcodeList1", 51009: "OpcodeList2", 51022: "OpcodeList3", 51041: "NoiseProfile", 51043: "TimeCodes", 51044: "FrameRate", 51058: "TStop", 51081: "ReelName", 51089: "OriginalDefaultFinalSize", 51090: "OriginalBestQualitySize", 51091: "OriginalDefaultCropSize", 51105: "CameraLabel", 51107: "ProfileHueSatMapEncoding", 51108: "ProfileLookTableEncoding", 51109: "BaselineExposureOffset", 51110: "DefaultBlackRender", 51111: "NewRawImageDigest", 51112: "RawToPreviewGain", 51125: "DefaultUserCrop", 59932: "Padding", 59933: "OffsetSchema", 65e3: "OwnerName", 65001: "SerialNumber", 65002: "Lens", 65024: "KDC_IFD", 65100: "RawFile", 65101: "Converter", 65102: "WhiteBalance", 65105: "Exposure", 65106: "Shadows", 65107: "Brightness", 65108: "Contrast", 65109: "Saturation", 65110: "Sharpness", 65111: "Smoothness", 65112: "MoireFilter" }, gps: { 0: "GPSVersionID", 1: "GPSLatitudeRef", 2: "GPSLatitude", 3: "GPSLongitudeRef", 4: "GPSLongitude", 5: "GPSAltitudeRef", 6: "GPSAltitude", 7: "GPSTimeStamp", 8: "GPSSatellites", 9: "GPSStatus", 10: "GPSMeasureMode", 11: "GPSDOP", 12: "GPSSpeedRef", 13: "GPSSpeed", 14: "GPSTrackRef", 15: "GPSTrack", 16: "GPSImgDirectionRef", 17: "GPSImgDirection", 18: "GPSMapDatum", 19: "GPSDestLatitudeRef", 20: "GPSDestLatitude", 21: "GPSDestLongitudeRef", 22: "GPSDestLongitude", 23: "GPSDestBearingRef", 24: "GPSDestBearing", 25: "GPSDestDistanceRef", 26: "GPSDestDistance", 27: "GPSProcessingMethod", 28: "GPSAreaInformation", 29: "GPSDateStamp", 30: "GPSDifferential", 31: "GPSHPositioningError" } };
      }, 592: (t) => {
        function e(t2, e2) {
          switch (t2) {
            case 1:
              return e2.nextUInt8();
            case 3:
            case 8:
              return e2.nextUInt16();
            case 4:
            case 9:
              return e2.nextUInt32();
            case 5:
              return [e2.nextUInt32(), e2.nextUInt32()];
            case 6:
              return e2.nextInt8();
            case 10:
              return [e2.nextInt32(), e2.nextInt32()];
            case 11:
              return e2.nextFloat();
            case 12:
              return e2.nextDouble();
            default:
              throw new Error("Invalid format while decoding: " + t2);
          }
        }
        function r(t2, r2) {
          var i2, n, a = r2.nextUInt16(), o = r2.nextUInt16(), s = function(t3) {
            switch (t3) {
              case 1:
              case 2:
              case 6:
              case 7:
                return 1;
              case 3:
              case 8:
                return 2;
              case 4:
              case 9:
              case 11:
                return 4;
              case 5:
              case 10:
              case 12:
                return 8;
              default:
                return 0;
            }
          }(o), h = r2.nextUInt32(), l = s * h;
          if (l > 4 && (r2 = t2.openWithOffset(r2.nextUInt32())), 2 === o) {
            var f = (i2 = r2.nextString(h)).indexOf("\0");
            -1 !== f && (i2 = i2.substr(0, f));
          } else if (7 === o)
            i2 = r2.nextBuffer(h);
          else if (0 !== o)
            for (i2 = [], n = 0; n < h; ++n)
              i2.push(e(o, r2));
          return l < 4 && r2.skip(4 - l), [a, i2, o];
        }
        function i(t2, e2, i2) {
          var n, a, o = e2.nextUInt16();
          for (a = 0; a < o; ++a)
            i2((n = r(t2, e2))[0], n[1], n[2]);
        }
        t.exports = { IFD0: 1, IFD1: 2, GPSIFD: 3, SubIFD: 4, InteropIFD: 5, parseTags: function(t2, e2) {
          var r2, n, a, o;
          try {
            r2 = function(t3) {
              if ("Exif\0\0" !== t3.nextString(6))
                throw new Error("Invalid EXIF header");
              var e3 = t3.mark(), r3 = t3.nextUInt16();
              if (18761 === r3)
                t3.setBigEndian(false);
              else {
                if (19789 !== r3)
                  throw new Error("Invalid TIFF header");
                t3.setBigEndian(true);
              }
              if (42 !== t3.nextUInt16())
                throw new Error("Invalid TIFF data");
              return e3;
            }(t2);
          } catch (t3) {
            return false;
          }
          var s = r2.openWithOffset(t2.nextUInt32()), h = this.IFD0;
          i(r2, s, function(t3, r3, i2) {
            switch (t3) {
              case 34853:
                a = r3[0];
                break;
              case 34665:
                n = r3[0];
                break;
              default:
                e2(h, t3, r3, i2);
            }
          });
          var l = s.nextUInt32();
          if (0 !== l) {
            var f = r2.openWithOffset(l);
            i(r2, f, e2.bind(null, this.IFD1));
          }
          if (a) {
            var u = r2.openWithOffset(a);
            i(r2, u, e2.bind(null, this.GPSIFD));
          }
          if (n) {
            var c = r2.openWithOffset(n), d = this.InteropIFD;
            i(r2, c, function(t3, r3, i2) {
              40965 === t3 ? o = r3[0] : e2(d, t3, r3, i2);
            });
          }
          if (o) {
            var p = r2.openWithOffset(o);
            i(r2, p, e2.bind(null, this.InteropIFD));
          }
          return true;
        } };
      }, 656: (t) => {
        t.exports = { parseSections: function(t2, e) {
          var r, i;
          for (t2.setBigEndian(true); t2.remainingLength() > 0 && 218 !== i; ) {
            if (255 !== t2.nextUInt8())
              throw new Error("Invalid JPEG section offset");
            r = (i = t2.nextUInt8()) >= 208 && i <= 217 || 218 === i ? 0 : t2.nextUInt16() - 2, e(i, t2.branch(0, r)), t2.skip(r);
          }
        }, getSizeFromSOFSection: function(t2) {
          return t2.skip(1), { height: t2.nextUInt16(), width: t2.nextUInt16() };
        }, getSectionName: function(t2) {
          var e, r;
          switch (t2) {
            case 216:
              e = "SOI";
              break;
            case 196:
              e = "DHT";
              break;
            case 219:
              e = "DQT";
              break;
            case 221:
              e = "DRI";
              break;
            case 218:
              e = "SOS";
              break;
            case 254:
              e = "COM";
              break;
            case 217:
              e = "EOI";
              break;
            default:
              t2 >= 224 && t2 <= 239 ? (e = "APP", r = t2 - 224) : t2 >= 192 && t2 <= 207 && 196 !== t2 && 200 !== t2 && 204 !== t2 ? (e = "SOF", r = t2 - 192) : t2 >= 208 && t2 <= 215 && (e = "RST", r = t2 - 208);
          }
          var i = { name: e };
          return "number" == typeof r && (i.index = r), i;
        } };
      }, 453: (t, e, r) => {
        var i = r(656), n = r(592), a = r(3814);
        function o(t2, e2, r2, i2, n2, a2, o2) {
          this.startMarker = t2, this.tags = e2, this.imageSize = r2, this.thumbnailOffset = i2, this.thumbnailLength = n2, this.thumbnailType = a2, this.app1Offset = o2;
        }
        function s(t2) {
          this.stream = t2, this.flags = { readBinaryTags: false, resolveTagNames: true, simplifyValues: true, imageSize: true, hidePointers: true, returnTags: true };
        }
        o.prototype = { hasThumbnail: function(t2) {
          return !(!this.thumbnailOffset || !this.thumbnailLength || "string" == typeof t2 && ("image/jpeg" === t2.toLowerCase().trim() ? 6 !== this.thumbnailType : "image/tiff" !== t2.toLowerCase().trim() || 1 !== this.thumbnailType));
        }, getThumbnailOffset: function() {
          return this.app1Offset + 6 + this.thumbnailOffset;
        }, getThumbnailLength: function() {
          return this.thumbnailLength;
        }, getThumbnailBuffer: function() {
          return this._getThumbnailStream().nextBuffer(this.thumbnailLength);
        }, _getThumbnailStream: function() {
          return this.startMarker.openWithOffset(this.getThumbnailOffset());
        }, getImageSize: function() {
          return this.imageSize;
        }, getThumbnailSize: function() {
          var t2, e2 = this._getThumbnailStream();
          return i.parseSections(e2, function(e3, r2) {
            "SOF" === i.getSectionName(e3).name && (t2 = i.getSizeFromSOFSection(r2));
          }), t2;
        } }, s.prototype = { enableBinaryFields: function(t2) {
          return this.flags.readBinaryTags = !!t2, this;
        }, enablePointers: function(t2) {
          return this.flags.hidePointers = !t2, this;
        }, enableTagNames: function(t2) {
          return this.flags.resolveTagNames = !!t2, this;
        }, enableImageSize: function(t2) {
          return this.flags.imageSize = !!t2, this;
        }, enableReturnTags: function(t2) {
          return this.flags.returnTags = !!t2, this;
        }, enableSimpleValues: function(t2) {
          return this.flags.simplifyValues = !!t2, this;
        }, parse: function() {
          var t2, e2, s2, h, l, f, u, c, d, p = this.stream.mark(), m = p.openWithOffset(0), g = this.flags;
          return g.resolveTagNames && (u = r(3332)), g.resolveTagNames ? (t2 = {}, c = function(e3) {
            return t2[e3.name];
          }, d = function(e3, r2) {
            t2[e3.name] = r2;
          }) : (t2 = [], c = function(e3) {
            var r2;
            for (r2 = 0; r2 < t2.length; ++r2)
              if (t2[r2].type === e3.type && t2[r2].section === e3.section)
                return t2.value;
          }, d = function(e3, r2) {
            var i2;
            for (i2 = 0; i2 < t2.length; ++i2)
              if (t2[i2].type === e3.type && t2[i2].section === e3.section)
                return void (t2.value = r2);
          }), i.parseSections(m, function(r2, o2) {
            var c2 = o2.offsetFrom(p);
            225 === r2 ? n.parseTags(o2, function(e3, r3, i2, o3) {
              if (g.readBinaryTags || 7 !== o3) {
                if (513 === r3) {
                  if (s2 = i2[0], g.hidePointers)
                    return;
                } else if (514 === r3) {
                  if (h = i2[0], g.hidePointers)
                    return;
                } else if (259 === r3 && (l = i2[0], g.hidePointers))
                  return;
                if (g.returnTags)
                  if (g.simplifyValues && (i2 = a.simplifyValue(i2, o3)), g.resolveTagNames) {
                    var f2 = (e3 === n.GPSIFD ? u.gps : u.exif)[r3];
                    f2 || (f2 = u.exif[r3]), t2.hasOwnProperty(f2) || (t2[f2] = i2);
                  } else
                    t2.push({ section: e3, type: r3, value: i2 });
              }
            }) && (f = c2) : g.imageSize && "SOF" === i.getSectionName(r2).name && (e2 = i.getSizeFromSOFSection(o2));
          }), g.simplifyValues && (a.castDegreeValues(c, d), a.castDateValues(c, d)), new o(p, t2, e2, s2, h, l, f);
        } }, t.exports = s;
      }, 3814: (t, e, r) => {
        var i = r(592), n = r(565), a = [{ section: i.GPSIFD, type: 2, name: "GPSLatitude", refType: 1, refName: "GPSLatitudeRef", posVal: "N" }, { section: i.GPSIFD, type: 4, name: "GPSLongitude", refType: 3, refName: "GPSLongitudeRef", posVal: "E" }], o = [{ section: i.SubIFD, type: 306, name: "ModifyDate" }, { section: i.SubIFD, type: 36867, name: "DateTimeOriginal" }, { section: i.SubIFD, type: 36868, name: "CreateDate" }, { section: i.SubIFD, type: 306, name: "ModifyDate" }];
        t.exports = { castDegreeValues: function(t2, e2) {
          a.forEach(function(r2) {
            var i2 = t2(r2);
            if (i2) {
              var n2 = t2({ section: r2.section, type: r2.refType, name: r2.refName }) === r2.posVal ? 1 : -1, a2 = (i2[0] + i2[1] / 60 + i2[2] / 3600) * n2;
              e2(r2, a2);
            }
          });
        }, castDateValues: function(t2, e2) {
          o.forEach(function(r2) {
            var i2 = t2(r2);
            if (i2) {
              var a2 = n.parseExifDate(i2);
              void 0 !== a2 && e2(r2, a2);
            }
          });
        }, simplifyValue: function(t2, e2) {
          return Array.isArray(t2) && 1 === (t2 = t2.map(function(t3) {
            return 10 === e2 || 5 === e2 ? t3[0] / t3[1] : t3;
          })).length && (t2 = t2[0]), t2;
        } };
      }, 8789: (module, __unused_webpack_exports, __webpack_require__) => {
        "use strict";
        var Buffer = __webpack_require__(8834).lW;
        const Token = __webpack_require__(5010), strtok3 = __webpack_require__(7378), { stringToBytes, tarHeaderChecksumMatches, uint32SyncSafeToken } = __webpack_require__(7044), supported = __webpack_require__(4078), minimumBytes = 4100;
        async function fromStream(t) {
          const e = await strtok3.fromStream(t);
          try {
            return await fromTokenizer(e);
          } finally {
            await e.close();
          }
        }
        async function fromBuffer(t) {
          if (!(t instanceof Uint8Array || t instanceof ArrayBuffer || Buffer.isBuffer(t)))
            throw new TypeError(`Expected the \`input\` argument to be of type \`Uint8Array\` or \`Buffer\` or \`ArrayBuffer\`, got \`${typeof t}\``);
          const e = t instanceof Buffer ? t : Buffer.from(t);
          if (e && e.length > 1)
            return fromTokenizer(strtok3.fromBuffer(e));
        }
        function _check(t, e, r) {
          r = { offset: 0, ...r };
          for (const [i, n] of e.entries())
            if (r.mask) {
              if (n !== (r.mask[i] & t[i + r.offset]))
                return false;
            } else if (n !== t[i + r.offset])
              return false;
          return true;
        }
        async function fromTokenizer(t) {
          try {
            return _fromTokenizer(t);
          } catch (t2) {
            if (!(t2 instanceof strtok3.EndOfStreamError))
              throw t2;
          }
        }
        async function _fromTokenizer(t) {
          let e = Buffer.alloc(minimumBytes);
          const r = (t2, r2) => _check(e, t2, r2), i = (t2, e2) => r(stringToBytes(t2), e2);
          if (t.fileInfo.size || (t.fileInfo.size = Number.MAX_SAFE_INTEGER), await t.peekBuffer(e, { length: 12, mayBeLess: true }), r([66, 77]))
            return { ext: "bmp", mime: "image/bmp" };
          if (r([11, 119]))
            return { ext: "ac3", mime: "audio/vnd.dolby.dd-raw" };
          if (r([120, 1]))
            return { ext: "dmg", mime: "application/x-apple-diskimage" };
          if (r([77, 90]))
            return { ext: "exe", mime: "application/x-msdownload" };
          if (r([37, 33]))
            return await t.peekBuffer(e, { length: 24, mayBeLess: true }), i("PS-Adobe-", { offset: 2 }) && i(" EPSF-", { offset: 14 }) ? { ext: "eps", mime: "application/eps" } : { ext: "ps", mime: "application/postscript" };
          if (r([31, 160]) || r([31, 157]))
            return { ext: "Z", mime: "application/x-compress" };
          if (r([255, 216, 255]))
            return { ext: "jpg", mime: "image/jpeg" };
          if (r([73, 73, 188]))
            return { ext: "jxr", mime: "image/vnd.ms-photo" };
          if (r([31, 139, 8]))
            return { ext: "gz", mime: "application/gzip" };
          if (r([66, 90, 104]))
            return { ext: "bz2", mime: "application/x-bzip2" };
          if (i("ID3")) {
            await t.ignore(6);
            const n = await t.readToken(uint32SyncSafeToken);
            return t.position + n > t.fileInfo.size ? { ext: "mp3", mime: "audio/mpeg" } : (await t.ignore(n), fromTokenizer(t));
          }
          if (i("MP+"))
            return { ext: "mpc", mime: "audio/x-musepack" };
          if ((67 === e[0] || 70 === e[0]) && r([87, 83], { offset: 1 }))
            return { ext: "swf", mime: "application/x-shockwave-flash" };
          if (r([71, 73, 70]))
            return { ext: "gif", mime: "image/gif" };
          if (i("FLIF"))
            return { ext: "flif", mime: "image/flif" };
          if (i("8BPS"))
            return { ext: "psd", mime: "image/vnd.adobe.photoshop" };
          if (i("WEBP", { offset: 8 }))
            return { ext: "webp", mime: "image/webp" };
          if (i("MPCK"))
            return { ext: "mpc", mime: "audio/x-musepack" };
          if (i("FORM"))
            return { ext: "aif", mime: "audio/aiff" };
          if (i("icns", { offset: 0 }))
            return { ext: "icns", mime: "image/icns" };
          if (r([80, 75, 3, 4])) {
            try {
              for (; t.position + 30 < t.fileInfo.size; ) {
                await t.readBuffer(e, { length: 30 });
                const a = { compressedSize: e.readUInt32LE(18), uncompressedSize: e.readUInt32LE(22), filenameLength: e.readUInt16LE(26), extraFieldLength: e.readUInt16LE(28) };
                if (a.filename = await t.readToken(new Token.StringType(a.filenameLength, "utf-8")), await t.ignore(a.extraFieldLength), "META-INF/mozilla.rsa" === a.filename)
                  return { ext: "xpi", mime: "application/x-xpinstall" };
                if (a.filename.endsWith(".rels") || a.filename.endsWith(".xml"))
                  switch (a.filename.split("/")[0]) {
                    case "_rels":
                    default:
                      break;
                    case "word":
                      return { ext: "docx", mime: "application/vnd.openxmlformats-officedocument.wordprocessingml.document" };
                    case "ppt":
                      return { ext: "pptx", mime: "application/vnd.openxmlformats-officedocument.presentationml.presentation" };
                    case "xl":
                      return { ext: "xlsx", mime: "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet" };
                  }
                if (a.filename.startsWith("xl/"))
                  return { ext: "xlsx", mime: "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet" };
                if (a.filename.startsWith("3D/") && a.filename.endsWith(".model"))
                  return { ext: "3mf", mime: "model/3mf" };
                if ("mimetype" === a.filename && a.compressedSize === a.uncompressedSize)
                  switch (await t.readToken(new Token.StringType(a.compressedSize, "utf-8"))) {
                    case "application/epub+zip":
                      return { ext: "epub", mime: "application/epub+zip" };
                    case "application/vnd.oasis.opendocument.text":
                      return { ext: "odt", mime: "application/vnd.oasis.opendocument.text" };
                    case "application/vnd.oasis.opendocument.spreadsheet":
                      return { ext: "ods", mime: "application/vnd.oasis.opendocument.spreadsheet" };
                    case "application/vnd.oasis.opendocument.presentation":
                      return { ext: "odp", mime: "application/vnd.oasis.opendocument.presentation" };
                  }
                if (0 === a.compressedSize) {
                  let o = -1;
                  for (; o < 0 && t.position < t.fileInfo.size; )
                    await t.peekBuffer(e, { mayBeLess: true }), o = e.indexOf("504B0304", 0, "hex"), await t.ignore(o >= 0 ? o : e.length);
                } else
                  await t.ignore(a.compressedSize);
              }
            } catch (s) {
              if (!(s instanceof strtok3.EndOfStreamError))
                throw s;
            }
            return { ext: "zip", mime: "application/zip" };
          }
          if (i("OggS")) {
            await t.ignore(28);
            const h = Buffer.alloc(8);
            return await t.readBuffer(h), _check(h, [79, 112, 117, 115, 72, 101, 97, 100]) ? { ext: "opus", mime: "audio/opus" } : _check(h, [128, 116, 104, 101, 111, 114, 97]) ? { ext: "ogv", mime: "video/ogg" } : _check(h, [1, 118, 105, 100, 101, 111, 0]) ? { ext: "ogm", mime: "video/ogg" } : _check(h, [127, 70, 76, 65, 67]) ? { ext: "oga", mime: "audio/ogg" } : _check(h, [83, 112, 101, 101, 120, 32, 32]) ? { ext: "spx", mime: "audio/ogg" } : _check(h, [1, 118, 111, 114, 98, 105, 115]) ? { ext: "ogg", mime: "audio/ogg" } : { ext: "ogx", mime: "application/ogg" };
          }
          if (r([80, 75]) && (3 === e[2] || 5 === e[2] || 7 === e[2]) && (4 === e[3] || 6 === e[3] || 8 === e[3]))
            return { ext: "zip", mime: "application/zip" };
          if (i("ftyp", { offset: 4 }) && 0 != (96 & e[8])) {
            const l = e.toString("binary", 8, 12).replace("\0", " ").trim();
            switch (l) {
              case "avif":
                return { ext: "avif", mime: "image/avif" };
              case "mif1":
                return { ext: "heic", mime: "image/heif" };
              case "msf1":
                return { ext: "heic", mime: "image/heif-sequence" };
              case "heic":
              case "heix":
                return { ext: "heic", mime: "image/heic" };
              case "hevc":
              case "hevx":
                return { ext: "heic", mime: "image/heic-sequence" };
              case "qt":
                return { ext: "mov", mime: "video/quicktime" };
              case "M4V":
              case "M4VH":
              case "M4VP":
                return { ext: "m4v", mime: "video/x-m4v" };
              case "M4P":
                return { ext: "m4p", mime: "video/mp4" };
              case "M4B":
                return { ext: "m4b", mime: "audio/mp4" };
              case "M4A":
                return { ext: "m4a", mime: "audio/x-m4a" };
              case "F4V":
                return { ext: "f4v", mime: "video/mp4" };
              case "F4P":
                return { ext: "f4p", mime: "video/mp4" };
              case "F4A":
                return { ext: "f4a", mime: "audio/mp4" };
              case "F4B":
                return { ext: "f4b", mime: "audio/mp4" };
              case "crx":
                return { ext: "cr3", mime: "image/x-canon-cr3" };
              default:
                return l.startsWith("3g") ? l.startsWith("3g2") ? { ext: "3g2", mime: "video/3gpp2" } : { ext: "3gp", mime: "video/3gpp" } : { ext: "mp4", mime: "video/mp4" };
            }
          }
          if (i("MThd"))
            return { ext: "mid", mime: "audio/midi" };
          if (i("wOFF") && (r([0, 1, 0, 0], { offset: 4 }) || i("OTTO", { offset: 4 })))
            return { ext: "woff", mime: "font/woff" };
          if (i("wOF2") && (r([0, 1, 0, 0], { offset: 4 }) || i("OTTO", { offset: 4 })))
            return { ext: "woff2", mime: "font/woff2" };
          if (r([212, 195, 178, 161]) || r([161, 178, 195, 212]))
            return { ext: "pcap", mime: "application/vnd.tcpdump.pcap" };
          if (i("DSD "))
            return { ext: "dsf", mime: "audio/x-dsf" };
          if (i("LZIP"))
            return { ext: "lz", mime: "application/x-lzip" };
          if (i("fLaC"))
            return { ext: "flac", mime: "audio/x-flac" };
          if (r([66, 80, 71, 251]))
            return { ext: "bpg", mime: "image/bpg" };
          if (i("wvpk"))
            return { ext: "wv", mime: "audio/wavpack" };
          if (i("%PDF")) {
            await t.ignore(1350);
            const f = 10485760, u = Buffer.alloc(Math.min(f, t.fileInfo.size));
            return await t.readBuffer(u, { mayBeLess: true }), u.includes(Buffer.from("AIPrivateData")) ? { ext: "ai", mime: "application/postscript" } : { ext: "pdf", mime: "application/pdf" };
          }
          if (r([0, 97, 115, 109]))
            return { ext: "wasm", mime: "application/wasm" };
          if (r([73, 73, 42, 0]))
            return i("CR", { offset: 8 }) ? { ext: "cr2", mime: "image/x-canon-cr2" } : r([28, 0, 254, 0], { offset: 8 }) || r([31, 0, 11, 0], { offset: 8 }) ? { ext: "nef", mime: "image/x-nikon-nef" } : r([8, 0, 0, 0], { offset: 4 }) && (r([45, 0, 254, 0], { offset: 8 }) || r([39, 0, 254, 0], { offset: 8 })) ? { ext: "dng", mime: "image/x-adobe-dng" } : (e = Buffer.alloc(24), await t.peekBuffer(e), (r([16, 251, 134, 1], { offset: 4 }) || r([8, 0, 0, 0], { offset: 4 })) && r([0, 254, 0, 4, 0, 1, 0, 0, 0, 1, 0, 0, 0, 3, 1], { offset: 9 }) ? { ext: "arw", mime: "image/x-sony-arw" } : { ext: "tif", mime: "image/tiff" });
          if (r([77, 77, 0, 42]))
            return { ext: "tif", mime: "image/tiff" };
          if (i("MAC "))
            return { ext: "ape", mime: "audio/ape" };
          if (r([26, 69, 223, 163])) {
            async function c() {
              const e2 = await t.peekNumber(Token.UINT8);
              let r2 = 128, i2 = 0;
              for (; 0 == (e2 & r2) && 0 !== r2; )
                ++i2, r2 >>= 1;
              const n = Buffer.alloc(i2 + 1);
              return await t.readBuffer(n), n;
            }
            async function d() {
              const t2 = await c(), e2 = await c();
              e2[0] ^= 128 >> e2.length - 1;
              const r2 = Math.min(6, e2.length);
              return { id: t2.readUIntBE(0, t2.length), len: e2.readUIntBE(e2.length - r2, r2) };
            }
            async function p(e2, r2) {
              for (; r2 > 0; ) {
                const e3 = await d();
                if (17026 === e3.id)
                  return t.readToken(new Token.StringType(e3.len, "utf-8"));
                await t.ignore(e3.len), --r2;
              }
            }
            const m = await d();
            switch (await p(0, m.len)) {
              case "webm":
                return { ext: "webm", mime: "video/webm" };
              case "matroska":
                return { ext: "mkv", mime: "video/x-matroska" };
              default:
                return;
            }
          }
          if (r([82, 73, 70, 70])) {
            if (r([65, 86, 73], { offset: 8 }))
              return { ext: "avi", mime: "video/vnd.avi" };
            if (r([87, 65, 86, 69], { offset: 8 }))
              return { ext: "wav", mime: "audio/vnd.wave" };
            if (r([81, 76, 67, 77], { offset: 8 }))
              return { ext: "qcp", mime: "audio/qcelp" };
          }
          if (i("SQLi"))
            return { ext: "sqlite", mime: "application/x-sqlite3" };
          if (r([78, 69, 83, 26]))
            return { ext: "nes", mime: "application/x-nintendo-nes-rom" };
          if (i("Cr24"))
            return { ext: "crx", mime: "application/x-google-chrome-extension" };
          if (i("MSCF") || i("ISc("))
            return { ext: "cab", mime: "application/vnd.ms-cab-compressed" };
          if (r([237, 171, 238, 219]))
            return { ext: "rpm", mime: "application/x-rpm" };
          if (r([197, 208, 211, 198]))
            return { ext: "eps", mime: "application/eps" };
          if (r([40, 181, 47, 253]))
            return { ext: "zst", mime: "application/zstd" };
          if (r([79, 84, 84, 79, 0]))
            return { ext: "otf", mime: "font/otf" };
          if (i("#!AMR"))
            return { ext: "amr", mime: "audio/amr" };
          if (i("{\\rtf"))
            return { ext: "rtf", mime: "application/rtf" };
          if (r([70, 76, 86, 1]))
            return { ext: "flv", mime: "video/x-flv" };
          if (i("IMPM"))
            return { ext: "it", mime: "audio/x-it" };
          if (i("-lh0-", { offset: 2 }) || i("-lh1-", { offset: 2 }) || i("-lh2-", { offset: 2 }) || i("-lh3-", { offset: 2 }) || i("-lh4-", { offset: 2 }) || i("-lh5-", { offset: 2 }) || i("-lh6-", { offset: 2 }) || i("-lh7-", { offset: 2 }) || i("-lzs-", { offset: 2 }) || i("-lz4-", { offset: 2 }) || i("-lz5-", { offset: 2 }) || i("-lhd-", { offset: 2 }))
            return { ext: "lzh", mime: "application/x-lzh-compressed" };
          if (r([0, 0, 1, 186])) {
            if (r([33], { offset: 4, mask: [241] }))
              return { ext: "mpg", mime: "video/MP1S" };
            if (r([68], { offset: 4, mask: [196] }))
              return { ext: "mpg", mime: "video/MP2P" };
          }
          if (i("ITSF"))
            return { ext: "chm", mime: "application/vnd.ms-htmlhelp" };
          if (r([253, 55, 122, 88, 90, 0]))
            return { ext: "xz", mime: "application/x-xz" };
          if (i("<?xml "))
            return { ext: "xml", mime: "application/xml" };
          if (r([55, 122, 188, 175, 39, 28]))
            return { ext: "7z", mime: "application/x-7z-compressed" };
          if (r([82, 97, 114, 33, 26, 7]) && (0 === e[6] || 1 === e[6]))
            return { ext: "rar", mime: "application/x-rar-compressed" };
          if (i("solid "))
            return { ext: "stl", mime: "model/stl" };
          if (i("BLENDER"))
            return { ext: "blend", mime: "application/x-blender" };
          if (i("!<arch>"))
            return await t.ignore(8), "debian-binary" === await t.readToken(new Token.StringType(13, "ascii")) ? { ext: "deb", mime: "application/x-deb" } : { ext: "ar", mime: "application/x-unix-archive" };
          if (r([137, 80, 78, 71, 13, 10, 26, 10])) {
            async function g() {
              return { length: await t.readToken(Token.INT32_BE), type: await t.readToken(new Token.StringType(4, "binary")) };
            }
            await t.ignore(8);
            do {
              const b = await g();
              if (b.length < 0)
                return;
              switch (b.type) {
                case "IDAT":
                  return { ext: "png", mime: "image/png" };
                case "acTL":
                  return { ext: "apng", mime: "image/apng" };
                default:
                  await t.ignore(b.length + 4);
              }
            } while (t.position + 8 < t.fileInfo.size);
            return { ext: "png", mime: "image/png" };
          }
          if (r([65, 82, 82, 79, 87, 49, 0, 0]))
            return { ext: "arrow", mime: "application/x-apache-arrow" };
          if (r([103, 108, 84, 70, 2, 0, 0, 0]))
            return { ext: "glb", mime: "model/gltf-binary" };
          if (r([102, 114, 101, 101], { offset: 4 }) || r([109, 100, 97, 116], { offset: 4 }) || r([109, 111, 111, 118], { offset: 4 }) || r([119, 105, 100, 101], { offset: 4 }))
            return { ext: "mov", mime: "video/quicktime" };
          if (r([73, 73, 82, 79, 8, 0, 0, 0, 24]))
            return { ext: "orf", mime: "image/x-olympus-orf" };
          if (i("gimp xcf "))
            return { ext: "xcf", mime: "image/x-xcf" };
          if (r([73, 73, 85, 0, 24, 0, 0, 0, 136, 231, 116, 216]))
            return { ext: "rw2", mime: "image/x-panasonic-rw2" };
          if (r([48, 38, 178, 117, 142, 102, 207, 17, 166, 217])) {
            async function _() {
              const e2 = Buffer.alloc(16);
              return await t.readBuffer(e2), { id: e2, size: Number(await t.readToken(Token.UINT64_LE)) };
            }
            for (await t.ignore(30); t.position + 24 < t.fileInfo.size; ) {
              const y = await _();
              let w = y.size - 24;
              if (_check(y.id, [145, 7, 220, 183, 183, 169, 207, 17, 142, 230, 0, 192, 12, 32, 83, 101])) {
                const v = Buffer.alloc(16);
                if (w -= await t.readBuffer(v), _check(v, [64, 158, 105, 248, 77, 91, 207, 17, 168, 253, 0, 128, 95, 92, 68, 43]))
                  return { ext: "asf", mime: "audio/x-ms-asf" };
                if (_check(v, [192, 239, 25, 188, 77, 91, 207, 17, 168, 253, 0, 128, 95, 92, 68, 43]))
                  return { ext: "asf", mime: "video/x-ms-asf" };
                break;
              }
              await t.ignore(w);
            }
            return { ext: "asf", mime: "application/vnd.ms-asf" };
          }
          if (r([171, 75, 84, 88, 32, 49, 49, 187, 13, 10, 26, 10]))
            return { ext: "ktx", mime: "image/ktx" };
          if ((r([126, 16, 4]) || r([126, 24, 4])) && r([48, 77, 73, 69], { offset: 4 }))
            return { ext: "mie", mime: "application/x-mie" };
          if (r([39, 10, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], { offset: 2 }))
            return { ext: "shp", mime: "application/x-esri-shape" };
          if (r([0, 0, 0, 12, 106, 80, 32, 32, 13, 10, 135, 10]))
            switch (await t.ignore(20), await t.readToken(new Token.StringType(4, "ascii"))) {
              case "jp2 ":
                return { ext: "jp2", mime: "image/jp2" };
              case "jpx ":
                return { ext: "jpx", mime: "image/jpx" };
              case "jpm ":
                return { ext: "jpm", mime: "image/jpm" };
              case "mjp2":
                return { ext: "mj2", mime: "image/mj2" };
              default:
                return;
            }
          if (r([255, 10]) || r([0, 0, 0, 12, 74, 88, 76, 32, 13, 10, 135, 10]))
            return { ext: "jxl", mime: "image/jxl" };
          if (r([0, 0, 1, 186]) || r([0, 0, 1, 179]))
            return { ext: "mpg", mime: "video/mpeg" };
          if (r([0, 1, 0, 0, 0]))
            return { ext: "ttf", mime: "font/ttf" };
          if (r([0, 0, 1, 0]))
            return { ext: "ico", mime: "image/x-icon" };
          if (r([0, 0, 2, 0]))
            return { ext: "cur", mime: "image/x-icon" };
          if (r([208, 207, 17, 224, 161, 177, 26, 225]))
            return { ext: "cfb", mime: "application/x-cfb" };
          if (await t.peekBuffer(e, { length: Math.min(256, t.fileInfo.size), mayBeLess: true }), i("BEGIN:")) {
            if (i("VCARD", { offset: 6 }))
              return { ext: "vcf", mime: "text/vcard" };
            if (i("VCALENDAR", { offset: 6 }))
              return { ext: "ics", mime: "text/calendar" };
          }
          if (i("FUJIFILMCCD-RAW"))
            return { ext: "raf", mime: "image/x-fujifilm-raf" };
          if (i("Extended Module:"))
            return { ext: "xm", mime: "audio/x-xm" };
          if (i("Creative Voice File"))
            return { ext: "voc", mime: "audio/x-voc" };
          if (r([4, 0, 0, 0]) && e.length >= 16) {
            const x = e.readUInt32LE(12);
            if (x > 12 && e.length >= x + 16)
              try {
                const E = e.slice(16, x + 16).toString();
                if (JSON.parse(E).files)
                  return { ext: "asar", mime: "application/x-asar" };
              } catch (k) {
              }
          }
          if (r([6, 14, 43, 52, 2, 5, 1, 1, 13, 1, 2, 1, 1, 2]))
            return { ext: "mxf", mime: "application/mxf" };
          if (i("SCRM", { offset: 44 }))
            return { ext: "s3m", mime: "audio/x-s3m" };
          if (r([71], { offset: 4 }) && (r([71], { offset: 192 }) || r([71], { offset: 196 })))
            return { ext: "mts", mime: "video/mp2t" };
          if (r([66, 79, 79, 75, 77, 79, 66, 73], { offset: 60 }))
            return { ext: "mobi", mime: "application/x-mobipocket-ebook" };
          if (r([68, 73, 67, 77], { offset: 128 }))
            return { ext: "dcm", mime: "application/dicom" };
          if (r([76, 0, 0, 0, 1, 20, 2, 0, 0, 0, 0, 0, 192, 0, 0, 0, 0, 0, 0, 70]))
            return { ext: "lnk", mime: "application/x.ms.shortcut" };
          if (r([98, 111, 111, 107, 0, 0, 0, 0, 109, 97, 114, 107, 0, 0, 0, 0]))
            return { ext: "alias", mime: "application/x.apple.alias" };
          if (r([76, 80], { offset: 34 }) && (r([0, 0, 1], { offset: 8 }) || r([1, 0, 2], { offset: 8 }) || r([2, 0, 2], { offset: 8 })))
            return { ext: "eot", mime: "application/vnd.ms-fontobject" };
          if (r([6, 6, 237, 245, 216, 29, 70, 229, 189, 49, 239, 231, 254, 116, 183, 29]))
            return { ext: "indd", mime: "application/x-indesign" };
          if (await t.peekBuffer(e, { length: Math.min(512, t.fileInfo.size), mayBeLess: true }), tarHeaderChecksumMatches(e))
            return { ext: "tar", mime: "application/x-tar" };
          if (r([255, 254, 255, 14, 83, 0, 107, 0, 101, 0, 116, 0, 99, 0, 104, 0, 85, 0, 112, 0, 32, 0, 77, 0, 111, 0, 100, 0, 101, 0, 108, 0]))
            return { ext: "skp", mime: "application/vnd.sketchup.skp" };
          if (i("-----BEGIN PGP MESSAGE-----"))
            return { ext: "pgp", mime: "application/pgp-encrypted" };
          if (e.length >= 2 && r([255, 224], { offset: 0, mask: [255, 224] })) {
            if (r([16], { offset: 1, mask: [22] }))
              return r([8], { offset: 1, mask: [8] }), { ext: "aac", mime: "audio/aac" };
            if (r([2], { offset: 1, mask: [6] }))
              return { ext: "mp3", mime: "audio/mpeg" };
            if (r([4], { offset: 1, mask: [6] }))
              return { ext: "mp2", mime: "audio/mpeg" };
            if (r([6], { offset: 1, mask: [6] }))
              return { ext: "mp1", mime: "audio/mpeg" };
          }
        }
        const stream = (readableStream) => new Promise((resolve, reject) => {
          const stream = eval("require")("stream");
          readableStream.on("error", reject), readableStream.once("readable", async () => {
            const t = new stream.PassThrough();
            let e;
            e = stream.pipeline ? stream.pipeline(readableStream, t, () => {
            }) : readableStream.pipe(t);
            const r = readableStream.read(minimumBytes) || readableStream.read() || Buffer.alloc(0);
            try {
              const e2 = await fromBuffer(r);
              t.fileType = e2;
            } catch (t2) {
              reject(t2);
            }
            resolve(e);
          });
        }), fileType = { fromStream, fromTokenizer, fromBuffer, stream };
        Object.defineProperty(fileType, "extensions", { get: () => new Set(supported.extensions) }), Object.defineProperty(fileType, "mimeTypes", { get: () => new Set(supported.mimeTypes) }), module.exports = fileType;
      }, 5025: (t, e, r) => {
        "use strict";
        const i = r(3569), n = r(8789), a = { fromFile: async function(t2) {
          const e2 = await i.fromFile(t2);
          try {
            return await n.fromTokenizer(e2);
          } finally {
            await e2.close();
          }
        } };
        Object.assign(a, n), Object.defineProperty(a, "extensions", { get: () => n.extensions }), Object.defineProperty(a, "mimeTypes", { get: () => n.mimeTypes }), t.exports = a;
      }, 4078: (t) => {
        "use strict";
        t.exports = { extensions: ["jpg", "png", "apng", "gif", "webp", "flif", "xcf", "cr2", "cr3", "orf", "arw", "dng", "nef", "rw2", "raf", "tif", "bmp", "icns", "jxr", "psd", "indd", "zip", "tar", "rar", "gz", "bz2", "7z", "dmg", "mp4", "mid", "mkv", "webm", "mov", "avi", "mpg", "mp2", "mp3", "m4a", "oga", "ogg", "ogv", "opus", "flac", "wav", "spx", "amr", "pdf", "epub", "exe", "swf", "rtf", "wasm", "woff", "woff2", "eot", "ttf", "otf", "ico", "flv", "ps", "xz", "sqlite", "nes", "crx", "xpi", "cab", "deb", "ar", "rpm", "Z", "lz", "cfb", "mxf", "mts", "blend", "bpg", "docx", "pptx", "xlsx", "3gp", "3g2", "jp2", "jpm", "jpx", "mj2", "aif", "qcp", "odt", "ods", "odp", "xml", "mobi", "heic", "cur", "ktx", "ape", "wv", "dcm", "ics", "glb", "pcap", "dsf", "lnk", "alias", "voc", "ac3", "m4v", "m4p", "m4b", "f4v", "f4p", "f4b", "f4a", "mie", "asf", "ogm", "ogx", "mpc", "arrow", "shp", "aac", "mp1", "it", "s3m", "xm", "ai", "skp", "avif", "eps", "lzh", "pgp", "asar", "stl", "chm", "3mf", "zst", "jxl", "vcf"], mimeTypes: ["image/jpeg", "image/png", "image/gif", "image/webp", "image/flif", "image/x-xcf", "image/x-canon-cr2", "image/x-canon-cr3", "image/tiff", "image/bmp", "image/vnd.ms-photo", "image/vnd.adobe.photoshop", "application/x-indesign", "application/epub+zip", "application/x-xpinstall", "application/vnd.oasis.opendocument.text", "application/vnd.oasis.opendocument.spreadsheet", "application/vnd.oasis.opendocument.presentation", "application/vnd.openxmlformats-officedocument.wordprocessingml.document", "application/vnd.openxmlformats-officedocument.presentationml.presentation", "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet", "application/zip", "application/x-tar", "application/x-rar-compressed", "application/gzip", "application/x-bzip2", "application/x-7z-compressed", "application/x-apple-diskimage", "application/x-apache-arrow", "video/mp4", "audio/midi", "video/x-matroska", "video/webm", "video/quicktime", "video/vnd.avi", "audio/vnd.wave", "audio/qcelp", "audio/x-ms-asf", "video/x-ms-asf", "application/vnd.ms-asf", "video/mpeg", "video/3gpp", "audio/mpeg", "audio/mp4", "audio/opus", "video/ogg", "audio/ogg", "application/ogg", "audio/x-flac", "audio/ape", "audio/wavpack", "audio/amr", "application/pdf", "application/x-msdownload", "application/x-shockwave-flash", "application/rtf", "application/wasm", "font/woff", "font/woff2", "application/vnd.ms-fontobject", "font/ttf", "font/otf", "image/x-icon", "video/x-flv", "application/postscript", "application/eps", "application/x-xz", "application/x-sqlite3", "application/x-nintendo-nes-rom", "application/x-google-chrome-extension", "application/vnd.ms-cab-compressed", "application/x-deb", "application/x-unix-archive", "application/x-rpm", "application/x-compress", "application/x-lzip", "application/x-cfb", "application/x-mie", "application/mxf", "video/mp2t", "application/x-blender", "image/bpg", "image/jp2", "image/jpx", "image/jpm", "image/mj2", "audio/aiff", "application/xml", "application/x-mobipocket-ebook", "image/heif", "image/heif-sequence", "image/heic", "image/heic-sequence", "image/icns", "image/ktx", "application/dicom", "audio/x-musepack", "text/calendar", "text/vcard", "model/gltf-binary", "application/vnd.tcpdump.pcap", "audio/x-dsf", "application/x.ms.shortcut", "application/x.apple.alias", "audio/x-voc", "audio/vnd.dolby.dd-raw", "audio/x-m4a", "image/apng", "image/x-olympus-orf", "image/x-sony-arw", "image/x-adobe-dng", "image/x-nikon-nef", "image/x-panasonic-rw2", "image/x-fujifilm-raf", "video/x-m4v", "video/3gpp2", "application/x-esri-shape", "audio/aac", "audio/x-it", "audio/x-s3m", "audio/x-xm", "video/MP1S", "video/MP2P", "application/vnd.sketchup.skp", "image/avif", "application/x-lzh-compressed", "application/pgp-encrypted", "application/x-asar", "model/stl", "application/vnd.ms-htmlhelp", "model/3mf", "image/jxl", "application/zstd"] };
      }, 7044: (t, e) => {
        "use strict";
        e.stringToBytes = (t2) => [...t2].map((t3) => t3.charCodeAt(0)), e.tarHeaderChecksumMatches = (t2, e2 = 0) => {
          const r = parseInt(t2.toString("utf8", 148, 154).replace(/\0.*$/, "").trim(), 8);
          if (isNaN(r))
            return false;
          let i = 256;
          for (let r2 = e2; r2 < e2 + 148; r2++)
            i += t2[r2];
          for (let r2 = e2 + 156; r2 < e2 + 512; r2++)
            i += t2[r2];
          return r === i;
        }, e.uint32SyncSafeToken = { get: (t2, e2) => 127 & t2[e2 + 3] | t2[e2 + 2] << 7 | t2[e2 + 1] << 14 | t2[e2] << 21, len: 4 };
      }, 3243: (t, e, r) => {
        "use strict";
        var i = r(9680), n = Object.prototype.toString, a = Object.prototype.hasOwnProperty, o = function(t2, e2, r2) {
          for (var i2 = 0, n2 = t2.length; i2 < n2; i2++)
            a.call(t2, i2) && (null == r2 ? e2(t2[i2], i2, t2) : e2.call(r2, t2[i2], i2, t2));
        }, s = function(t2, e2, r2) {
          for (var i2 = 0, n2 = t2.length; i2 < n2; i2++)
            null == r2 ? e2(t2.charAt(i2), i2, t2) : e2.call(r2, t2.charAt(i2), i2, t2);
        }, h = function(t2, e2, r2) {
          for (var i2 in t2)
            a.call(t2, i2) && (null == r2 ? e2(t2[i2], i2, t2) : e2.call(r2, t2[i2], i2, t2));
        };
        t.exports = function(t2, e2, r2) {
          if (!i(e2))
            throw new TypeError("iterator must be a function");
          var a2;
          arguments.length >= 3 && (a2 = r2), "[object Array]" === n.call(t2) ? o(t2, e2, a2) : "string" == typeof t2 ? s(t2, e2, a2) : h(t2, e2, a2);
        };
      }, 2855: (t, e) => {
        "use strict";
        function r(t2, e2, r2, i) {
          for (var n = t2[e2++], a = 1 << n, o = a + 1, s = o + 1, h = n + 1, l = (1 << h) - 1, f = 0, u = 0, c = 0, d = t2[e2++], p = new Int32Array(4096), m = null; ; ) {
            for (; f < 16 && 0 !== d; )
              u |= t2[e2++] << f, f += 8, 1 === d ? d = t2[e2++] : --d;
            if (f < h)
              break;
            var g = u & l;
            if (u >>= h, f -= h, g !== a) {
              if (g === o)
                break;
              for (var b = g < s ? g : m, _ = 0, y = b; y > a; )
                y = p[y] >> 8, ++_;
              var w = y;
              if (c + _ + (b !== g ? 1 : 0) > i)
                return void console.log("Warning, gif stream longer than expected.");
              r2[c++] = w;
              var v = c += _;
              for (b !== g && (r2[c++] = w), y = b; _--; )
                y = p[y], r2[--v] = 255 & y, y >>= 8;
              null !== m && s < 4096 && (p[s++] = m << 8 | w, s >= l + 1 && h < 12 && (++h, l = l << 1 | 1)), m = g;
            } else
              s = o + 1, l = (1 << (h = n + 1)) - 1, m = null;
          }
          return c !== i && console.log("Warning, gif stream shorter than expected."), r2;
        }
        try {
          e.GifWriter = function(t2, e2, r2, i) {
            var n = 0, a = void 0 === (i = void 0 === i ? {} : i).loop ? null : i.loop, o = void 0 === i.palette ? null : i.palette;
            if (e2 <= 0 || r2 <= 0 || e2 > 65535 || r2 > 65535)
              throw new Error("Width/Height invalid.");
            function s(t3) {
              var e3 = t3.length;
              if (e3 < 2 || e3 > 256 || e3 & e3 - 1)
                throw new Error("Invalid code/color length, must be power of 2 and 2 .. 256.");
              return e3;
            }
            t2[n++] = 71, t2[n++] = 73, t2[n++] = 70, t2[n++] = 56, t2[n++] = 57, t2[n++] = 97;
            var h = 0, l = 0;
            if (null !== o) {
              for (var f = s(o); f >>= 1; )
                ++h;
              if (f = 1 << h, --h, void 0 !== i.background) {
                if ((l = i.background) >= f)
                  throw new Error("Background index out of range.");
                if (0 === l)
                  throw new Error("Background index explicitly passed as 0.");
              }
            }
            if (t2[n++] = 255 & e2, t2[n++] = e2 >> 8 & 255, t2[n++] = 255 & r2, t2[n++] = r2 >> 8 & 255, t2[n++] = (null !== o ? 128 : 0) | h, t2[n++] = l, t2[n++] = 0, null !== o)
              for (var u = 0, c = o.length; u < c; ++u) {
                var d = o[u];
                t2[n++] = d >> 16 & 255, t2[n++] = d >> 8 & 255, t2[n++] = 255 & d;
              }
            if (null !== a) {
              if (a < 0 || a > 65535)
                throw new Error("Loop count invalid.");
              t2[n++] = 33, t2[n++] = 255, t2[n++] = 11, t2[n++] = 78, t2[n++] = 69, t2[n++] = 84, t2[n++] = 83, t2[n++] = 67, t2[n++] = 65, t2[n++] = 80, t2[n++] = 69, t2[n++] = 50, t2[n++] = 46, t2[n++] = 48, t2[n++] = 3, t2[n++] = 1, t2[n++] = 255 & a, t2[n++] = a >> 8 & 255, t2[n++] = 0;
            }
            var p = false;
            this.addFrame = function(e3, r3, i2, a2, h2, l2) {
              if (true === p && (--n, p = false), l2 = void 0 === l2 ? {} : l2, e3 < 0 || r3 < 0 || e3 > 65535 || r3 > 65535)
                throw new Error("x/y invalid.");
              if (i2 <= 0 || a2 <= 0 || i2 > 65535 || a2 > 65535)
                throw new Error("Width/Height invalid.");
              if (h2.length < i2 * a2)
                throw new Error("Not enough pixels for the frame size.");
              var f2 = true, u2 = l2.palette;
              if (null == u2 && (f2 = false, u2 = o), null == u2)
                throw new Error("Must supply either a local or global palette.");
              for (var c2 = s(u2), d2 = 0; c2 >>= 1; )
                ++d2;
              c2 = 1 << d2;
              var m = void 0 === l2.delay ? 0 : l2.delay, g = void 0 === l2.disposal ? 0 : l2.disposal;
              if (g < 0 || g > 3)
                throw new Error("Disposal out of range.");
              var b = false, _ = 0;
              if (void 0 !== l2.transparent && null !== l2.transparent && (b = true, (_ = l2.transparent) < 0 || _ >= c2))
                throw new Error("Transparent color index.");
              if ((0 !== g || b || 0 !== m) && (t2[n++] = 33, t2[n++] = 249, t2[n++] = 4, t2[n++] = g << 2 | (true === b ? 1 : 0), t2[n++] = 255 & m, t2[n++] = m >> 8 & 255, t2[n++] = _, t2[n++] = 0), t2[n++] = 44, t2[n++] = 255 & e3, t2[n++] = e3 >> 8 & 255, t2[n++] = 255 & r3, t2[n++] = r3 >> 8 & 255, t2[n++] = 255 & i2, t2[n++] = i2 >> 8 & 255, t2[n++] = 255 & a2, t2[n++] = a2 >> 8 & 255, t2[n++] = true === f2 ? 128 | d2 - 1 : 0, true === f2)
                for (var y = 0, w = u2.length; y < w; ++y) {
                  var v = u2[y];
                  t2[n++] = v >> 16 & 255, t2[n++] = v >> 8 & 255, t2[n++] = 255 & v;
                }
              return n = function(t3, e4, r4, i3) {
                t3[e4++] = r4;
                var n2 = e4++, a3 = 1 << r4, o2 = a3 - 1, s2 = a3 + 1, h3 = s2 + 1, l3 = r4 + 1, f3 = 0, u3 = 0;
                function c3(r5) {
                  for (; f3 >= r5; )
                    t3[e4++] = 255 & u3, u3 >>= 8, f3 -= 8, e4 === n2 + 256 && (t3[n2] = 255, n2 = e4++);
                }
                function d3(t4) {
                  u3 |= t4 << f3, f3 += l3, c3(8);
                }
                var p2 = i3[0] & o2, m2 = {};
                d3(a3);
                for (var g2 = 1, b2 = i3.length; g2 < b2; ++g2) {
                  var _2 = i3[g2] & o2, y2 = p2 << 8 | _2, w2 = m2[y2];
                  if (void 0 === w2) {
                    for (u3 |= p2 << f3, f3 += l3; f3 >= 8; )
                      t3[e4++] = 255 & u3, u3 >>= 8, f3 -= 8, e4 === n2 + 256 && (t3[n2] = 255, n2 = e4++);
                    4096 === h3 ? (d3(a3), h3 = s2 + 1, l3 = r4 + 1, m2 = {}) : (h3 >= 1 << l3 && ++l3, m2[y2] = h3++), p2 = _2;
                  } else
                    p2 = w2;
                }
                return d3(p2), d3(s2), c3(1), n2 + 1 === e4 ? t3[n2] = 0 : (t3[n2] = e4 - n2 - 1, t3[e4++] = 0), e4;
              }(t2, n, d2 < 2 ? 2 : d2, h2), n;
            }, this.end = function() {
              return false === p && (t2[n++] = 59, p = true), n;
            }, this.getOutputBuffer = function() {
              return t2;
            }, this.setOutputBuffer = function(e3) {
              t2 = e3;
            }, this.getOutputBufferPosition = function() {
              return n;
            }, this.setOutputBufferPosition = function(t3) {
              n = t3;
            };
          }, e.GifReader = function(t2) {
            var e2 = 0;
            if (71 !== t2[e2++] || 73 !== t2[e2++] || 70 !== t2[e2++] || 56 !== t2[e2++] || 56 != (t2[e2++] + 1 & 253) || 97 !== t2[e2++])
              throw new Error("Invalid GIF 87a/89a header.");
            var i = t2[e2++] | t2[e2++] << 8, n = t2[e2++] | t2[e2++] << 8, a = t2[e2++], o = a >> 7, s = 1 << 1 + (7 & a);
            t2[e2++], t2[e2++];
            var h = null, l = null;
            o && (h = e2, l = s, e2 += 3 * s);
            var f = true, u = [], c = 0, d = null, p = 0, m = null;
            for (this.width = i, this.height = n; f && e2 < t2.length; )
              switch (t2[e2++]) {
                case 33:
                  switch (t2[e2++]) {
                    case 255:
                      if (11 !== t2[e2] || 78 == t2[e2 + 1] && 69 == t2[e2 + 2] && 84 == t2[e2 + 3] && 83 == t2[e2 + 4] && 67 == t2[e2 + 5] && 65 == t2[e2 + 6] && 80 == t2[e2 + 7] && 69 == t2[e2 + 8] && 50 == t2[e2 + 9] && 46 == t2[e2 + 10] && 48 == t2[e2 + 11] && 3 == t2[e2 + 12] && 1 == t2[e2 + 13] && 0 == t2[e2 + 16])
                        e2 += 14, m = t2[e2++] | t2[e2++] << 8, e2++;
                      else
                        for (e2 += 12; ; ) {
                          if (!((I = t2[e2++]) >= 0))
                            throw Error("Invalid block size");
                          if (0 === I)
                            break;
                          e2 += I;
                        }
                      break;
                    case 249:
                      if (4 !== t2[e2++] || 0 !== t2[e2 + 4])
                        throw new Error("Invalid graphics extension block.");
                      var g = t2[e2++];
                      c = t2[e2++] | t2[e2++] << 8, d = t2[e2++], 0 == (1 & g) && (d = null), p = g >> 2 & 7, e2++;
                      break;
                    case 254:
                      for (; ; ) {
                        if (!((I = t2[e2++]) >= 0))
                          throw Error("Invalid block size");
                        if (0 === I)
                          break;
                        e2 += I;
                      }
                      break;
                    default:
                      throw new Error("Unknown graphic control label: 0x" + t2[e2 - 1].toString(16));
                  }
                  break;
                case 44:
                  var b = t2[e2++] | t2[e2++] << 8, _ = t2[e2++] | t2[e2++] << 8, y = t2[e2++] | t2[e2++] << 8, w = t2[e2++] | t2[e2++] << 8, v = t2[e2++], x = v >> 6 & 1, E = 1 << 1 + (7 & v), k = h, S = l, M = false;
                  v >> 7 && (M = true, k = e2, S = E, e2 += 3 * E);
                  var A = e2;
                  for (e2++; ; ) {
                    var I;
                    if (!((I = t2[e2++]) >= 0))
                      throw Error("Invalid block size");
                    if (0 === I)
                      break;
                    e2 += I;
                  }
                  u.push({ x: b, y: _, width: y, height: w, has_local_palette: M, palette_offset: k, palette_size: S, data_offset: A, data_length: e2 - A, transparent_index: d, interlaced: !!x, delay: c, disposal: p });
                  break;
                case 59:
                  f = false;
                  break;
                default:
                  throw new Error("Unknown gif block: 0x" + t2[e2 - 1].toString(16));
              }
            this.numFrames = function() {
              return u.length;
            }, this.loopCount = function() {
              return m;
            }, this.frameInfo = function(t3) {
              if (t3 < 0 || t3 >= u.length)
                throw new Error("Frame index out of range.");
              return u[t3];
            }, this.decodeAndBlitFrameBGRA = function(e3, n2) {
              var a2 = this.frameInfo(e3), o2 = a2.width * a2.height, s2 = new Uint8Array(o2);
              r(t2, a2.data_offset, s2, o2);
              var h2 = a2.palette_offset, l2 = a2.transparent_index;
              null === l2 && (l2 = 256);
              var f2 = a2.width, u2 = i - f2, c2 = f2, d2 = 4 * (a2.y * i + a2.x), p2 = 4 * ((a2.y + a2.height) * i + a2.x), m2 = d2, g2 = 4 * u2;
              true === a2.interlaced && (g2 += 4 * i * 7);
              for (var b2 = 8, _2 = 0, y2 = s2.length; _2 < y2; ++_2) {
                var w2 = s2[_2];
                if (0 === c2 && (c2 = f2, (m2 += g2) >= p2 && (g2 = 4 * u2 + 4 * i * (b2 - 1), m2 = d2 + (f2 + u2) * (b2 << 1), b2 >>= 1)), w2 === l2)
                  m2 += 4;
                else {
                  var v2 = t2[h2 + 3 * w2], x2 = t2[h2 + 3 * w2 + 1], E2 = t2[h2 + 3 * w2 + 2];
                  n2[m2++] = E2, n2[m2++] = x2, n2[m2++] = v2, n2[m2++] = 255;
                }
                --c2;
              }
            }, this.decodeAndBlitFrameRGBA = function(e3, n2) {
              var a2 = this.frameInfo(e3), o2 = a2.width * a2.height, s2 = new Uint8Array(o2);
              r(t2, a2.data_offset, s2, o2);
              var h2 = a2.palette_offset, l2 = a2.transparent_index;
              null === l2 && (l2 = 256);
              var f2 = a2.width, u2 = i - f2, c2 = f2, d2 = 4 * (a2.y * i + a2.x), p2 = 4 * ((a2.y + a2.height) * i + a2.x), m2 = d2, g2 = 4 * u2;
              true === a2.interlaced && (g2 += 4 * i * 7);
              for (var b2 = 8, _2 = 0, y2 = s2.length; _2 < y2; ++_2) {
                var w2 = s2[_2];
                if (0 === c2 && (c2 = f2, (m2 += g2) >= p2 && (g2 = 4 * u2 + 4 * i * (b2 - 1), m2 = d2 + (f2 + u2) * (b2 << 1), b2 >>= 1)), w2 === l2)
                  m2 += 4;
                else {
                  var v2 = t2[h2 + 3 * w2], x2 = t2[h2 + 3 * w2 + 1], E2 = t2[h2 + 3 * w2 + 2];
                  n2[m2++] = v2, n2[m2++] = x2, n2[m2++] = E2, n2[m2++] = 255;
                }
                --c2;
              }
            };
          };
        } catch (t2) {
        }
      }, 7604: (t, e, r) => {
        "use strict";
        var i = r(8834).lW;
        class n {
          constructor(...t2) {
            if (0 === t2.length)
              throw new Error("constructor requires parameters");
            const e2 = t2[0];
            if (null !== e2 && "object" == typeof e2)
              if (e2 instanceof n) {
                const t3 = e2.bitmap;
                this.bitmap = { width: t3.width, height: t3.height, data: new i(t3.width * t3.height * 4) }, t3.data.copy(this.bitmap.data);
              } else {
                if (!(e2.width && e2.height && e2.data))
                  throw new Error("unrecognized constructor parameters");
                this.bitmap = e2;
              }
            else {
              if ("number" != typeof e2 || "number" != typeof t2[1])
                throw new Error("unrecognized constructor parameters");
              {
                const r2 = e2, n2 = t2[1], a = t2[2];
                this.bitmap = { width: r2, height: n2 }, i.isBuffer(a) ? this.bitmap.data = a : (this.bitmap.data = new i(r2 * n2 * 4), "number" == typeof a && this.fillRGBA(a));
              }
            }
          }
          blit(t2, e2, r2, i2, n2, a, o) {
            if (i2 + a > this.bitmap.width)
              throw new Error("copy exceeds width of source bitmap");
            if (e2 + a > t2.bitmap.width)
              throw new Error("copy exceeds width of target bitmap");
            if (n2 + o > this.bitmap.height)
              throw new Error("copy exceeds height of source bitmap");
            if (r2 + o > t2.bitmap.height)
              throw new Erro("copy exceeds height of target bitmap");
            const s = this.bitmap.data, h = t2.bitmap.data, l = 4 * this.bitmap.width, f = 4 * t2.bitmap.width, u = 4 * a;
            let c = n2 * l + 4 * i2, d = r2 * f + 4 * e2;
            for (; --o >= 0; )
              s.copy(h, d, c, c + u), c += l, d += f;
            return this;
          }
          fillRGBA(t2) {
            const e2 = this.bitmap.data, r2 = 4 * this.bitmap.height;
            let i2 = 0;
            for (; i2 < r2; )
              e2.writeUInt32BE(t2, i2), i2 += 4;
            for (; i2 < e2.length; )
              e2.copy(e2, i2, 0, r2), i2 += r2;
            return this;
          }
          getRGBA(t2, e2) {
            const r2 = 4 * (e2 * this.bitmap.width + t2);
            return this.bitmap.data.readUInt32BE(r2);
          }
          getRGBASet() {
            const t2 = /* @__PURE__ */ new Set(), e2 = this.bitmap.data;
            for (let r2 = 0; r2 < e2.length; r2 += 4)
              t2.add(e2.readUInt32BE(r2, true));
            return t2;
          }
          greyscale() {
            const t2 = this.bitmap.data;
            return this.scan(0, 0, this.bitmap.width, this.bitmap.height, (e2, r2, i2) => {
              const n2 = Math.round(0.299 * t2[i2] + 0.587 * t2[i2 + 1] + 0.114 * t2[i2 + 2]);
              t2[i2] = n2, t2[i2 + 1] = n2, t2[i2 + 2] = n2;
            }), this;
          }
          reframe(t2, e2, r2, i2, a) {
            const o = t2 < 0 ? 0 : t2, s = e2 < 0 ? 0 : e2, h = r2 + o > this.bitmap.width ? this.bitmap.width - o : r2, l = i2 + s > this.bitmap.height ? this.bitmap.height - s : i2, f = t2 < 0 ? -t2 : 0, u = e2 < 0 ? -e2 : 0;
            let c;
            if (void 0 === a) {
              if (o !== t2 || s != e2 || h !== r2 || l !== i2)
                throw new GifError("fillRGBA required for this reframing");
              c = new n(r2, i2);
            } else
              c = new n(r2, i2, a);
            return this.blit(c, f, u, o, s, h, l), this.bitmap = c.bitmap, this;
          }
          scale(t2) {
            if (1 === t2)
              return;
            if (!Number.isInteger(t2) || t2 < 1)
              throw new Error("the scale must be an integer >= 1");
            const e2 = this.bitmap.width, r2 = this.bitmap.height, n2 = e2 * t2 * 4, a = this.bitmap.data, o = new i(r2 * n2 * t2);
            let s, h = 0, l = 0;
            for (let i2 = 0; i2 < r2; ++i2) {
              s = l;
              for (let r3 = 0; r3 < e2; ++r3) {
                const e3 = a.readUInt32BE(h, true);
                for (let r4 = 0; r4 < t2; ++r4)
                  o.writeUInt32BE(e3, l), l += 4;
                h += 4;
              }
              for (let e3 = 1; e3 < t2; ++e3)
                o.copy(o, l, s, l), l += n2, s += n2;
            }
            return this.bitmap = { width: e2 * t2, height: r2 * t2, data: o }, this;
          }
          scanAllCoords(t2) {
            const e2 = this.bitmap.width, r2 = this.bitmap.data.length;
            let i2 = 0, n2 = 0;
            for (let a = 0; a < r2; a += 4)
              t2(i2, n2, a), ++i2 === e2 && (i2 = 0, ++n2);
          }
          scanAllIndexes(t2) {
            const e2 = this.bitmap.data.length;
            for (let r2 = 0; r2 < e2; r2 += 4)
              t2(r2);
          }
        }
        t.exports = n;
      }, 4364: (t, e) => {
        "use strict";
        class r {
          constructor(t2, e2, r2) {
            this.width = r2.width, this.height = r2.height, this.loops = r2.loops, this.usesTransparency = r2.usesTransparency, this.colorScope = r2.colorScope, this.frames = e2, this.buffer = t2;
          }
        }
        r.GlobalColorsPreferred = 0, r.GlobalColorsOnly = 1, r.LocalColorsOnly = 2;
        class i extends Error {
          constructor(t2) {
            super(t2), t2 instanceof Error && (this.stack = "Gif" + t2.stack);
          }
        }
        e.Gif = r, e.GifError = i;
      }, 6512: (t, e, r) => {
        "use strict";
        var i = r(8834).lW;
        const n = r(2855), { Gif: a, GifError: o } = r(4364);
        function s() {
          const t2 = r(4602);
          return s = function() {
            return t2;
          }, t2;
        }
        const { GifFrame: h } = r(5585), l = 100;
        function f(t2, e2) {
          const r2 = t2.indexOf(e2);
          return -1 === r2 ? null : r2;
        }
        function u(t2, e2) {
          for (var r2, i2 = 0, n2 = t2.length - 1; i2 <= n2; )
            if (t2[r2 = Math.floor((i2 + n2) / 2)] > e2)
              n2 = r2 - 1;
            else {
              if (!(t2[r2] < e2))
                return r2;
              i2 = r2 + 1;
            }
          return null;
        }
        function c(t2) {
          const e2 = t2.colors;
          t2.usesTransparency && e2.push(0);
          const r2 = e2.length;
          let i2 = 2;
          for (; r2 > i2; )
            i2 <<= 1;
          e2.length = i2, e2.fill(0, r2);
        }
        function d(t2, e2) {
          let r2 = t2.bitmap.width * t2.bitmap.height;
          return r2 = Math.ceil(r2 * e2 / 8), r2 += Math.ceil(r2 / 255), l + r2 + 768;
        }
        function p(t2) {
          let e2 = t2.indexCount, r2 = 0;
          for (--e2; e2; )
            ++r2, e2 >>= 1;
          return r2 > 0 ? r2 : 1;
        }
        function m(t2, e2, r2, n2, a2) {
          if (r2.interlaced)
            throw new o("writing interlaced GIFs is not supported");
          const s2 = function(t3, e3, r3) {
            const n3 = r3.colors, a3 = n3.length <= 8 ? f : u, s3 = e3.bitmap.data, h3 = new i(s3.length / 4);
            let l2 = n3.length, c2 = 0, d2 = 0;
            for (; c2 < s3.length; ) {
              if (0 !== s3[c2 + 3]) {
                const t4 = s3.readUInt32BE(c2, true) >> 8 & 16777215;
                h3[d2] = a3(n3, t4);
              } else
                h3[d2] = l2;
              c2 += 4, ++d2;
            }
            if (r3.usesTransparency) {
              if (256 === l2)
                throw new o(`Frame ${t3} already has 256 colorsand so can't use transparency`);
            } else
              l2 = null;
            return { buffer: h3, transparentIndex: l2 };
          }(e2, r2, n2), h2 = { delay: r2.delayCentisecs, disposal: r2.disposalMethod, transparent: s2.transparentIndex };
          a2 && (c(n2), h2.palette = n2.colors);
          try {
            let e3, n3 = t2.getOutputBuffer(), a3 = t2.getOutputBufferPosition(), o2 = true;
            for (; o2; )
              if (e3 = t2.addFrame(r2.xOffset, r2.yOffset, r2.bitmap.width, r2.bitmap.height, s2.buffer, h2), o2 = false, e3 >= n3.length - 1) {
                const e4 = new i(1.5 * n3.length);
                n3.copy(e4), t2.setOutputBuffer(e4), t2.setOutputBufferPosition(a3), n3 = e4, o2 = true;
              }
            return n3;
          } catch (t3) {
            throw new o(t3);
          }
        }
        e.GifCodec = class {
          constructor(t2 = {}) {
            this._transparentRGB = null, "number" == typeof t2.transparentRGB && 0 !== t2.transparentRGB && (this._transparentRGBA = 256 * t2.transparentRGB), this._testInitialBufferSize = 0;
          }
          decodeGif(t2) {
            try {
              let e2;
              try {
                e2 = new n.GifReader(t2);
              } catch (t3) {
                throw new o(t3);
              }
              const r2 = e2.numFrames(), i2 = [], s2 = { width: e2.width, height: e2.height, loops: e2.loopCount(), usesTransparency: false };
              for (let t3 = 0; t3 < r2; ++t3) {
                const r3 = this._decodeFrame(e2, t3, s2.usesTransparency);
                i2.push(r3.frame), r3.usesTransparency && (s2.usesTransparency = true);
              }
              return Promise.resolve(new a(t2, i2, s2));
            } catch (t3) {
              return Promise.reject(t3);
            }
          }
          encodeGif(t2, e2 = {}) {
            try {
              if (null === t2 || 0 === t2.length)
                throw new o("there are no frames");
              const r2 = s().getMaxDimensions(t2);
              return (e2 = Object.assign({}, e2)).width = r2.maxWidth, e2.height = r2.maxHeight, void 0 === e2.loops && (e2.loops = 0), e2.colorScope = e2.colorScope || a.GlobalColorsPreferred, Promise.resolve(this._encodeGif(t2, e2));
            } catch (t3) {
              return Promise.reject(t3);
            }
          }
          _decodeFrame(t2, e2, r2) {
            let n2, a2;
            try {
              if (n2 = t2.frameInfo(e2), a2 = new i(t2.width * t2.height * 4), t2.decodeAndBlitFrameRGBA(e2, a2), n2.width !== t2.width || n2.height !== t2.height) {
                if (n2.y && (a2 = a2.slice(n2.y * t2.width * 4)), t2.width > n2.width)
                  for (let e3 = 0; e3 < n2.height; ++e3)
                    a2.copy(a2, e3 * n2.width * 4, 4 * (n2.x + e3 * t2.width), 4 * (n2.x + e3 * t2.width) + 4 * n2.width);
                a2 = a2.slice(0, n2.width * n2.height * 4);
              }
            } catch (t3) {
              throw new o(t3);
            }
            let s2 = false;
            if (null === this._transparentRGBA) {
              if (!r2)
                for (let t3 = 3; t3 < a2.length; t3 += 4)
                  0 === a2[t3] && (s2 = true, t3 = a2.length);
            } else
              for (let t3 = 3; t3 < a2.length; t3 += 4)
                0 === a2[t3] && (a2.writeUInt32BE(this._transparentRGBA, t3 - 3), s2 = true);
            return { frame: new h(n2.width, n2.height, a2, { xOffset: n2.x, yOffset: n2.y, disposalMethod: n2.disposal, interlaced: n2.interlaced, delayCentisecs: n2.delay }), usesTransparency: s2 };
          }
          _encodeGif(t2, e2) {
            let r2;
            if (e2.colorScope === a.LocalColorsOnly)
              r2 = s().getColorInfo(t2, 0);
            else if (r2 = s().getColorInfo(t2, 256), !r2.colors) {
              if (e2.colorScope === a.GlobalColorsOnly)
                throw new o("Too many color indexes for global color table");
              e2.colorScope = a.LocalColorsOnly;
            }
            e2.usesTransparency = r2.usesTransparency;
            const h2 = r2.palettes;
            return e2.colorScope === a.LocalColorsOnly ? function(t3, e3, r3, s2) {
              const h3 = { loop: e3.loops };
              let l2, f2 = new i(2e3);
              try {
                l2 = new n.GifWriter(f2, e3.width, e3.height, h3);
              } catch (t4) {
                throw new o(t4);
              }
              for (let e4 = 0; e4 < t3.length; ++e4)
                f2 = m(l2, e4, t3[e4], s2[e4], true);
              return new a(f2.slice(0, l2.end()), t3, e3);
            }(t2, e2, 0, h2) : function(t3, e3, r3, s2) {
              const h3 = { colors: s2.colors.slice(), usesTransparency: s2.usesTransparency };
              c(h3);
              const l2 = { palette: h3.colors, loop: e3.loops };
              let f2, u2 = new i(2e3);
              try {
                f2 = new n.GifWriter(u2, e3.width, e3.height, l2);
              } catch (t4) {
                throw new o(t4);
              }
              for (let e4 = 0; e4 < t3.length; ++e4)
                u2 = m(f2, e4, t3[e4], s2, false);
              return new a(u2.slice(0, f2.end()), t3, e3);
            }(t2, e2, 0, r2);
          }
          _getSizeEstimateGlobal(t2, e2) {
            if (this._testInitialBufferSize > 0)
              return this._testInitialBufferSize;
            let r2 = 968;
            const i2 = p(t2);
            return e2.forEach((t3) => {
              r2 += d(t3, i2);
            }), r2;
          }
          _getSizeEstimateLocal(t2, e2) {
            if (this._testInitialBufferSize > 0)
              return this._testInitialBufferSize;
            let r2 = 200;
            for (let i2 = 0; i2 < e2.length; ++i2) {
              const n2 = p(t2[i2]);
              r2 += d(e2[i2], n2);
            }
            return r2;
          }
        };
      }, 5585: (t, e, r) => {
        "use strict";
        const i = r(7604), { GifError: n } = r(4364);
        class a extends i {
          constructor(...t2) {
            if (super(...t2), t2[0] instanceof a) {
              const e2 = t2[0];
              this.xOffset = e2.xOffset, this.yOffset = e2.yOffset, this.disposalMethod = e2.disposalMethod, this.delayCentisecs = e2.delayCentisecs, this.interlaced = e2.interlaced;
            } else {
              const e2 = t2[t2.length - 1];
              let r2 = {};
              "object" != typeof e2 || e2 instanceof i || (r2 = e2), this.xOffset = r2.xOffset || 0, this.yOffset = r2.yOffset || 0, this.disposalMethod = void 0 !== r2.disposalMethod ? r2.disposalMethod : a.DisposeToBackgroundColor, this.delayCentisecs = r2.delayCentisecs || 8, this.interlaced = r2.interlaced || false;
            }
          }
          getPalette() {
            const t2 = /* @__PURE__ */ new Set(), e2 = this.bitmap.data;
            let r2 = 0, i2 = false;
            for (; r2 < e2.length; ) {
              if (0 === e2[r2 + 3])
                i2 = true;
              else {
                const i3 = e2.readUInt32BE(r2, true) >> 8 & 16777215;
                t2.add(i3);
              }
              r2 += 4;
            }
            const n2 = new Array(t2.size), a2 = t2.values();
            for (r2 = 0; r2 < n2.length; ++r2)
              n2[r2] = a2.next().value;
            n2.sort((t3, e3) => t3 - e3);
            let o = n2.length;
            return i2 && ++o, { colors: n2, usesTransparency: i2, indexCount: o };
          }
        }
        a.DisposeToAnything = 0, a.DisposeNothing = 1, a.DisposeToBackgroundColor = 2, a.DisposeToPrevious = 3, e.GifFrame = a;
      }, 4602: (t, e, r) => {
        "use strict";
        var i = r(8834).lW;
        const n = r(8522), a = r(2460), o = r(7604), { GifFrame: s } = r(5585), { GifError: h } = r(4364), { GifCodec: l } = r(6512), f = [".jpg", ".jpeg", ".png", ".bmp"], u = new l();
        function c(t2, e2, r2, i2, n2) {
          const o2 = Array.isArray(t2) ? t2 : [t2];
          if (n2) {
            if (["FloydSteinberg", "FalseFloydSteinberg", "Stucki", "Atkinson", "Jarvis", "Burkes", "Sierra", "TwoSierra", "SierraLite"].indexOf(n2.ditherAlgorithm) < 0)
              throw new Error(`Invalid ditherAlgorithm '${n2.ditherAlgorithm}'`);
            void 0 === n2.serpentine && (n2.serpentine = true), void 0 === n2.minimumColorDistanceToDither && (n2.minimumColorDistanceToDither = 0), void 0 === n2.calculateErrorLikeGIMP && (n2.calculateErrorLikeGIMP = false);
          }
          const s2 = new a.distance.Euclidean(), h2 = new a.palette[e2](s2, r2, i2);
          let l2;
          l2 = n2 ? new a.image.ErrorDiffusionArray(s2, a.image.ErrorDiffusionArrayKernel[n2.ditherAlgorithm], n2.serpentine, n2.minimumColorDistanceToDither, n2.calculateErrorLikeGIMP) : new a.image.NearestColor(s2);
          const f2 = [];
          o2.forEach((t3) => {
            const e3 = t3.bitmap.data, r3 = new ArrayBuffer(e3.length), i3 = new Uint32Array(r3);
            for (let t4 = 0, r4 = 0; t4 < e3.length; t4 += 4, ++r4)
              i3[r4] = e3.readUInt32LE(t4, true);
            const n3 = a.utils.PointContainer.fromUint32Array(i3, t3.bitmap.width, t3.bitmap.height);
            h2.sample(n3), f2.push(n3);
          });
          const u2 = h2.quantizeSync();
          for (let t3 = 0; t3 < o2.length; ++t3) {
            const e3 = o2[t3].bitmap.data, r3 = l2.quantizeSync(f2[t3], u2).toUint32Array();
            for (let t4 = 0, i3 = 0; t4 < e3.length; t4 += 4, ++i3)
              e3.writeUInt32LE(r3[i3], t4);
          }
        }
        e.cloneFrames = function(t2) {
          let e2 = [];
          return t2.forEach((t3) => {
            e2.push(new s(t3));
          }), e2;
        }, e.getColorInfo = function(t2, e2) {
          let r2 = false;
          const i2 = [];
          for (let e3 = 0; e3 < t2.length; ++e3) {
            let n3 = t2[e3].getPalette();
            if (n3.usesTransparency && (r2 = true), n3.indexCount > 256)
              throw new h(`Frame ${e3} uses more than 256 color indexes`);
            i2.push(n3);
          }
          if (0 === e2)
            return { usesTransparency: r2, palettes: i2 };
          const n2 = /* @__PURE__ */ new Set();
          i2.forEach((t3) => {
            t3.colors.forEach((t4) => {
              n2.add(t4);
            });
          });
          let a2 = n2.size;
          if (r2 && ++a2, e2 && a2 > e2)
            return { usesTransparency: r2, palettes: i2 };
          const o2 = new Array(n2.size), s2 = n2.values();
          for (let t3 = 0; t3 < o2.length; ++t3)
            o2[t3] = s2.next().value;
          return o2.sort((t3, e3) => t3 - e3), { colors: o2, indexCount: a2, usesTransparency: r2, palettes: i2 };
        }, e.copyAsJimp = function(t2, r2) {
          return e.shareAsJimp(t2, new o(r2));
        }, e.getMaxDimensions = function(t2) {
          let e2 = 0, r2 = 0;
          return t2.forEach((t3) => {
            const i2 = t3.xOffset + t3.bitmap.width;
            i2 > e2 && (e2 = i2);
            const n2 = t3.yOffset + t3.bitmap.height;
            n2 > r2 && (r2 = n2);
          }), { maxWidth: e2, maxHeight: r2 };
        }, e.quantizeDekker = function(t2, e2, r2) {
          c(t2, "NeuQuantFloat", e2 = e2 || 256, 0, r2);
        }, e.quantizeSorokin = function(t2, e2, r2, i2) {
          let n2;
          switch (e2 = e2 || 256, r2 = r2 || "min-pop") {
            case "min-pop":
              n2 = 2;
              break;
            case "top-pop":
              n2 = 1;
              break;
            default:
              throw new Error(`Invalid quantizeSorokin histogram '${r2}'`);
          }
          c(t2, "RGBQuant", e2, n2, i2);
        }, e.quantizeWu = function(t2, e2, r2, i2) {
          if (e2 = e2 || 256, (r2 = r2 || 5) < 1 || r2 > 8)
            throw new Error("Invalid quantization quality");
          c(t2, "WuQuant", e2, r2, i2);
        }, e.read = function(t2, e2) {
          return e2 = e2 || u, i.isBuffer(t2) ? e2.decodeGif(t2) : (r2 = t2, new Promise((t3, e3) => {
            n.readFile(r2, (r3, i2) => r3 ? e3(r3) : t3(i2));
          })).then((t3) => e2.decodeGif(t3));
          var r2;
        }, e.shareAsJimp = function(t2, e2) {
          const r2 = new t2(e2.bitmap.width, e2.bitmap.height, 0);
          return r2.bitmap.data = e2.bitmap.data, r2;
        }, e.write = function(t2, e2, r2, i2) {
          i2 = i2 || u;
          const a2 = t2.match(/\.[a-zA-Z]+$/);
          if (null !== a2 && f.includes(a2[0].toLowerCase()))
            throw new Error(`GIF '${t2}' has an unexpected suffix`);
          return i2.encodeGif(e2, r2).then((e3) => function(t3, e4) {
            return new Promise((r3, i3) => {
              n.writeFile(t3, e4, (t4) => t4 ? i3(t4) : r3());
            });
          }(t2, e3.buffer).then(() => e3));
        };
      }, 9455: (t, e, r) => {
        "use strict";
        const i = r(7604), { Gif: n, GifError: a } = r(4364), { GifCodec: o } = r(6512), { GifFrame: s } = r(5585), h = r(4602);
        t.exports = { BitmapImage: i, Gif: n, GifCodec: o, GifFrame: s, GifUtil: h, GifError: a };
      }, 5048: (t, e, r) => {
        var i;
        i = "undefined" != typeof window ? window : void 0 !== r.g ? r.g : "undefined" != typeof self ? self : {}, t.exports = i;
      }, 2333: (t, e) => {
        e.read = function(t2, e2, r, i, n) {
          var a, o, s = 8 * n - i - 1, h = (1 << s) - 1, l = h >> 1, f = -7, u = r ? n - 1 : 0, c = r ? -1 : 1, d = t2[e2 + u];
          for (u += c, a = d & (1 << -f) - 1, d >>= -f, f += s; f > 0; a = 256 * a + t2[e2 + u], u += c, f -= 8)
            ;
          for (o = a & (1 << -f) - 1, a >>= -f, f += i; f > 0; o = 256 * o + t2[e2 + u], u += c, f -= 8)
            ;
          if (0 === a)
            a = 1 - l;
          else {
            if (a === h)
              return o ? NaN : 1 / 0 * (d ? -1 : 1);
            o += Math.pow(2, i), a -= l;
          }
          return (d ? -1 : 1) * o * Math.pow(2, a - i);
        }, e.write = function(t2, e2, r, i, n, a) {
          var o, s, h, l = 8 * a - n - 1, f = (1 << l) - 1, u = f >> 1, c = 23 === n ? Math.pow(2, -24) - Math.pow(2, -77) : 0, d = i ? 0 : a - 1, p = i ? 1 : -1, m = e2 < 0 || 0 === e2 && 1 / e2 < 0 ? 1 : 0;
          for (e2 = Math.abs(e2), isNaN(e2) || e2 === 1 / 0 ? (s = isNaN(e2) ? 1 : 0, o = f) : (o = Math.floor(Math.log(e2) / Math.LN2), e2 * (h = Math.pow(2, -o)) < 1 && (o--, h *= 2), (e2 += o + u >= 1 ? c / h : c * Math.pow(2, 1 - u)) * h >= 2 && (o++, h /= 2), o + u >= f ? (s = 0, o = f) : o + u >= 1 ? (s = (e2 * h - 1) * Math.pow(2, n), o += u) : (s = e2 * Math.pow(2, u - 1) * Math.pow(2, n), o = 0)); n >= 8; t2[r + d] = 255 & s, d += p, s /= 256, n -= 8)
            ;
          for (o = o << n | s, l += n; l > 0; t2[r + d] = 255 & o, d += p, o /= 256, l -= 8)
            ;
          t2[r + d - p] |= 128 * m;
        };
      }, 9680: (t) => {
        "use strict";
        var e = Function.prototype.toString, r = /^\s*class\b/, i = function(t2) {
          try {
            var i2 = e.call(t2);
            return r.test(i2);
          } catch (t3) {
            return false;
          }
        }, n = Object.prototype.toString, a = "function" == typeof Symbol && "symbol" == typeof Symbol.toStringTag;
        t.exports = function(t2) {
          if (!t2)
            return false;
          if ("function" != typeof t2 && "object" != typeof t2)
            return false;
          if ("function" == typeof t2 && !t2.prototype)
            return true;
          if (a)
            return function(t3) {
              try {
                return !i(t3) && (e.call(t3), true);
              } catch (t4) {
                return false;
              }
            }(t2);
          if (i(t2))
            return false;
          var r2 = n.call(t2);
          return "[object Function]" === r2 || "[object GeneratorFunction]" === r2;
        };
      }, 9748: (t) => {
        t.exports = function(t2) {
          var r = e.call(t2);
          return "[object Function]" === r || "function" == typeof t2 && "[object RegExp]" !== r || "undefined" != typeof window && (t2 === window.setTimeout || t2 === window.alert || t2 === window.confirm || t2 === window.prompt);
        };
        var e = Object.prototype.toString;
      }, 9307: (t, e, r) => {
        r(6168), t.exports = self.fetch.bind(self);
      }, 2691: (t, e, r) => {
        var i = r(706), n = r(770);
        t.exports = { encode: i, decode: n };
      }, 770: (t, e, r) => {
        var i = r(8834).lW, n = function() {
          "use strict";
          var t2 = new Int32Array([0, 1, 8, 16, 9, 2, 3, 10, 17, 24, 32, 25, 18, 11, 4, 5, 12, 19, 26, 33, 40, 48, 41, 34, 27, 20, 13, 6, 7, 14, 21, 28, 35, 42, 49, 56, 57, 50, 43, 36, 29, 22, 15, 23, 30, 37, 44, 51, 58, 59, 52, 45, 38, 31, 39, 46, 53, 60, 61, 54, 47, 55, 62, 63]), e2 = 4017, r2 = 799, i2 = 3406, n2 = 2276, a = 1567, o = 3784, s = 5793, h = 2896;
          function l() {
          }
          function f(t3, e3) {
            for (var r3, i3, n3 = 0, a2 = [], o2 = 16; o2 > 0 && !t3[o2 - 1]; )
              o2--;
            a2.push({ children: [], index: 0 });
            var s2, h2 = a2[0];
            for (r3 = 0; r3 < o2; r3++) {
              for (i3 = 0; i3 < t3[r3]; i3++) {
                for ((h2 = a2.pop()).children[h2.index] = e3[n3]; h2.index > 0; ) {
                  if (0 === a2.length)
                    throw new Error("Could not recreate Huffman Table");
                  h2 = a2.pop();
                }
                for (h2.index++, a2.push(h2); a2.length <= r3; )
                  a2.push(s2 = { children: [], index: 0 }), h2.children[h2.index] = s2.children, h2 = s2;
                n3++;
              }
              r3 + 1 < o2 && (a2.push(s2 = { children: [], index: 0 }), h2.children[h2.index] = s2.children, h2 = s2);
            }
            return a2[0].children;
          }
          function u(e3, r3, i3, n3, a2, o2, s2, h2, l2, f2) {
            i3.precision, i3.samplesPerLine, i3.scanLines;
            var u2 = i3.mcusPerLine, c2 = i3.progressive, d2 = (i3.maxH, i3.maxV, r3), p2 = 0, m2 = 0;
            function g2() {
              if (m2 > 0)
                return m2--, p2 >> m2 & 1;
              if (255 == (p2 = e3[r3++])) {
                var t3 = e3[r3++];
                if (t3)
                  throw new Error("unexpected marker: " + (p2 << 8 | t3).toString(16));
              }
              return m2 = 7, p2 >>> 7;
            }
            function b(t3) {
              for (var e4, r4 = t3; null !== (e4 = g2()); ) {
                if ("number" == typeof (r4 = r4[e4]))
                  return r4;
                if ("object" != typeof r4)
                  throw new Error("invalid huffman sequence");
              }
              return null;
            }
            function _(t3) {
              for (var e4 = 0; t3 > 0; ) {
                var r4 = g2();
                if (null === r4)
                  return;
                e4 = e4 << 1 | r4, t3--;
              }
              return e4;
            }
            function y(t3) {
              var e4 = _(t3);
              return e4 >= 1 << t3 - 1 ? e4 : e4 + (-1 << t3) + 1;
            }
            var w, v = 0, x = 0;
            function E(t3, e4, r4, i4, n4) {
              var a3 = r4 % u2, o3 = (r4 / u2 | 0) * t3.v + i4, s3 = a3 * t3.h + n4;
              void 0 === t3.blocks[o3] && f2.tolerantDecoding || e4(t3, t3.blocks[o3][s3]);
            }
            function k(t3, e4, r4) {
              var i4 = r4 / t3.blocksPerLine | 0, n4 = r4 % t3.blocksPerLine;
              void 0 === t3.blocks[i4] && f2.tolerantDecoding || e4(t3, t3.blocks[i4][n4]);
            }
            var S, M, A, I, B, T, R = n3.length;
            T = c2 ? 0 === o2 ? 0 === h2 ? function(t3, e4) {
              var r4 = b(t3.huffmanTableDC), i4 = 0 === r4 ? 0 : y(r4) << l2;
              e4[0] = t3.pred += i4;
            } : function(t3, e4) {
              e4[0] |= g2() << l2;
            } : 0 === h2 ? function(e4, r4) {
              if (v > 0)
                v--;
              else
                for (var i4 = o2, n4 = s2; i4 <= n4; ) {
                  var a3 = b(e4.huffmanTableAC), h3 = 15 & a3, f3 = a3 >> 4;
                  if (0 !== h3)
                    r4[t2[i4 += f3]] = y(h3) * (1 << l2), i4++;
                  else {
                    if (f3 < 15) {
                      v = _(f3) + (1 << f3) - 1;
                      break;
                    }
                    i4 += 16;
                  }
                }
            } : function(e4, r4) {
              for (var i4 = o2, n4 = s2, a3 = 0; i4 <= n4; ) {
                var h3 = t2[i4], f3 = r4[h3] < 0 ? -1 : 1;
                switch (x) {
                  case 0:
                    var u3 = b(e4.huffmanTableAC), c3 = 15 & u3;
                    if (a3 = u3 >> 4, 0 === c3)
                      a3 < 15 ? (v = _(a3) + (1 << a3), x = 4) : (a3 = 16, x = 1);
                    else {
                      if (1 !== c3)
                        throw new Error("invalid ACn encoding");
                      w = y(c3), x = a3 ? 2 : 3;
                    }
                    continue;
                  case 1:
                  case 2:
                    r4[h3] ? r4[h3] += (g2() << l2) * f3 : 0 == --a3 && (x = 2 == x ? 3 : 0);
                    break;
                  case 3:
                    r4[h3] ? r4[h3] += (g2() << l2) * f3 : (r4[h3] = w << l2, x = 0);
                    break;
                  case 4:
                    r4[h3] && (r4[h3] += (g2() << l2) * f3);
                }
                i4++;
              }
              4 === x && 0 == --v && (x = 0);
            } : function(e4, r4) {
              var i4 = b(e4.huffmanTableDC), n4 = 0 === i4 ? 0 : y(i4);
              r4[0] = e4.pred += n4;
              for (var a3 = 1; a3 < 64; ) {
                var o3 = b(e4.huffmanTableAC), s3 = 15 & o3, h3 = o3 >> 4;
                if (0 !== s3)
                  r4[t2[a3 += h3]] = y(s3), a3++;
                else {
                  if (h3 < 15)
                    break;
                  a3 += 16;
                }
              }
            };
            var P, O, L, C, U = 0;
            for (O = 1 == R ? n3[0].blocksPerLine * n3[0].blocksPerColumn : u2 * i3.mcusPerColumn, a2 || (a2 = O); U < O; ) {
              for (M = 0; M < R; M++)
                n3[M].pred = 0;
              if (v = 0, 1 == R)
                for (S = n3[0], B = 0; B < a2; B++)
                  k(S, T, U), U++;
              else
                for (B = 0; B < a2; B++) {
                  for (M = 0; M < R; M++)
                    for (L = (S = n3[M]).h, C = S.v, A = 0; A < C; A++)
                      for (I = 0; I < L; I++)
                        E(S, T, U, A, I);
                  if (++U === O)
                    break;
                }
              if (U === O)
                do {
                  if (255 === e3[r3] && 0 !== e3[r3 + 1])
                    break;
                  r3 += 1;
                } while (r3 < e3.length - 2);
              if (m2 = 0, (P = e3[r3] << 8 | e3[r3 + 1]) < 65280)
                throw new Error("marker was not found");
              if (!(P >= 65488 && P <= 65495))
                break;
              r3 += 2;
            }
            return r3 - d2;
          }
          function c(t3, l2) {
            var f2, u2, c2 = [], d2 = l2.blocksPerLine, p2 = l2.blocksPerColumn, m2 = d2 << 3, b = new Int32Array(64), _ = new Uint8Array(64);
            function y(t4, f3, u3) {
              var c3, d3, p3, m3, g2, b2, _2, y2, w2, v2, x2 = l2.quantizationTable, E2 = u3;
              for (v2 = 0; v2 < 64; v2++)
                E2[v2] = t4[v2] * x2[v2];
              for (v2 = 0; v2 < 8; ++v2) {
                var k2 = 8 * v2;
                0 != E2[1 + k2] || 0 != E2[2 + k2] || 0 != E2[3 + k2] || 0 != E2[4 + k2] || 0 != E2[5 + k2] || 0 != E2[6 + k2] || 0 != E2[7 + k2] ? (c3 = s * E2[0 + k2] + 128 >> 8, d3 = s * E2[4 + k2] + 128 >> 8, p3 = E2[2 + k2], m3 = E2[6 + k2], g2 = h * (E2[1 + k2] - E2[7 + k2]) + 128 >> 8, y2 = h * (E2[1 + k2] + E2[7 + k2]) + 128 >> 8, b2 = E2[3 + k2] << 4, _2 = E2[5 + k2] << 4, w2 = c3 - d3 + 1 >> 1, c3 = c3 + d3 + 1 >> 1, d3 = w2, w2 = p3 * o + m3 * a + 128 >> 8, p3 = p3 * a - m3 * o + 128 >> 8, m3 = w2, w2 = g2 - _2 + 1 >> 1, g2 = g2 + _2 + 1 >> 1, _2 = w2, w2 = y2 + b2 + 1 >> 1, b2 = y2 - b2 + 1 >> 1, y2 = w2, w2 = c3 - m3 + 1 >> 1, c3 = c3 + m3 + 1 >> 1, m3 = w2, w2 = d3 - p3 + 1 >> 1, d3 = d3 + p3 + 1 >> 1, p3 = w2, w2 = g2 * n2 + y2 * i2 + 2048 >> 12, g2 = g2 * i2 - y2 * n2 + 2048 >> 12, y2 = w2, w2 = b2 * r2 + _2 * e2 + 2048 >> 12, b2 = b2 * e2 - _2 * r2 + 2048 >> 12, _2 = w2, E2[0 + k2] = c3 + y2, E2[7 + k2] = c3 - y2, E2[1 + k2] = d3 + _2, E2[6 + k2] = d3 - _2, E2[2 + k2] = p3 + b2, E2[5 + k2] = p3 - b2, E2[3 + k2] = m3 + g2, E2[4 + k2] = m3 - g2) : (w2 = s * E2[0 + k2] + 512 >> 10, E2[0 + k2] = w2, E2[1 + k2] = w2, E2[2 + k2] = w2, E2[3 + k2] = w2, E2[4 + k2] = w2, E2[5 + k2] = w2, E2[6 + k2] = w2, E2[7 + k2] = w2);
              }
              for (v2 = 0; v2 < 8; ++v2) {
                var S2 = v2;
                0 != E2[8 + S2] || 0 != E2[16 + S2] || 0 != E2[24 + S2] || 0 != E2[32 + S2] || 0 != E2[40 + S2] || 0 != E2[48 + S2] || 0 != E2[56 + S2] ? (c3 = s * E2[0 + S2] + 2048 >> 12, d3 = s * E2[32 + S2] + 2048 >> 12, p3 = E2[16 + S2], m3 = E2[48 + S2], g2 = h * (E2[8 + S2] - E2[56 + S2]) + 2048 >> 12, y2 = h * (E2[8 + S2] + E2[56 + S2]) + 2048 >> 12, b2 = E2[24 + S2], _2 = E2[40 + S2], w2 = c3 - d3 + 1 >> 1, c3 = c3 + d3 + 1 >> 1, d3 = w2, w2 = p3 * o + m3 * a + 2048 >> 12, p3 = p3 * a - m3 * o + 2048 >> 12, m3 = w2, w2 = g2 - _2 + 1 >> 1, g2 = g2 + _2 + 1 >> 1, _2 = w2, w2 = y2 + b2 + 1 >> 1, b2 = y2 - b2 + 1 >> 1, y2 = w2, w2 = c3 - m3 + 1 >> 1, c3 = c3 + m3 + 1 >> 1, m3 = w2, w2 = d3 - p3 + 1 >> 1, d3 = d3 + p3 + 1 >> 1, p3 = w2, w2 = g2 * n2 + y2 * i2 + 2048 >> 12, g2 = g2 * i2 - y2 * n2 + 2048 >> 12, y2 = w2, w2 = b2 * r2 + _2 * e2 + 2048 >> 12, b2 = b2 * e2 - _2 * r2 + 2048 >> 12, _2 = w2, E2[0 + S2] = c3 + y2, E2[56 + S2] = c3 - y2, E2[8 + S2] = d3 + _2, E2[48 + S2] = d3 - _2, E2[16 + S2] = p3 + b2, E2[40 + S2] = p3 - b2, E2[24 + S2] = m3 + g2, E2[32 + S2] = m3 - g2) : (w2 = s * u3[v2 + 0] + 8192 >> 14, E2[0 + S2] = w2, E2[8 + S2] = w2, E2[16 + S2] = w2, E2[24 + S2] = w2, E2[32 + S2] = w2, E2[40 + S2] = w2, E2[48 + S2] = w2, E2[56 + S2] = w2);
              }
              for (v2 = 0; v2 < 64; ++v2) {
                var M = 128 + (E2[v2] + 8 >> 4);
                f3[v2] = M < 0 ? 0 : M > 255 ? 255 : M;
              }
            }
            g(m2 * p2 * 8);
            for (var w = 0; w < p2; w++) {
              var v = w << 3;
              for (f2 = 0; f2 < 8; f2++)
                c2.push(new Uint8Array(m2));
              for (var x = 0; x < d2; x++) {
                y(l2.blocks[w][x], _, b);
                var E = 0, k = x << 3;
                for (u2 = 0; u2 < 8; u2++) {
                  var S = c2[v + u2];
                  for (f2 = 0; f2 < 8; f2++)
                    S[k + f2] = _[E++];
                }
              }
            }
            return c2;
          }
          function d(t3) {
            return t3 < 0 ? 0 : t3 > 255 ? 255 : t3;
          }
          l.prototype = { load: function(t3) {
            var e3 = new XMLHttpRequest();
            e3.open("GET", t3, true), e3.responseType = "arraybuffer", e3.onload = (function() {
              var t4 = new Uint8Array(e3.response || e3.mozResponseArrayBuffer);
              this.parse(t4), this.onload && this.onload();
            }).bind(this), e3.send(null);
          }, parse: function(e3) {
            var r3 = 1e3 * this.opts.maxResolutionInMP * 1e3, i3 = 0;
            function n3() {
              var t3 = e3[i3] << 8 | e3[i3 + 1];
              return i3 += 2, t3;
            }
            function a2(t3) {
              var e4, r4, i4 = 1, n4 = 1;
              for (r4 in t3.components)
                t3.components.hasOwnProperty(r4) && (i4 < (e4 = t3.components[r4]).h && (i4 = e4.h), n4 < e4.v && (n4 = e4.v));
              var a3 = Math.ceil(t3.samplesPerLine / 8 / i4), o3 = Math.ceil(t3.scanLines / 8 / n4);
              for (r4 in t3.components)
                if (t3.components.hasOwnProperty(r4)) {
                  e4 = t3.components[r4];
                  var s3 = Math.ceil(Math.ceil(t3.samplesPerLine / 8) * e4.h / i4), h3 = Math.ceil(Math.ceil(t3.scanLines / 8) * e4.v / n4), l3 = a3 * e4.h, f2 = o3 * e4.v, u2 = [];
                  g(f2 * l3 * 256);
                  for (var c2 = 0; c2 < f2; c2++) {
                    for (var d3 = [], p3 = 0; p3 < l3; p3++)
                      d3.push(new Int32Array(64));
                    u2.push(d3);
                  }
                  e4.blocksPerLine = s3, e4.blocksPerColumn = h3, e4.blocks = u2;
                }
              t3.maxH = i4, t3.maxV = n4, t3.mcusPerLine = a3, t3.mcusPerColumn = o3;
            }
            e3.length;
            var o2, s2, h2, l2, d2 = null, p2 = null, m2 = [], b = [], _ = [], y = [], w = n3(), v = -1;
            if (this.comments = [], 65496 != w)
              throw new Error("SOI not found");
            for (w = n3(); 65497 != w; ) {
              switch (w) {
                case 65280:
                  break;
                case 65504:
                case 65505:
                case 65506:
                case 65507:
                case 65508:
                case 65509:
                case 65510:
                case 65511:
                case 65512:
                case 65513:
                case 65514:
                case 65515:
                case 65516:
                case 65517:
                case 65518:
                case 65519:
                case 65534:
                  var x = (h2 = void 0, l2 = void 0, h2 = n3(), l2 = e3.subarray(i3, i3 + h2 - 2), i3 += l2.length, l2);
                  if (65534 === w) {
                    var E = String.fromCharCode.apply(null, x);
                    this.comments.push(E);
                  }
                  65504 === w && 74 === x[0] && 70 === x[1] && 73 === x[2] && 70 === x[3] && 0 === x[4] && (d2 = { version: { major: x[5], minor: x[6] }, densityUnits: x[7], xDensity: x[8] << 8 | x[9], yDensity: x[10] << 8 | x[11], thumbWidth: x[12], thumbHeight: x[13], thumbData: x.subarray(14, 14 + 3 * x[12] * x[13]) }), 65505 === w && 69 === x[0] && 120 === x[1] && 105 === x[2] && 102 === x[3] && 0 === x[4] && (this.exifBuffer = x.subarray(5, x.length)), 65518 === w && 65 === x[0] && 100 === x[1] && 111 === x[2] && 98 === x[3] && 101 === x[4] && 0 === x[5] && (p2 = { version: x[6], flags0: x[7] << 8 | x[8], flags1: x[9] << 8 | x[10], transformCode: x[11] });
                  break;
                case 65499:
                  for (var k = n3() + i3 - 2; i3 < k; ) {
                    var S = e3[i3++];
                    g(256);
                    var M = new Int32Array(64);
                    if (S >> 4 == 0)
                      for (V = 0; V < 64; V++)
                        M[t2[V]] = e3[i3++];
                    else {
                      if (S >> 4 != 1)
                        throw new Error("DQT: invalid table spec");
                      for (V = 0; V < 64; V++)
                        M[t2[V]] = n3();
                    }
                    m2[15 & S] = M;
                  }
                  break;
                case 65472:
                case 65473:
                case 65474:
                  n3(), (o2 = {}).extended = 65473 === w, o2.progressive = 65474 === w, o2.precision = e3[i3++], o2.scanLines = n3(), o2.samplesPerLine = n3(), o2.components = {}, o2.componentsOrder = [];
                  var A = o2.scanLines * o2.samplesPerLine;
                  if (A > r3) {
                    var I = Math.ceil((A - r3) / 1e6);
                    throw new Error(`maxResolutionInMP limit exceeded by ${I}MP`);
                  }
                  var B, T = e3[i3++];
                  for (Z = 0; Z < T; Z++) {
                    B = e3[i3];
                    var R = e3[i3 + 1] >> 4, P = 15 & e3[i3 + 1], O = e3[i3 + 2];
                    if (R <= 0 || P <= 0)
                      throw new Error("Invalid sampling factor, expected values above 0");
                    o2.componentsOrder.push(B), o2.components[B] = { h: R, v: P, quantizationIdx: O }, i3 += 3;
                  }
                  a2(o2), b.push(o2);
                  break;
                case 65476:
                  var L = n3();
                  for (Z = 2; Z < L; ) {
                    var C = e3[i3++], U = new Uint8Array(16), z = 0;
                    for (V = 0; V < 16; V++, i3++)
                      z += U[V] = e3[i3];
                    g(16 + z);
                    var D = new Uint8Array(z);
                    for (V = 0; V < z; V++, i3++)
                      D[V] = e3[i3];
                    Z += 17 + z, (C >> 4 == 0 ? y : _)[15 & C] = f(U, D);
                  }
                  break;
                case 65501:
                  n3(), s2 = n3();
                  break;
                case 65500:
                  n3(), n3();
                  break;
                case 65498:
                  n3();
                  var N = e3[i3++], F = [];
                  for (Z = 0; Z < N; Z++) {
                    X = o2.components[e3[i3++]];
                    var j = e3[i3++];
                    X.huffmanTableDC = y[j >> 4], X.huffmanTableAC = _[15 & j], F.push(X);
                  }
                  var G = e3[i3++], H = e3[i3++], W = e3[i3++], q = u(e3, i3, o2, F, s2, G, H, W >> 4, 15 & W, this.opts);
                  i3 += q;
                  break;
                case 65535:
                  255 !== e3[i3] && i3--;
                  break;
                default:
                  if (255 == e3[i3 - 3] && e3[i3 - 2] >= 192 && e3[i3 - 2] <= 254) {
                    i3 -= 3;
                    break;
                  }
                  if (224 === w || 225 == w) {
                    if (-1 !== v)
                      throw new Error(`first unknown JPEG marker at offset ${v.toString(16)}, second unknown JPEG marker ${w.toString(16)} at offset ${(i3 - 1).toString(16)}`);
                    v = i3 - 1;
                    const t3 = n3();
                    if (255 === e3[i3 + t3 - 2]) {
                      i3 += t3 - 2;
                      break;
                    }
                  }
                  throw new Error("unknown JPEG marker " + w.toString(16));
              }
              w = n3();
            }
            if (1 != b.length)
              throw new Error("only single frame JPEGs supported");
            for (var Z = 0; Z < b.length; Z++) {
              var Y = b[Z].components;
              for (var V in Y)
                Y[V].quantizationTable = m2[Y[V].quantizationIdx], delete Y[V].quantizationIdx;
            }
            for (this.width = o2.samplesPerLine, this.height = o2.scanLines, this.jfif = d2, this.adobe = p2, this.components = [], Z = 0; Z < o2.componentsOrder.length; Z++) {
              var X = o2.components[o2.componentsOrder[Z]];
              this.components.push({ lines: c(0, X), scaleX: X.h / o2.maxH, scaleY: X.v / o2.maxV });
            }
          }, getData: function(t3, e3) {
            var r3, i3, n3, a2, o2, s2, h2, l2, f2, u2, c2, p2, m2, b, _, y, w, v, x, E, k, S = this.width / t3, M = this.height / e3, A = 0, I = t3 * e3 * this.components.length;
            g(I);
            var B = new Uint8Array(I);
            switch (this.components.length) {
              case 1:
                for (r3 = this.components[0], u2 = 0; u2 < e3; u2++)
                  for (o2 = r3.lines[0 | u2 * r3.scaleY * M], f2 = 0; f2 < t3; f2++)
                    c2 = o2[0 | f2 * r3.scaleX * S], B[A++] = c2;
                break;
              case 2:
                for (r3 = this.components[0], i3 = this.components[1], u2 = 0; u2 < e3; u2++)
                  for (o2 = r3.lines[0 | u2 * r3.scaleY * M], s2 = i3.lines[0 | u2 * i3.scaleY * M], f2 = 0; f2 < t3; f2++)
                    c2 = o2[0 | f2 * r3.scaleX * S], B[A++] = c2, c2 = s2[0 | f2 * i3.scaleX * S], B[A++] = c2;
                break;
              case 3:
                for (k = true, this.adobe && this.adobe.transformCode ? k = true : void 0 !== this.opts.colorTransform && (k = !!this.opts.colorTransform), r3 = this.components[0], i3 = this.components[1], n3 = this.components[2], u2 = 0; u2 < e3; u2++)
                  for (o2 = r3.lines[0 | u2 * r3.scaleY * M], s2 = i3.lines[0 | u2 * i3.scaleY * M], h2 = n3.lines[0 | u2 * n3.scaleY * M], f2 = 0; f2 < t3; f2++)
                    k ? (c2 = o2[0 | f2 * r3.scaleX * S], p2 = s2[0 | f2 * i3.scaleX * S], v = d(c2 + 1.402 * ((m2 = h2[0 | f2 * n3.scaleX * S]) - 128)), x = d(c2 - 0.3441363 * (p2 - 128) - 0.71413636 * (m2 - 128)), E = d(c2 + 1.772 * (p2 - 128))) : (v = o2[0 | f2 * r3.scaleX * S], x = s2[0 | f2 * i3.scaleX * S], E = h2[0 | f2 * n3.scaleX * S]), B[A++] = v, B[A++] = x, B[A++] = E;
                break;
              case 4:
                if (!this.adobe)
                  throw new Error("Unsupported color mode (4 components)");
                for (k = false, this.adobe && this.adobe.transformCode ? k = true : void 0 !== this.opts.colorTransform && (k = !!this.opts.colorTransform), r3 = this.components[0], i3 = this.components[1], n3 = this.components[2], a2 = this.components[3], u2 = 0; u2 < e3; u2++)
                  for (o2 = r3.lines[0 | u2 * r3.scaleY * M], s2 = i3.lines[0 | u2 * i3.scaleY * M], h2 = n3.lines[0 | u2 * n3.scaleY * M], l2 = a2.lines[0 | u2 * a2.scaleY * M], f2 = 0; f2 < t3; f2++)
                    k ? (c2 = o2[0 | f2 * r3.scaleX * S], p2 = s2[0 | f2 * i3.scaleX * S], m2 = h2[0 | f2 * n3.scaleX * S], b = l2[0 | f2 * a2.scaleX * S], _ = 255 - d(c2 + 1.402 * (m2 - 128)), y = 255 - d(c2 - 0.3441363 * (p2 - 128) - 0.71413636 * (m2 - 128)), w = 255 - d(c2 + 1.772 * (p2 - 128))) : (_ = o2[0 | f2 * r3.scaleX * S], y = s2[0 | f2 * i3.scaleX * S], w = h2[0 | f2 * n3.scaleX * S], b = l2[0 | f2 * a2.scaleX * S]), B[A++] = 255 - _, B[A++] = 255 - y, B[A++] = 255 - w, B[A++] = 255 - b;
                break;
              default:
                throw new Error("Unsupported color mode");
            }
            return B;
          }, copyToImageData: function(t3, e3) {
            var r3, i3, n3, a2, o2, s2, h2, l2, f2, u2 = t3.width, c2 = t3.height, p2 = t3.data, m2 = this.getData(u2, c2), g2 = 0, b = 0;
            switch (this.components.length) {
              case 1:
                for (i3 = 0; i3 < c2; i3++)
                  for (r3 = 0; r3 < u2; r3++)
                    n3 = m2[g2++], p2[b++] = n3, p2[b++] = n3, p2[b++] = n3, e3 && (p2[b++] = 255);
                break;
              case 3:
                for (i3 = 0; i3 < c2; i3++)
                  for (r3 = 0; r3 < u2; r3++)
                    h2 = m2[g2++], l2 = m2[g2++], f2 = m2[g2++], p2[b++] = h2, p2[b++] = l2, p2[b++] = f2, e3 && (p2[b++] = 255);
                break;
              case 4:
                for (i3 = 0; i3 < c2; i3++)
                  for (r3 = 0; r3 < u2; r3++)
                    o2 = m2[g2++], s2 = m2[g2++], n3 = m2[g2++], h2 = 255 - d(o2 * (1 - (a2 = m2[g2++]) / 255) + a2), l2 = 255 - d(s2 * (1 - a2 / 255) + a2), f2 = 255 - d(n3 * (1 - a2 / 255) + a2), p2[b++] = h2, p2[b++] = l2, p2[b++] = f2, e3 && (p2[b++] = 255);
                break;
              default:
                throw new Error("Unsupported color mode");
            }
          } };
          var p = 0, m = 0;
          function g(t3 = 0) {
            var e3 = p + t3;
            if (e3 > m) {
              var r3 = Math.ceil((e3 - m) / 1024 / 1024);
              throw new Error(`maxMemoryUsageInMB limit exceeded by at least ${r3}MB`);
            }
            p = e3;
          }
          return l.resetMaxMemoryUsage = function(t3) {
            p = 0, m = t3;
          }, l.getBytesAllocated = function() {
            return p;
          }, l.requestMemoryAllocation = g, l;
        }();
        t.exports = function(t2, e2 = {}) {
          var r2 = { colorTransform: void 0, useTArray: false, formatAsRGBA: true, tolerantDecoding: true, maxResolutionInMP: 100, maxMemoryUsageInMB: 512, ...e2 }, a = new Uint8Array(t2), o = new n();
          o.opts = r2, n.resetMaxMemoryUsage(1024 * r2.maxMemoryUsageInMB * 1024), o.parse(a);
          var s = r2.formatAsRGBA ? 4 : 3, h = o.width * o.height * s;
          try {
            n.requestMemoryAllocation(h);
            var l = { width: o.width, height: o.height, exifBuffer: o.exifBuffer, data: r2.useTArray ? new Uint8Array(h) : i.alloc(h) };
            o.comments.length > 0 && (l.comments = o.comments);
          } catch (t3) {
            if (t3 instanceof RangeError)
              throw new Error("Could not allocate enough memory for the image. Required: " + h);
            if (t3 instanceof ReferenceError && "Buffer is not defined" === t3.message)
              throw new Error("Buffer is not globally defined in this environment. Consider setting useTArray to true");
            throw t3;
          }
          return o.copyToImageData(l, r2.formatAsRGBA), l;
        };
      }, 706: (t, e, r) => {
        var i = r(8834).lW;
        function n(t2) {
          Math.round;
          var e2, r2, n2, a, o, s = Math.floor, h = new Array(64), l = new Array(64), f = new Array(64), u = new Array(64), c = new Array(65535), d = new Array(65535), p = new Array(64), m = new Array(64), g = [], b = 0, _ = 7, y = new Array(64), w = new Array(64), v = new Array(64), x = new Array(256), E = new Array(2048), k = [0, 1, 5, 6, 14, 15, 27, 28, 2, 4, 7, 13, 16, 26, 29, 42, 3, 8, 12, 17, 25, 30, 41, 43, 9, 11, 18, 24, 31, 40, 44, 53, 10, 19, 23, 32, 39, 45, 52, 54, 20, 22, 33, 38, 46, 51, 55, 60, 21, 34, 37, 47, 50, 56, 59, 61, 35, 36, 48, 49, 57, 58, 62, 63], S = [0, 0, 1, 5, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0], M = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11], A = [0, 0, 2, 1, 3, 3, 2, 4, 3, 5, 5, 4, 4, 0, 0, 1, 125], I = [1, 2, 3, 0, 4, 17, 5, 18, 33, 49, 65, 6, 19, 81, 97, 7, 34, 113, 20, 50, 129, 145, 161, 8, 35, 66, 177, 193, 21, 82, 209, 240, 36, 51, 98, 114, 130, 9, 10, 22, 23, 24, 25, 26, 37, 38, 39, 40, 41, 42, 52, 53, 54, 55, 56, 57, 58, 67, 68, 69, 70, 71, 72, 73, 74, 83, 84, 85, 86, 87, 88, 89, 90, 99, 100, 101, 102, 103, 104, 105, 106, 115, 116, 117, 118, 119, 120, 121, 122, 131, 132, 133, 134, 135, 136, 137, 138, 146, 147, 148, 149, 150, 151, 152, 153, 154, 162, 163, 164, 165, 166, 167, 168, 169, 170, 178, 179, 180, 181, 182, 183, 184, 185, 186, 194, 195, 196, 197, 198, 199, 200, 201, 202, 210, 211, 212, 213, 214, 215, 216, 217, 218, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250], B = [0, 0, 3, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0], T = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11], R = [0, 0, 2, 1, 2, 4, 4, 3, 4, 7, 5, 4, 4, 0, 1, 2, 119], P = [0, 1, 2, 3, 17, 4, 5, 33, 49, 6, 18, 65, 81, 7, 97, 113, 19, 34, 50, 129, 8, 20, 66, 145, 161, 177, 193, 9, 35, 51, 82, 240, 21, 98, 114, 209, 10, 22, 36, 52, 225, 37, 241, 23, 24, 25, 26, 38, 39, 40, 41, 42, 53, 54, 55, 56, 57, 58, 67, 68, 69, 70, 71, 72, 73, 74, 83, 84, 85, 86, 87, 88, 89, 90, 99, 100, 101, 102, 103, 104, 105, 106, 115, 116, 117, 118, 119, 120, 121, 122, 130, 131, 132, 133, 134, 135, 136, 137, 138, 146, 147, 148, 149, 150, 151, 152, 153, 154, 162, 163, 164, 165, 166, 167, 168, 169, 170, 178, 179, 180, 181, 182, 183, 184, 185, 186, 194, 195, 196, 197, 198, 199, 200, 201, 202, 210, 211, 212, 213, 214, 215, 216, 217, 218, 226, 227, 228, 229, 230, 231, 232, 233, 234, 242, 243, 244, 245, 246, 247, 248, 249, 250];
          function O(t3, e3) {
            for (var r3 = 0, i2 = 0, n3 = new Array(), a2 = 1; a2 <= 16; a2++) {
              for (var o2 = 1; o2 <= t3[a2]; o2++)
                n3[e3[i2]] = [], n3[e3[i2]][0] = r3, n3[e3[i2]][1] = a2, i2++, r3++;
              r3 *= 2;
            }
            return n3;
          }
          function L(t3) {
            for (var e3 = t3[0], r3 = t3[1] - 1; r3 >= 0; )
              e3 & 1 << r3 && (b |= 1 << _), r3--, --_ < 0 && (255 == b ? (C(255), C(0)) : C(b), _ = 7, b = 0);
          }
          function C(t3) {
            g.push(t3);
          }
          function U(t3) {
            C(t3 >> 8 & 255), C(255 & t3);
          }
          function z(t3, e3, r3, i2, n3) {
            for (var a2, o2 = n3[0], s2 = n3[240], h2 = function(t4, e4) {
              var r4, i3, n4, a3, o3, s3, h3, l3, f3, u3, c2 = 0;
              for (f3 = 0; f3 < 8; ++f3) {
                r4 = t4[c2], i3 = t4[c2 + 1], n4 = t4[c2 + 2], a3 = t4[c2 + 3], o3 = t4[c2 + 4], s3 = t4[c2 + 5], h3 = t4[c2 + 6];
                var d2 = r4 + (l3 = t4[c2 + 7]), m2 = r4 - l3, g3 = i3 + h3, b3 = i3 - h3, _3 = n4 + s3, y3 = n4 - s3, w3 = a3 + o3, v2 = a3 - o3, x2 = d2 + w3, E2 = d2 - w3, k2 = g3 + _3, S2 = g3 - _3;
                t4[c2] = x2 + k2, t4[c2 + 4] = x2 - k2;
                var M2 = 0.707106781 * (S2 + E2);
                t4[c2 + 2] = E2 + M2, t4[c2 + 6] = E2 - M2;
                var A2 = 0.382683433 * ((x2 = v2 + y3) - (S2 = b3 + m2)), I2 = 0.5411961 * x2 + A2, B2 = 1.306562965 * S2 + A2, T2 = 0.707106781 * (k2 = y3 + b3), R2 = m2 + T2, P2 = m2 - T2;
                t4[c2 + 5] = P2 + I2, t4[c2 + 3] = P2 - I2, t4[c2 + 1] = R2 + B2, t4[c2 + 7] = R2 - B2, c2 += 8;
              }
              for (c2 = 0, f3 = 0; f3 < 8; ++f3) {
                r4 = t4[c2], i3 = t4[c2 + 8], n4 = t4[c2 + 16], a3 = t4[c2 + 24], o3 = t4[c2 + 32], s3 = t4[c2 + 40], h3 = t4[c2 + 48];
                var O2 = r4 + (l3 = t4[c2 + 56]), L2 = r4 - l3, C2 = i3 + h3, U2 = i3 - h3, z2 = n4 + s3, D2 = n4 - s3, N = a3 + o3, F = a3 - o3, j = O2 + N, G = O2 - N, H = C2 + z2, W = C2 - z2;
                t4[c2] = j + H, t4[c2 + 32] = j - H;
                var q = 0.707106781 * (W + G);
                t4[c2 + 16] = G + q, t4[c2 + 48] = G - q;
                var Z = 0.382683433 * ((j = F + D2) - (W = U2 + L2)), Y = 0.5411961 * j + Z, V = 1.306562965 * W + Z, X = 0.707106781 * (H = D2 + U2), J = L2 + X, Q = L2 - X;
                t4[c2 + 40] = Q + Y, t4[c2 + 24] = Q - Y, t4[c2 + 8] = J + V, t4[c2 + 56] = J - V, c2++;
              }
              for (f3 = 0; f3 < 64; ++f3)
                u3 = t4[f3] * e4[f3], p[f3] = u3 > 0 ? u3 + 0.5 | 0 : u3 - 0.5 | 0;
              return p;
            }(t3, e3), l2 = 0; l2 < 64; ++l2)
              m[k[l2]] = h2[l2];
            var f2 = m[0] - r3;
            r3 = m[0], 0 == f2 ? L(i2[0]) : (L(i2[d[a2 = 32767 + f2]]), L(c[a2]));
            for (var u2 = 63; u2 > 0 && 0 == m[u2]; u2--)
              ;
            if (0 == u2)
              return L(o2), r3;
            for (var g2, b2 = 1; b2 <= u2; ) {
              for (var _2 = b2; 0 == m[b2] && b2 <= u2; ++b2)
                ;
              var y2 = b2 - _2;
              if (y2 >= 16) {
                g2 = y2 >> 4;
                for (var w2 = 1; w2 <= g2; ++w2)
                  L(s2);
                y2 &= 15;
              }
              a2 = 32767 + m[b2], L(n3[(y2 << 4) + d[a2]]), L(c[a2]), b2++;
            }
            return 63 != u2 && L(o2), r3;
          }
          function D(t3) {
            t3 <= 0 && (t3 = 1), t3 > 100 && (t3 = 100), o != t3 && (function(t4) {
              for (var e3 = [16, 11, 10, 16, 24, 40, 51, 61, 12, 12, 14, 19, 26, 58, 60, 55, 14, 13, 16, 24, 40, 57, 69, 56, 14, 17, 22, 29, 51, 87, 80, 62, 18, 22, 37, 56, 68, 109, 103, 77, 24, 35, 55, 64, 81, 104, 113, 92, 49, 64, 78, 87, 103, 121, 120, 101, 72, 92, 95, 98, 112, 100, 103, 99], r3 = 0; r3 < 64; r3++) {
                var i2 = s((e3[r3] * t4 + 50) / 100);
                i2 < 1 ? i2 = 1 : i2 > 255 && (i2 = 255), h[k[r3]] = i2;
              }
              for (var n3 = [17, 18, 24, 47, 99, 99, 99, 99, 18, 21, 26, 66, 99, 99, 99, 99, 24, 26, 56, 99, 99, 99, 99, 99, 47, 66, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99], a2 = 0; a2 < 64; a2++) {
                var o2 = s((n3[a2] * t4 + 50) / 100);
                o2 < 1 ? o2 = 1 : o2 > 255 && (o2 = 255), l[k[a2]] = o2;
              }
              for (var c2 = [1, 1.387039845, 1.306562965, 1.175875602, 1, 0.785694958, 0.5411961, 0.275899379], d2 = 0, p2 = 0; p2 < 8; p2++)
                for (var m2 = 0; m2 < 8; m2++)
                  f[d2] = 1 / (h[k[d2]] * c2[p2] * c2[m2] * 8), u[d2] = 1 / (l[k[d2]] * c2[p2] * c2[m2] * 8), d2++;
            }(t3 < 50 ? Math.floor(5e3 / t3) : Math.floor(200 - 2 * t3)), o = t3);
          }
          this.encode = function(t3, o2) {
            var s2;
            (/* @__PURE__ */ new Date()).getTime(), o2 && D(o2), g = new Array(), b = 0, _ = 7, U(65496), U(65504), U(16), C(74), C(70), C(73), C(70), C(0), C(1), C(1), C(0), U(1), U(1), C(0), C(0), void 0 !== (s2 = t3.comments) && s2.constructor === Array && s2.forEach((t4) => {
              if ("string" == typeof t4) {
                U(65534);
                var e3, r3 = t4.length;
                for (U(r3 + 2), e3 = 0; e3 < r3; e3++)
                  C(t4.charCodeAt(e3));
              }
            }), function(t4) {
              if (t4) {
                U(65505), 69 === t4[0] && 120 === t4[1] && 105 === t4[2] && 102 === t4[3] ? U(t4.length + 2) : (U(t4.length + 5 + 2), C(69), C(120), C(105), C(102), C(0));
                for (var e3 = 0; e3 < t4.length; e3++)
                  C(t4[e3]);
              }
            }(t3.exifBuffer), function() {
              U(65499), U(132), C(0);
              for (var t4 = 0; t4 < 64; t4++)
                C(h[t4]);
              C(1);
              for (var e3 = 0; e3 < 64; e3++)
                C(l[e3]);
            }(), function(t4, e3) {
              U(65472), U(17), C(8), U(e3), U(t4), C(3), C(1), C(17), C(0), C(2), C(17), C(1), C(3), C(17), C(1);
            }(t3.width, t3.height), function() {
              U(65476), U(418), C(0);
              for (var t4 = 0; t4 < 16; t4++)
                C(S[t4 + 1]);
              for (var e3 = 0; e3 <= 11; e3++)
                C(M[e3]);
              C(16);
              for (var r3 = 0; r3 < 16; r3++)
                C(A[r3 + 1]);
              for (var i2 = 0; i2 <= 161; i2++)
                C(I[i2]);
              C(1);
              for (var n3 = 0; n3 < 16; n3++)
                C(B[n3 + 1]);
              for (var a2 = 0; a2 <= 11; a2++)
                C(T[a2]);
              C(17);
              for (var o3 = 0; o3 < 16; o3++)
                C(R[o3 + 1]);
              for (var s3 = 0; s3 <= 161; s3++)
                C(P[s3]);
            }(), U(65498), U(12), C(3), C(1), C(0), C(2), C(17), C(3), C(17), C(0), C(63), C(0);
            var c2 = 0, d2 = 0, p2 = 0;
            b = 0, _ = 7, this.encode.displayName = "_encode_";
            for (var m2, x2, k2, O2, N, F, j, G, H, W = t3.data, q = t3.width, Z = t3.height, Y = 4 * q, V = 0; V < Z; ) {
              for (m2 = 0; m2 < Y; ) {
                for (F = N = Y * V + m2, j = -1, G = 0, H = 0; H < 64; H++)
                  F = N + (G = H >> 3) * Y + (j = 4 * (7 & H)), V + G >= Z && (F -= Y * (V + 1 + G - Z)), m2 + j >= Y && (F -= m2 + j - Y + 4), x2 = W[F++], k2 = W[F++], O2 = W[F++], y[H] = (E[x2] + E[k2 + 256 >> 0] + E[O2 + 512 >> 0] >> 16) - 128, w[H] = (E[x2 + 768 >> 0] + E[k2 + 1024 >> 0] + E[O2 + 1280 >> 0] >> 16) - 128, v[H] = (E[x2 + 1280 >> 0] + E[k2 + 1536 >> 0] + E[O2 + 1792 >> 0] >> 16) - 128;
                c2 = z(y, f, c2, e2, n2), d2 = z(w, u, d2, r2, a), p2 = z(v, u, p2, r2, a), m2 += 32;
              }
              V += 8;
            }
            if (_ >= 0) {
              var X = [];
              X[1] = _ + 1, X[0] = (1 << _ + 1) - 1, L(X);
            }
            return U(65497), i.from(g);
          }, (/* @__PURE__ */ new Date()).getTime(), t2 || (t2 = 50), function() {
            for (var t3 = String.fromCharCode, e3 = 0; e3 < 256; e3++)
              x[e3] = t3(e3);
          }(), e2 = O(S, M), r2 = O(B, T), n2 = O(A, I), a = O(R, P), function() {
            for (var t3 = 1, e3 = 2, r3 = 1; r3 <= 15; r3++) {
              for (var i2 = t3; i2 < e3; i2++)
                d[32767 + i2] = r3, c[32767 + i2] = [], c[32767 + i2][1] = r3, c[32767 + i2][0] = i2;
              for (var n3 = -(e3 - 1); n3 <= -t3; n3++)
                d[32767 + n3] = r3, c[32767 + n3] = [], c[32767 + n3][1] = r3, c[32767 + n3][0] = e3 - 1 + n3;
              t3 <<= 1, e3 <<= 1;
            }
          }(), function() {
            for (var t3 = 0; t3 < 256; t3++)
              E[t3] = 19595 * t3, E[t3 + 256 >> 0] = 38470 * t3, E[t3 + 512 >> 0] = 7471 * t3 + 32768, E[t3 + 768 >> 0] = -11059 * t3, E[t3 + 1024 >> 0] = -21709 * t3, E[t3 + 1280 >> 0] = 32768 * t3 + 8421375, E[t3 + 1536 >> 0] = -27439 * t3, E[t3 + 1792 >> 0] = -5329 * t3;
          }(), D(t2), (/* @__PURE__ */ new Date()).getTime();
        }
        t.exports = function(t2, e2) {
          return void 0 === e2 && (e2 = 50), { data: new n(e2).encode(t2, e2), width: t2.width, height: t2.height };
        };
      }, 8058: (t, e, r) => {
        var i = r(8834).lW, n = r(6290), a = function() {
        }, o = r(4398), s = r(5947), h = r(8438), l = r(5565), f = r(1960), u = self.XMLHttpRequest && "withCredentials" in new XMLHttpRequest();
        t.exports = function(t2, e2) {
          e2 = "function" == typeof e2 ? e2 : a, "string" == typeof t2 ? t2 = { uri: t2 } : t2 || (t2 = {}), t2.binary && (t2 = function(t3) {
            if (u)
              return f(t3, { responseType: "arraybuffer" });
            if (void 0 === self.XMLHttpRequest)
              throw new Error("your browser does not support XHR loading");
            var e3 = new self.XMLHttpRequest();
            return e3.overrideMimeType("text/plain; charset=x-user-defined"), f({ xhr: e3 }, t3);
          }(t2)), n(t2, function(r2, n2, f2) {
            if (r2)
              return e2(r2);
            if (!/^2/.test(n2.statusCode))
              return e2(new Error("http status code: " + n2.statusCode));
            if (!f2)
              return e2(new Error("no body result"));
            var u2, c, d = false;
            if (u2 = f2, "[object ArrayBuffer]" === Object.prototype.toString.call(u2)) {
              var p = new Uint8Array(f2);
              f2 = i.from(p, "binary");
            }
            l(f2) && (d = true, "string" == typeof f2 && (f2 = i.from(f2, "binary"))), d || (i.isBuffer(f2) && (f2 = f2.toString(t2.encoding)), f2 = f2.trim());
            try {
              var m = n2.headers["content-type"];
              c = d ? h(f2) : /json/.test(m) || "{" === f2.charAt(0) ? JSON.parse(f2) : /xml/.test(m) || "<" === f2.charAt(0) ? s(f2) : o(f2);
            } catch (t3) {
              e2(new Error("error parsing font " + t3.message)), e2 = a;
            }
            e2(null, c);
          });
        };
      }, 5565: (t, e, r) => {
        var i = r(8834).lW, n = r(5137), a = i.from([66, 77, 70, 3]);
        t.exports = function(t2) {
          return "string" == typeof t2 ? "BMF" === t2.substring(0, 3) : t2.length > 4 && n(t2.slice(0, 4), a);
        };
      }, 63: (t, e) => {
        "use strict";
        function r(t2, e2, r2, i) {
          for (var n = t2[e2++], a = 1 << n, o = a + 1, s = o + 1, h = n + 1, l = (1 << h) - 1, f = 0, u = 0, c = 0, d = t2[e2++], p = new Int32Array(4096), m = null; ; ) {
            for (; f < 16 && 0 !== d; )
              u |= t2[e2++] << f, f += 8, 1 === d ? d = t2[e2++] : --d;
            if (f < h)
              break;
            var g = u & l;
            if (u >>= h, f -= h, g !== a) {
              if (g === o)
                break;
              for (var b = g < s ? g : m, _ = 0, y = b; y > a; )
                y = p[y] >> 8, ++_;
              var w = y;
              if (c + _ + (b !== g ? 1 : 0) > i)
                return void console.log("Warning, gif stream longer than expected.");
              r2[c++] = w;
              var v = c += _;
              for (b !== g && (r2[c++] = w), y = b; _--; )
                y = p[y], r2[--v] = 255 & y, y >>= 8;
              null !== m && s < 4096 && (p[s++] = m << 8 | w, s >= l + 1 && h < 12 && (++h, l = l << 1 | 1)), m = g;
            } else
              s = o + 1, l = (1 << (h = n + 1)) - 1, m = null;
          }
          return c !== i && console.log("Warning, gif stream shorter than expected."), r2;
        }
        try {
          e.N = function(t2) {
            var e2 = 0;
            if (71 !== t2[e2++] || 73 !== t2[e2++] || 70 !== t2[e2++] || 56 !== t2[e2++] || 56 != (t2[e2++] + 1 & 253) || 97 !== t2[e2++])
              throw new Error("Invalid GIF 87a/89a header.");
            var i = t2[e2++] | t2[e2++] << 8, n = t2[e2++] | t2[e2++] << 8, a = t2[e2++], o = a >> 7, s = 1 << 1 + (7 & a);
            t2[e2++], t2[e2++];
            var h = null, l = null;
            o && (h = e2, l = s, e2 += 3 * s);
            var f = true, u = [], c = 0, d = null, p = 0, m = null;
            for (this.width = i, this.height = n; f && e2 < t2.length; )
              switch (t2[e2++]) {
                case 33:
                  switch (t2[e2++]) {
                    case 255:
                      if (11 !== t2[e2] || 78 == t2[e2 + 1] && 69 == t2[e2 + 2] && 84 == t2[e2 + 3] && 83 == t2[e2 + 4] && 67 == t2[e2 + 5] && 65 == t2[e2 + 6] && 80 == t2[e2 + 7] && 69 == t2[e2 + 8] && 50 == t2[e2 + 9] && 46 == t2[e2 + 10] && 48 == t2[e2 + 11] && 3 == t2[e2 + 12] && 1 == t2[e2 + 13] && 0 == t2[e2 + 16])
                        e2 += 14, m = t2[e2++] | t2[e2++] << 8, e2++;
                      else
                        for (e2 += 12; ; ) {
                          if (!((I = t2[e2++]) >= 0))
                            throw Error("Invalid block size");
                          if (0 === I)
                            break;
                          e2 += I;
                        }
                      break;
                    case 249:
                      if (4 !== t2[e2++] || 0 !== t2[e2 + 4])
                        throw new Error("Invalid graphics extension block.");
                      var g = t2[e2++];
                      c = t2[e2++] | t2[e2++] << 8, d = t2[e2++], 0 == (1 & g) && (d = null), p = g >> 2 & 7, e2++;
                      break;
                    case 254:
                      for (; ; ) {
                        if (!((I = t2[e2++]) >= 0))
                          throw Error("Invalid block size");
                        if (0 === I)
                          break;
                        e2 += I;
                      }
                      break;
                    default:
                      throw new Error("Unknown graphic control label: 0x" + t2[e2 - 1].toString(16));
                  }
                  break;
                case 44:
                  var b = t2[e2++] | t2[e2++] << 8, _ = t2[e2++] | t2[e2++] << 8, y = t2[e2++] | t2[e2++] << 8, w = t2[e2++] | t2[e2++] << 8, v = t2[e2++], x = v >> 6 & 1, E = 1 << 1 + (7 & v), k = h, S = l, M = false;
                  v >> 7 && (M = true, k = e2, S = E, e2 += 3 * E);
                  var A = e2;
                  for (e2++; ; ) {
                    var I;
                    if (!((I = t2[e2++]) >= 0))
                      throw Error("Invalid block size");
                    if (0 === I)
                      break;
                    e2 += I;
                  }
                  u.push({ x: b, y: _, width: y, height: w, has_local_palette: M, palette_offset: k, palette_size: S, data_offset: A, data_length: e2 - A, transparent_index: d, interlaced: !!x, delay: c, disposal: p });
                  break;
                case 59:
                  f = false;
                  break;
                default:
                  throw new Error("Unknown gif block: 0x" + t2[e2 - 1].toString(16));
              }
            this.numFrames = function() {
              return u.length;
            }, this.loopCount = function() {
              return m;
            }, this.frameInfo = function(t3) {
              if (t3 < 0 || t3 >= u.length)
                throw new Error("Frame index out of range.");
              return u[t3];
            }, this.decodeAndBlitFrameBGRA = function(e3, n2) {
              var a2 = this.frameInfo(e3), o2 = a2.width * a2.height, s2 = new Uint8Array(o2);
              r(t2, a2.data_offset, s2, o2);
              var h2 = a2.palette_offset, l2 = a2.transparent_index;
              null === l2 && (l2 = 256);
              var f2 = a2.width, u2 = i - f2, c2 = f2, d2 = 4 * (a2.y * i + a2.x), p2 = 4 * ((a2.y + a2.height) * i + a2.x), m2 = d2, g2 = 4 * u2;
              true === a2.interlaced && (g2 += 4 * i * 7);
              for (var b2 = 8, _2 = 0, y2 = s2.length; _2 < y2; ++_2) {
                var w2 = s2[_2];
                if (0 === c2 && (c2 = f2, (m2 += g2) >= p2 && (g2 = 4 * u2 + 4 * i * (b2 - 1), m2 = d2 + (f2 + u2) * (b2 << 1), b2 >>= 1)), w2 === l2)
                  m2 += 4;
                else {
                  var v2 = t2[h2 + 3 * w2], x2 = t2[h2 + 3 * w2 + 1], E2 = t2[h2 + 3 * w2 + 2];
                  n2[m2++] = E2, n2[m2++] = x2, n2[m2++] = v2, n2[m2++] = 255;
                }
                --c2;
              }
            }, this.decodeAndBlitFrameRGBA = function(e3, n2) {
              var a2 = this.frameInfo(e3), o2 = a2.width * a2.height, s2 = new Uint8Array(o2);
              r(t2, a2.data_offset, s2, o2);
              var h2 = a2.palette_offset, l2 = a2.transparent_index;
              null === l2 && (l2 = 256);
              var f2 = a2.width, u2 = i - f2, c2 = f2, d2 = 4 * (a2.y * i + a2.x), p2 = 4 * ((a2.y + a2.height) * i + a2.x), m2 = d2, g2 = 4 * u2;
              true === a2.interlaced && (g2 += 4 * i * 7);
              for (var b2 = 8, _2 = 0, y2 = s2.length; _2 < y2; ++_2) {
                var w2 = s2[_2];
                if (0 === c2 && (c2 = f2, (m2 += g2) >= p2 && (g2 = 4 * u2 + 4 * i * (b2 - 1), m2 = d2 + (f2 + u2) * (b2 << 1), b2 >>= 1)), w2 === l2)
                  m2 += 4;
                else {
                  var v2 = t2[h2 + 3 * w2], x2 = t2[h2 + 3 * w2 + 1], E2 = t2[h2 + 3 * w2 + 2];
                  n2[m2++] = v2, n2[m2++] = x2, n2[m2++] = E2, n2[m2++] = 255;
                }
                --c2;
              }
            };
          };
        } catch (t2) {
        }
      }, 2845: (t, e, r) => {
        "use strict";
        var i = {};
        (0, r(9761).assign)(i, r(9880), r(1380), r(1271)), t.exports = i;
      }, 9880: (t, e, r) => {
        "use strict";
        var i = r(5789), n = r(9761), a = r(7944), o = r(2950), s = r(744), h = Object.prototype.toString, l = 0, f = -1, u = 0, c = 8;
        function d(t2) {
          if (!(this instanceof d))
            return new d(t2);
          this.options = n.assign({ level: f, method: c, chunkSize: 16384, windowBits: 15, memLevel: 8, strategy: u, to: "" }, t2 || {});
          var e2 = this.options;
          e2.raw && e2.windowBits > 0 ? e2.windowBits = -e2.windowBits : e2.gzip && e2.windowBits > 0 && e2.windowBits < 16 && (e2.windowBits += 16), this.err = 0, this.msg = "", this.ended = false, this.chunks = [], this.strm = new s(), this.strm.avail_out = 0;
          var r2 = i.deflateInit2(this.strm, e2.level, e2.method, e2.windowBits, e2.memLevel, e2.strategy);
          if (r2 !== l)
            throw new Error(o[r2]);
          if (e2.header && i.deflateSetHeader(this.strm, e2.header), e2.dictionary) {
            var p2;
            if (p2 = "string" == typeof e2.dictionary ? a.string2buf(e2.dictionary) : "[object ArrayBuffer]" === h.call(e2.dictionary) ? new Uint8Array(e2.dictionary) : e2.dictionary, (r2 = i.deflateSetDictionary(this.strm, p2)) !== l)
              throw new Error(o[r2]);
            this._dict_set = true;
          }
        }
        function p(t2, e2) {
          var r2 = new d(e2);
          if (r2.push(t2, true), r2.err)
            throw r2.msg || o[r2.err];
          return r2.result;
        }
        d.prototype.push = function(t2, e2) {
          var r2, o2, s2 = this.strm, f2 = this.options.chunkSize;
          if (this.ended)
            return false;
          o2 = e2 === ~~e2 ? e2 : true === e2 ? 4 : 0, "string" == typeof t2 ? s2.input = a.string2buf(t2) : "[object ArrayBuffer]" === h.call(t2) ? s2.input = new Uint8Array(t2) : s2.input = t2, s2.next_in = 0, s2.avail_in = s2.input.length;
          do {
            if (0 === s2.avail_out && (s2.output = new n.Buf8(f2), s2.next_out = 0, s2.avail_out = f2), 1 !== (r2 = i.deflate(s2, o2)) && r2 !== l)
              return this.onEnd(r2), this.ended = true, false;
            0 !== s2.avail_out && (0 !== s2.avail_in || 4 !== o2 && 2 !== o2) || ("string" === this.options.to ? this.onData(a.buf2binstring(n.shrinkBuf(s2.output, s2.next_out))) : this.onData(n.shrinkBuf(s2.output, s2.next_out)));
          } while ((s2.avail_in > 0 || 0 === s2.avail_out) && 1 !== r2);
          return 4 === o2 ? (r2 = i.deflateEnd(this.strm), this.onEnd(r2), this.ended = true, r2 === l) : 2 !== o2 || (this.onEnd(l), s2.avail_out = 0, true);
        }, d.prototype.onData = function(t2) {
          this.chunks.push(t2);
        }, d.prototype.onEnd = function(t2) {
          t2 === l && ("string" === this.options.to ? this.result = this.chunks.join("") : this.result = n.flattenChunks(this.chunks)), this.chunks = [], this.err = t2, this.msg = this.strm.msg;
        }, e.Deflate = d, e.deflate = p, e.deflateRaw = function(t2, e2) {
          return (e2 = e2 || {}).raw = true, p(t2, e2);
        }, e.gzip = function(t2, e2) {
          return (e2 = e2 || {}).gzip = true, p(t2, e2);
        };
      }, 1380: (t, e, r) => {
        "use strict";
        var i = r(5020), n = r(9761), a = r(7944), o = r(1271), s = r(2950), h = r(744), l = r(7357), f = Object.prototype.toString;
        function u(t2) {
          if (!(this instanceof u))
            return new u(t2);
          this.options = n.assign({ chunkSize: 16384, windowBits: 0, to: "" }, t2 || {});
          var e2 = this.options;
          e2.raw && e2.windowBits >= 0 && e2.windowBits < 16 && (e2.windowBits = -e2.windowBits, 0 === e2.windowBits && (e2.windowBits = -15)), !(e2.windowBits >= 0 && e2.windowBits < 16) || t2 && t2.windowBits || (e2.windowBits += 32), e2.windowBits > 15 && e2.windowBits < 48 && 0 == (15 & e2.windowBits) && (e2.windowBits |= 15), this.err = 0, this.msg = "", this.ended = false, this.chunks = [], this.strm = new h(), this.strm.avail_out = 0;
          var r2 = i.inflateInit2(this.strm, e2.windowBits);
          if (r2 !== o.Z_OK)
            throw new Error(s[r2]);
          if (this.header = new l(), i.inflateGetHeader(this.strm, this.header), e2.dictionary && ("string" == typeof e2.dictionary ? e2.dictionary = a.string2buf(e2.dictionary) : "[object ArrayBuffer]" === f.call(e2.dictionary) && (e2.dictionary = new Uint8Array(e2.dictionary)), e2.raw && (r2 = i.inflateSetDictionary(this.strm, e2.dictionary)) !== o.Z_OK))
            throw new Error(s[r2]);
        }
        function c(t2, e2) {
          var r2 = new u(e2);
          if (r2.push(t2, true), r2.err)
            throw r2.msg || s[r2.err];
          return r2.result;
        }
        u.prototype.push = function(t2, e2) {
          var r2, s2, h2, l2, u2, c2 = this.strm, d = this.options.chunkSize, p = this.options.dictionary, m = false;
          if (this.ended)
            return false;
          s2 = e2 === ~~e2 ? e2 : true === e2 ? o.Z_FINISH : o.Z_NO_FLUSH, "string" == typeof t2 ? c2.input = a.binstring2buf(t2) : "[object ArrayBuffer]" === f.call(t2) ? c2.input = new Uint8Array(t2) : c2.input = t2, c2.next_in = 0, c2.avail_in = c2.input.length;
          do {
            if (0 === c2.avail_out && (c2.output = new n.Buf8(d), c2.next_out = 0, c2.avail_out = d), (r2 = i.inflate(c2, o.Z_NO_FLUSH)) === o.Z_NEED_DICT && p && (r2 = i.inflateSetDictionary(this.strm, p)), r2 === o.Z_BUF_ERROR && true === m && (r2 = o.Z_OK, m = false), r2 !== o.Z_STREAM_END && r2 !== o.Z_OK)
              return this.onEnd(r2), this.ended = true, false;
            c2.next_out && (0 !== c2.avail_out && r2 !== o.Z_STREAM_END && (0 !== c2.avail_in || s2 !== o.Z_FINISH && s2 !== o.Z_SYNC_FLUSH) || ("string" === this.options.to ? (h2 = a.utf8border(c2.output, c2.next_out), l2 = c2.next_out - h2, u2 = a.buf2string(c2.output, h2), c2.next_out = l2, c2.avail_out = d - l2, l2 && n.arraySet(c2.output, c2.output, h2, l2, 0), this.onData(u2)) : this.onData(n.shrinkBuf(c2.output, c2.next_out)))), 0 === c2.avail_in && 0 === c2.avail_out && (m = true);
          } while ((c2.avail_in > 0 || 0 === c2.avail_out) && r2 !== o.Z_STREAM_END);
          return r2 === o.Z_STREAM_END && (s2 = o.Z_FINISH), s2 === o.Z_FINISH ? (r2 = i.inflateEnd(this.strm), this.onEnd(r2), this.ended = true, r2 === o.Z_OK) : s2 !== o.Z_SYNC_FLUSH || (this.onEnd(o.Z_OK), c2.avail_out = 0, true);
        }, u.prototype.onData = function(t2) {
          this.chunks.push(t2);
        }, u.prototype.onEnd = function(t2) {
          t2 === o.Z_OK && ("string" === this.options.to ? this.result = this.chunks.join("") : this.result = n.flattenChunks(this.chunks)), this.chunks = [], this.err = t2, this.msg = this.strm.msg;
        }, e.Inflate = u, e.inflate = c, e.inflateRaw = function(t2, e2) {
          return (e2 = e2 || {}).raw = true, c(t2, e2);
        }, e.ungzip = c;
      }, 9761: (t, e) => {
        "use strict";
        var r = "undefined" != typeof Uint8Array && "undefined" != typeof Uint16Array && "undefined" != typeof Int32Array;
        function i(t2, e2) {
          return Object.prototype.hasOwnProperty.call(t2, e2);
        }
        e.assign = function(t2) {
          for (var e2 = Array.prototype.slice.call(arguments, 1); e2.length; ) {
            var r2 = e2.shift();
            if (r2) {
              if ("object" != typeof r2)
                throw new TypeError(r2 + "must be non-object");
              for (var n2 in r2)
                i(r2, n2) && (t2[n2] = r2[n2]);
            }
          }
          return t2;
        }, e.shrinkBuf = function(t2, e2) {
          return t2.length === e2 ? t2 : t2.subarray ? t2.subarray(0, e2) : (t2.length = e2, t2);
        };
        var n = { arraySet: function(t2, e2, r2, i2, n2) {
          if (e2.subarray && t2.subarray)
            t2.set(e2.subarray(r2, r2 + i2), n2);
          else
            for (var a2 = 0; a2 < i2; a2++)
              t2[n2 + a2] = e2[r2 + a2];
        }, flattenChunks: function(t2) {
          var e2, r2, i2, n2, a2, o;
          for (i2 = 0, e2 = 0, r2 = t2.length; e2 < r2; e2++)
            i2 += t2[e2].length;
          for (o = new Uint8Array(i2), n2 = 0, e2 = 0, r2 = t2.length; e2 < r2; e2++)
            a2 = t2[e2], o.set(a2, n2), n2 += a2.length;
          return o;
        } }, a = { arraySet: function(t2, e2, r2, i2, n2) {
          for (var a2 = 0; a2 < i2; a2++)
            t2[n2 + a2] = e2[r2 + a2];
        }, flattenChunks: function(t2) {
          return [].concat.apply([], t2);
        } };
        e.setTyped = function(t2) {
          t2 ? (e.Buf8 = Uint8Array, e.Buf16 = Uint16Array, e.Buf32 = Int32Array, e.assign(e, n)) : (e.Buf8 = Array, e.Buf16 = Array, e.Buf32 = Array, e.assign(e, a));
        }, e.setTyped(r);
      }, 7944: (t, e, r) => {
        "use strict";
        var i = r(9761), n = true, a = true;
        try {
          String.fromCharCode.apply(null, [0]);
        } catch (t2) {
          n = false;
        }
        try {
          String.fromCharCode.apply(null, new Uint8Array(1));
        } catch (t2) {
          a = false;
        }
        for (var o = new i.Buf8(256), s = 0; s < 256; s++)
          o[s] = s >= 252 ? 6 : s >= 248 ? 5 : s >= 240 ? 4 : s >= 224 ? 3 : s >= 192 ? 2 : 1;
        function h(t2, e2) {
          if (e2 < 65534 && (t2.subarray && a || !t2.subarray && n))
            return String.fromCharCode.apply(null, i.shrinkBuf(t2, e2));
          for (var r2 = "", o2 = 0; o2 < e2; o2++)
            r2 += String.fromCharCode(t2[o2]);
          return r2;
        }
        o[254] = o[254] = 1, e.string2buf = function(t2) {
          var e2, r2, n2, a2, o2, s2 = t2.length, h2 = 0;
          for (a2 = 0; a2 < s2; a2++)
            55296 == (64512 & (r2 = t2.charCodeAt(a2))) && a2 + 1 < s2 && 56320 == (64512 & (n2 = t2.charCodeAt(a2 + 1))) && (r2 = 65536 + (r2 - 55296 << 10) + (n2 - 56320), a2++), h2 += r2 < 128 ? 1 : r2 < 2048 ? 2 : r2 < 65536 ? 3 : 4;
          for (e2 = new i.Buf8(h2), o2 = 0, a2 = 0; o2 < h2; a2++)
            55296 == (64512 & (r2 = t2.charCodeAt(a2))) && a2 + 1 < s2 && 56320 == (64512 & (n2 = t2.charCodeAt(a2 + 1))) && (r2 = 65536 + (r2 - 55296 << 10) + (n2 - 56320), a2++), r2 < 128 ? e2[o2++] = r2 : r2 < 2048 ? (e2[o2++] = 192 | r2 >>> 6, e2[o2++] = 128 | 63 & r2) : r2 < 65536 ? (e2[o2++] = 224 | r2 >>> 12, e2[o2++] = 128 | r2 >>> 6 & 63, e2[o2++] = 128 | 63 & r2) : (e2[o2++] = 240 | r2 >>> 18, e2[o2++] = 128 | r2 >>> 12 & 63, e2[o2++] = 128 | r2 >>> 6 & 63, e2[o2++] = 128 | 63 & r2);
          return e2;
        }, e.buf2binstring = function(t2) {
          return h(t2, t2.length);
        }, e.binstring2buf = function(t2) {
          for (var e2 = new i.Buf8(t2.length), r2 = 0, n2 = e2.length; r2 < n2; r2++)
            e2[r2] = t2.charCodeAt(r2);
          return e2;
        }, e.buf2string = function(t2, e2) {
          var r2, i2, n2, a2, s2 = e2 || t2.length, l = new Array(2 * s2);
          for (i2 = 0, r2 = 0; r2 < s2; )
            if ((n2 = t2[r2++]) < 128)
              l[i2++] = n2;
            else if ((a2 = o[n2]) > 4)
              l[i2++] = 65533, r2 += a2 - 1;
            else {
              for (n2 &= 2 === a2 ? 31 : 3 === a2 ? 15 : 7; a2 > 1 && r2 < s2; )
                n2 = n2 << 6 | 63 & t2[r2++], a2--;
              a2 > 1 ? l[i2++] = 65533 : n2 < 65536 ? l[i2++] = n2 : (n2 -= 65536, l[i2++] = 55296 | n2 >> 10 & 1023, l[i2++] = 56320 | 1023 & n2);
            }
          return h(l, i2);
        }, e.utf8border = function(t2, e2) {
          var r2;
          for ((e2 = e2 || t2.length) > t2.length && (e2 = t2.length), r2 = e2 - 1; r2 >= 0 && 128 == (192 & t2[r2]); )
            r2--;
          return r2 < 0 || 0 === r2 ? e2 : r2 + o[t2[r2]] > e2 ? r2 : e2;
        };
      }, 5562: (t) => {
        "use strict";
        t.exports = function(t2, e, r, i) {
          for (var n = 65535 & t2 | 0, a = t2 >>> 16 & 65535 | 0, o = 0; 0 !== r; ) {
            r -= o = r > 2e3 ? 2e3 : r;
            do {
              a = a + (n = n + e[i++] | 0) | 0;
            } while (--o);
            n %= 65521, a %= 65521;
          }
          return n | a << 16 | 0;
        };
      }, 1271: (t) => {
        "use strict";
        t.exports = { Z_NO_FLUSH: 0, Z_PARTIAL_FLUSH: 1, Z_SYNC_FLUSH: 2, Z_FULL_FLUSH: 3, Z_FINISH: 4, Z_BLOCK: 5, Z_TREES: 6, Z_OK: 0, Z_STREAM_END: 1, Z_NEED_DICT: 2, Z_ERRNO: -1, Z_STREAM_ERROR: -2, Z_DATA_ERROR: -3, Z_BUF_ERROR: -5, Z_NO_COMPRESSION: 0, Z_BEST_SPEED: 1, Z_BEST_COMPRESSION: 9, Z_DEFAULT_COMPRESSION: -1, Z_FILTERED: 1, Z_HUFFMAN_ONLY: 2, Z_RLE: 3, Z_FIXED: 4, Z_DEFAULT_STRATEGY: 0, Z_BINARY: 0, Z_TEXT: 1, Z_UNKNOWN: 2, Z_DEFLATED: 8 };
      }, 4299: (t) => {
        "use strict";
        var e = function() {
          for (var t2, e2 = [], r = 0; r < 256; r++) {
            t2 = r;
            for (var i = 0; i < 8; i++)
              t2 = 1 & t2 ? 3988292384 ^ t2 >>> 1 : t2 >>> 1;
            e2[r] = t2;
          }
          return e2;
        }();
        t.exports = function(t2, r, i, n) {
          var a = e, o = n + i;
          t2 ^= -1;
          for (var s = n; s < o; s++)
            t2 = t2 >>> 8 ^ a[255 & (t2 ^ r[s])];
          return -1 ^ t2;
        };
      }, 5789: (t, e, r) => {
        "use strict";
        var i, n = r(9761), a = r(9564), o = r(5562), s = r(4299), h = r(2950), l = 0, f = 4, u = 0, c = -2, d = -1, p = 1, m = 4, g = 2, b = 8, _ = 9, y = 286, w = 30, v = 19, x = 2 * y + 1, E = 15, k = 3, S = 258, M = S + k + 1, A = 42, I = 103, B = 113, T = 666, R = 1, P = 2, O = 3, L = 4;
        function C(t2, e2) {
          return t2.msg = h[e2], e2;
        }
        function U(t2) {
          return (t2 << 1) - (t2 > 4 ? 9 : 0);
        }
        function z(t2) {
          for (var e2 = t2.length; --e2 >= 0; )
            t2[e2] = 0;
        }
        function D(t2) {
          var e2 = t2.state, r2 = e2.pending;
          r2 > t2.avail_out && (r2 = t2.avail_out), 0 !== r2 && (n.arraySet(t2.output, e2.pending_buf, e2.pending_out, r2, t2.next_out), t2.next_out += r2, e2.pending_out += r2, t2.total_out += r2, t2.avail_out -= r2, e2.pending -= r2, 0 === e2.pending && (e2.pending_out = 0));
        }
        function N(t2, e2) {
          a._tr_flush_block(t2, t2.block_start >= 0 ? t2.block_start : -1, t2.strstart - t2.block_start, e2), t2.block_start = t2.strstart, D(t2.strm);
        }
        function F(t2, e2) {
          t2.pending_buf[t2.pending++] = e2;
        }
        function j(t2, e2) {
          t2.pending_buf[t2.pending++] = e2 >>> 8 & 255, t2.pending_buf[t2.pending++] = 255 & e2;
        }
        function G(t2, e2) {
          var r2, i2, n2 = t2.max_chain_length, a2 = t2.strstart, o2 = t2.prev_length, s2 = t2.nice_match, h2 = t2.strstart > t2.w_size - M ? t2.strstart - (t2.w_size - M) : 0, l2 = t2.window, f2 = t2.w_mask, u2 = t2.prev, c2 = t2.strstart + S, d2 = l2[a2 + o2 - 1], p2 = l2[a2 + o2];
          t2.prev_length >= t2.good_match && (n2 >>= 2), s2 > t2.lookahead && (s2 = t2.lookahead);
          do {
            if (l2[(r2 = e2) + o2] === p2 && l2[r2 + o2 - 1] === d2 && l2[r2] === l2[a2] && l2[++r2] === l2[a2 + 1]) {
              a2 += 2, r2++;
              do {
              } while (l2[++a2] === l2[++r2] && l2[++a2] === l2[++r2] && l2[++a2] === l2[++r2] && l2[++a2] === l2[++r2] && l2[++a2] === l2[++r2] && l2[++a2] === l2[++r2] && l2[++a2] === l2[++r2] && l2[++a2] === l2[++r2] && a2 < c2);
              if (i2 = S - (c2 - a2), a2 = c2 - S, i2 > o2) {
                if (t2.match_start = e2, o2 = i2, i2 >= s2)
                  break;
                d2 = l2[a2 + o2 - 1], p2 = l2[a2 + o2];
              }
            }
          } while ((e2 = u2[e2 & f2]) > h2 && 0 != --n2);
          return o2 <= t2.lookahead ? o2 : t2.lookahead;
        }
        function H(t2) {
          var e2, r2, i2, a2, h2, l2, f2, u2, c2, d2, p2 = t2.w_size;
          do {
            if (a2 = t2.window_size - t2.lookahead - t2.strstart, t2.strstart >= p2 + (p2 - M)) {
              n.arraySet(t2.window, t2.window, p2, p2, 0), t2.match_start -= p2, t2.strstart -= p2, t2.block_start -= p2, e2 = r2 = t2.hash_size;
              do {
                i2 = t2.head[--e2], t2.head[e2] = i2 >= p2 ? i2 - p2 : 0;
              } while (--r2);
              e2 = r2 = p2;
              do {
                i2 = t2.prev[--e2], t2.prev[e2] = i2 >= p2 ? i2 - p2 : 0;
              } while (--r2);
              a2 += p2;
            }
            if (0 === t2.strm.avail_in)
              break;
            if (l2 = t2.strm, f2 = t2.window, u2 = t2.strstart + t2.lookahead, c2 = a2, d2 = void 0, (d2 = l2.avail_in) > c2 && (d2 = c2), r2 = 0 === d2 ? 0 : (l2.avail_in -= d2, n.arraySet(f2, l2.input, l2.next_in, d2, u2), 1 === l2.state.wrap ? l2.adler = o(l2.adler, f2, d2, u2) : 2 === l2.state.wrap && (l2.adler = s(l2.adler, f2, d2, u2)), l2.next_in += d2, l2.total_in += d2, d2), t2.lookahead += r2, t2.lookahead + t2.insert >= k)
              for (h2 = t2.strstart - t2.insert, t2.ins_h = t2.window[h2], t2.ins_h = (t2.ins_h << t2.hash_shift ^ t2.window[h2 + 1]) & t2.hash_mask; t2.insert && (t2.ins_h = (t2.ins_h << t2.hash_shift ^ t2.window[h2 + k - 1]) & t2.hash_mask, t2.prev[h2 & t2.w_mask] = t2.head[t2.ins_h], t2.head[t2.ins_h] = h2, h2++, t2.insert--, !(t2.lookahead + t2.insert < k)); )
                ;
          } while (t2.lookahead < M && 0 !== t2.strm.avail_in);
        }
        function W(t2, e2) {
          for (var r2, i2; ; ) {
            if (t2.lookahead < M) {
              if (H(t2), t2.lookahead < M && e2 === l)
                return R;
              if (0 === t2.lookahead)
                break;
            }
            if (r2 = 0, t2.lookahead >= k && (t2.ins_h = (t2.ins_h << t2.hash_shift ^ t2.window[t2.strstart + k - 1]) & t2.hash_mask, r2 = t2.prev[t2.strstart & t2.w_mask] = t2.head[t2.ins_h], t2.head[t2.ins_h] = t2.strstart), 0 !== r2 && t2.strstart - r2 <= t2.w_size - M && (t2.match_length = G(t2, r2)), t2.match_length >= k)
              if (i2 = a._tr_tally(t2, t2.strstart - t2.match_start, t2.match_length - k), t2.lookahead -= t2.match_length, t2.match_length <= t2.max_lazy_match && t2.lookahead >= k) {
                t2.match_length--;
                do {
                  t2.strstart++, t2.ins_h = (t2.ins_h << t2.hash_shift ^ t2.window[t2.strstart + k - 1]) & t2.hash_mask, r2 = t2.prev[t2.strstart & t2.w_mask] = t2.head[t2.ins_h], t2.head[t2.ins_h] = t2.strstart;
                } while (0 != --t2.match_length);
                t2.strstart++;
              } else
                t2.strstart += t2.match_length, t2.match_length = 0, t2.ins_h = t2.window[t2.strstart], t2.ins_h = (t2.ins_h << t2.hash_shift ^ t2.window[t2.strstart + 1]) & t2.hash_mask;
            else
              i2 = a._tr_tally(t2, 0, t2.window[t2.strstart]), t2.lookahead--, t2.strstart++;
            if (i2 && (N(t2, false), 0 === t2.strm.avail_out))
              return R;
          }
          return t2.insert = t2.strstart < k - 1 ? t2.strstart : k - 1, e2 === f ? (N(t2, true), 0 === t2.strm.avail_out ? O : L) : t2.last_lit && (N(t2, false), 0 === t2.strm.avail_out) ? R : P;
        }
        function q(t2, e2) {
          for (var r2, i2, n2; ; ) {
            if (t2.lookahead < M) {
              if (H(t2), t2.lookahead < M && e2 === l)
                return R;
              if (0 === t2.lookahead)
                break;
            }
            if (r2 = 0, t2.lookahead >= k && (t2.ins_h = (t2.ins_h << t2.hash_shift ^ t2.window[t2.strstart + k - 1]) & t2.hash_mask, r2 = t2.prev[t2.strstart & t2.w_mask] = t2.head[t2.ins_h], t2.head[t2.ins_h] = t2.strstart), t2.prev_length = t2.match_length, t2.prev_match = t2.match_start, t2.match_length = k - 1, 0 !== r2 && t2.prev_length < t2.max_lazy_match && t2.strstart - r2 <= t2.w_size - M && (t2.match_length = G(t2, r2), t2.match_length <= 5 && (t2.strategy === p || t2.match_length === k && t2.strstart - t2.match_start > 4096) && (t2.match_length = k - 1)), t2.prev_length >= k && t2.match_length <= t2.prev_length) {
              n2 = t2.strstart + t2.lookahead - k, i2 = a._tr_tally(t2, t2.strstart - 1 - t2.prev_match, t2.prev_length - k), t2.lookahead -= t2.prev_length - 1, t2.prev_length -= 2;
              do {
                ++t2.strstart <= n2 && (t2.ins_h = (t2.ins_h << t2.hash_shift ^ t2.window[t2.strstart + k - 1]) & t2.hash_mask, r2 = t2.prev[t2.strstart & t2.w_mask] = t2.head[t2.ins_h], t2.head[t2.ins_h] = t2.strstart);
              } while (0 != --t2.prev_length);
              if (t2.match_available = 0, t2.match_length = k - 1, t2.strstart++, i2 && (N(t2, false), 0 === t2.strm.avail_out))
                return R;
            } else if (t2.match_available) {
              if ((i2 = a._tr_tally(t2, 0, t2.window[t2.strstart - 1])) && N(t2, false), t2.strstart++, t2.lookahead--, 0 === t2.strm.avail_out)
                return R;
            } else
              t2.match_available = 1, t2.strstart++, t2.lookahead--;
          }
          return t2.match_available && (i2 = a._tr_tally(t2, 0, t2.window[t2.strstart - 1]), t2.match_available = 0), t2.insert = t2.strstart < k - 1 ? t2.strstart : k - 1, e2 === f ? (N(t2, true), 0 === t2.strm.avail_out ? O : L) : t2.last_lit && (N(t2, false), 0 === t2.strm.avail_out) ? R : P;
        }
        function Z(t2, e2, r2, i2, n2) {
          this.good_length = t2, this.max_lazy = e2, this.nice_length = r2, this.max_chain = i2, this.func = n2;
        }
        function Y() {
          this.strm = null, this.status = 0, this.pending_buf = null, this.pending_buf_size = 0, this.pending_out = 0, this.pending = 0, this.wrap = 0, this.gzhead = null, this.gzindex = 0, this.method = b, this.last_flush = -1, this.w_size = 0, this.w_bits = 0, this.w_mask = 0, this.window = null, this.window_size = 0, this.prev = null, this.head = null, this.ins_h = 0, this.hash_size = 0, this.hash_bits = 0, this.hash_mask = 0, this.hash_shift = 0, this.block_start = 0, this.match_length = 0, this.prev_match = 0, this.match_available = 0, this.strstart = 0, this.match_start = 0, this.lookahead = 0, this.prev_length = 0, this.max_chain_length = 0, this.max_lazy_match = 0, this.level = 0, this.strategy = 0, this.good_match = 0, this.nice_match = 0, this.dyn_ltree = new n.Buf16(2 * x), this.dyn_dtree = new n.Buf16(2 * (2 * w + 1)), this.bl_tree = new n.Buf16(2 * (2 * v + 1)), z(this.dyn_ltree), z(this.dyn_dtree), z(this.bl_tree), this.l_desc = null, this.d_desc = null, this.bl_desc = null, this.bl_count = new n.Buf16(E + 1), this.heap = new n.Buf16(2 * y + 1), z(this.heap), this.heap_len = 0, this.heap_max = 0, this.depth = new n.Buf16(2 * y + 1), z(this.depth), this.l_buf = 0, this.lit_bufsize = 0, this.last_lit = 0, this.d_buf = 0, this.opt_len = 0, this.static_len = 0, this.matches = 0, this.insert = 0, this.bi_buf = 0, this.bi_valid = 0;
        }
        function V(t2) {
          var e2;
          return t2 && t2.state ? (t2.total_in = t2.total_out = 0, t2.data_type = g, (e2 = t2.state).pending = 0, e2.pending_out = 0, e2.wrap < 0 && (e2.wrap = -e2.wrap), e2.status = e2.wrap ? A : B, t2.adler = 2 === e2.wrap ? 0 : 1, e2.last_flush = l, a._tr_init(e2), u) : C(t2, c);
        }
        function X(t2) {
          var e2, r2 = V(t2);
          return r2 === u && ((e2 = t2.state).window_size = 2 * e2.w_size, z(e2.head), e2.max_lazy_match = i[e2.level].max_lazy, e2.good_match = i[e2.level].good_length, e2.nice_match = i[e2.level].nice_length, e2.max_chain_length = i[e2.level].max_chain, e2.strstart = 0, e2.block_start = 0, e2.lookahead = 0, e2.insert = 0, e2.match_length = e2.prev_length = k - 1, e2.match_available = 0, e2.ins_h = 0), r2;
        }
        function J(t2, e2, r2, i2, a2, o2) {
          if (!t2)
            return c;
          var s2 = 1;
          if (e2 === d && (e2 = 6), i2 < 0 ? (s2 = 0, i2 = -i2) : i2 > 15 && (s2 = 2, i2 -= 16), a2 < 1 || a2 > _ || r2 !== b || i2 < 8 || i2 > 15 || e2 < 0 || e2 > 9 || o2 < 0 || o2 > m)
            return C(t2, c);
          8 === i2 && (i2 = 9);
          var h2 = new Y();
          return t2.state = h2, h2.strm = t2, h2.wrap = s2, h2.gzhead = null, h2.w_bits = i2, h2.w_size = 1 << h2.w_bits, h2.w_mask = h2.w_size - 1, h2.hash_bits = a2 + 7, h2.hash_size = 1 << h2.hash_bits, h2.hash_mask = h2.hash_size - 1, h2.hash_shift = ~~((h2.hash_bits + k - 1) / k), h2.window = new n.Buf8(2 * h2.w_size), h2.head = new n.Buf16(h2.hash_size), h2.prev = new n.Buf16(h2.w_size), h2.lit_bufsize = 1 << a2 + 6, h2.pending_buf_size = 4 * h2.lit_bufsize, h2.pending_buf = new n.Buf8(h2.pending_buf_size), h2.d_buf = 1 * h2.lit_bufsize, h2.l_buf = 3 * h2.lit_bufsize, h2.level = e2, h2.strategy = o2, h2.method = r2, X(t2);
        }
        i = [new Z(0, 0, 0, 0, function(t2, e2) {
          var r2 = 65535;
          for (r2 > t2.pending_buf_size - 5 && (r2 = t2.pending_buf_size - 5); ; ) {
            if (t2.lookahead <= 1) {
              if (H(t2), 0 === t2.lookahead && e2 === l)
                return R;
              if (0 === t2.lookahead)
                break;
            }
            t2.strstart += t2.lookahead, t2.lookahead = 0;
            var i2 = t2.block_start + r2;
            if ((0 === t2.strstart || t2.strstart >= i2) && (t2.lookahead = t2.strstart - i2, t2.strstart = i2, N(t2, false), 0 === t2.strm.avail_out))
              return R;
            if (t2.strstart - t2.block_start >= t2.w_size - M && (N(t2, false), 0 === t2.strm.avail_out))
              return R;
          }
          return t2.insert = 0, e2 === f ? (N(t2, true), 0 === t2.strm.avail_out ? O : L) : (t2.strstart > t2.block_start && (N(t2, false), t2.strm.avail_out), R);
        }), new Z(4, 4, 8, 4, W), new Z(4, 5, 16, 8, W), new Z(4, 6, 32, 32, W), new Z(4, 4, 16, 16, q), new Z(8, 16, 32, 32, q), new Z(8, 16, 128, 128, q), new Z(8, 32, 128, 256, q), new Z(32, 128, 258, 1024, q), new Z(32, 258, 258, 4096, q)], e.deflateInit = function(t2, e2) {
          return J(t2, e2, b, 15, 8, 0);
        }, e.deflateInit2 = J, e.deflateReset = X, e.deflateResetKeep = V, e.deflateSetHeader = function(t2, e2) {
          return t2 && t2.state ? 2 !== t2.state.wrap ? c : (t2.state.gzhead = e2, u) : c;
        }, e.deflate = function(t2, e2) {
          var r2, n2, o2, h2;
          if (!t2 || !t2.state || e2 > 5 || e2 < 0)
            return t2 ? C(t2, c) : c;
          if (n2 = t2.state, !t2.output || !t2.input && 0 !== t2.avail_in || n2.status === T && e2 !== f)
            return C(t2, 0 === t2.avail_out ? -5 : c);
          if (n2.strm = t2, r2 = n2.last_flush, n2.last_flush = e2, n2.status === A)
            if (2 === n2.wrap)
              t2.adler = 0, F(n2, 31), F(n2, 139), F(n2, 8), n2.gzhead ? (F(n2, (n2.gzhead.text ? 1 : 0) + (n2.gzhead.hcrc ? 2 : 0) + (n2.gzhead.extra ? 4 : 0) + (n2.gzhead.name ? 8 : 0) + (n2.gzhead.comment ? 16 : 0)), F(n2, 255 & n2.gzhead.time), F(n2, n2.gzhead.time >> 8 & 255), F(n2, n2.gzhead.time >> 16 & 255), F(n2, n2.gzhead.time >> 24 & 255), F(n2, 9 === n2.level ? 2 : n2.strategy >= 2 || n2.level < 2 ? 4 : 0), F(n2, 255 & n2.gzhead.os), n2.gzhead.extra && n2.gzhead.extra.length && (F(n2, 255 & n2.gzhead.extra.length), F(n2, n2.gzhead.extra.length >> 8 & 255)), n2.gzhead.hcrc && (t2.adler = s(t2.adler, n2.pending_buf, n2.pending, 0)), n2.gzindex = 0, n2.status = 69) : (F(n2, 0), F(n2, 0), F(n2, 0), F(n2, 0), F(n2, 0), F(n2, 9 === n2.level ? 2 : n2.strategy >= 2 || n2.level < 2 ? 4 : 0), F(n2, 3), n2.status = B);
            else {
              var d2 = b + (n2.w_bits - 8 << 4) << 8;
              d2 |= (n2.strategy >= 2 || n2.level < 2 ? 0 : n2.level < 6 ? 1 : 6 === n2.level ? 2 : 3) << 6, 0 !== n2.strstart && (d2 |= 32), d2 += 31 - d2 % 31, n2.status = B, j(n2, d2), 0 !== n2.strstart && (j(n2, t2.adler >>> 16), j(n2, 65535 & t2.adler)), t2.adler = 1;
            }
          if (69 === n2.status)
            if (n2.gzhead.extra) {
              for (o2 = n2.pending; n2.gzindex < (65535 & n2.gzhead.extra.length) && (n2.pending !== n2.pending_buf_size || (n2.gzhead.hcrc && n2.pending > o2 && (t2.adler = s(t2.adler, n2.pending_buf, n2.pending - o2, o2)), D(t2), o2 = n2.pending, n2.pending !== n2.pending_buf_size)); )
                F(n2, 255 & n2.gzhead.extra[n2.gzindex]), n2.gzindex++;
              n2.gzhead.hcrc && n2.pending > o2 && (t2.adler = s(t2.adler, n2.pending_buf, n2.pending - o2, o2)), n2.gzindex === n2.gzhead.extra.length && (n2.gzindex = 0, n2.status = 73);
            } else
              n2.status = 73;
          if (73 === n2.status)
            if (n2.gzhead.name) {
              o2 = n2.pending;
              do {
                if (n2.pending === n2.pending_buf_size && (n2.gzhead.hcrc && n2.pending > o2 && (t2.adler = s(t2.adler, n2.pending_buf, n2.pending - o2, o2)), D(t2), o2 = n2.pending, n2.pending === n2.pending_buf_size)) {
                  h2 = 1;
                  break;
                }
                h2 = n2.gzindex < n2.gzhead.name.length ? 255 & n2.gzhead.name.charCodeAt(n2.gzindex++) : 0, F(n2, h2);
              } while (0 !== h2);
              n2.gzhead.hcrc && n2.pending > o2 && (t2.adler = s(t2.adler, n2.pending_buf, n2.pending - o2, o2)), 0 === h2 && (n2.gzindex = 0, n2.status = 91);
            } else
              n2.status = 91;
          if (91 === n2.status)
            if (n2.gzhead.comment) {
              o2 = n2.pending;
              do {
                if (n2.pending === n2.pending_buf_size && (n2.gzhead.hcrc && n2.pending > o2 && (t2.adler = s(t2.adler, n2.pending_buf, n2.pending - o2, o2)), D(t2), o2 = n2.pending, n2.pending === n2.pending_buf_size)) {
                  h2 = 1;
                  break;
                }
                h2 = n2.gzindex < n2.gzhead.comment.length ? 255 & n2.gzhead.comment.charCodeAt(n2.gzindex++) : 0, F(n2, h2);
              } while (0 !== h2);
              n2.gzhead.hcrc && n2.pending > o2 && (t2.adler = s(t2.adler, n2.pending_buf, n2.pending - o2, o2)), 0 === h2 && (n2.status = I);
            } else
              n2.status = I;
          if (n2.status === I && (n2.gzhead.hcrc ? (n2.pending + 2 > n2.pending_buf_size && D(t2), n2.pending + 2 <= n2.pending_buf_size && (F(n2, 255 & t2.adler), F(n2, t2.adler >> 8 & 255), t2.adler = 0, n2.status = B)) : n2.status = B), 0 !== n2.pending) {
            if (D(t2), 0 === t2.avail_out)
              return n2.last_flush = -1, u;
          } else if (0 === t2.avail_in && U(e2) <= U(r2) && e2 !== f)
            return C(t2, -5);
          if (n2.status === T && 0 !== t2.avail_in)
            return C(t2, -5);
          if (0 !== t2.avail_in || 0 !== n2.lookahead || e2 !== l && n2.status !== T) {
            var p2 = 2 === n2.strategy ? function(t3, e3) {
              for (var r3; ; ) {
                if (0 === t3.lookahead && (H(t3), 0 === t3.lookahead)) {
                  if (e3 === l)
                    return R;
                  break;
                }
                if (t3.match_length = 0, r3 = a._tr_tally(t3, 0, t3.window[t3.strstart]), t3.lookahead--, t3.strstart++, r3 && (N(t3, false), 0 === t3.strm.avail_out))
                  return R;
              }
              return t3.insert = 0, e3 === f ? (N(t3, true), 0 === t3.strm.avail_out ? O : L) : t3.last_lit && (N(t3, false), 0 === t3.strm.avail_out) ? R : P;
            }(n2, e2) : 3 === n2.strategy ? function(t3, e3) {
              for (var r3, i2, n3, o3, s2 = t3.window; ; ) {
                if (t3.lookahead <= S) {
                  if (H(t3), t3.lookahead <= S && e3 === l)
                    return R;
                  if (0 === t3.lookahead)
                    break;
                }
                if (t3.match_length = 0, t3.lookahead >= k && t3.strstart > 0 && (i2 = s2[n3 = t3.strstart - 1]) === s2[++n3] && i2 === s2[++n3] && i2 === s2[++n3]) {
                  o3 = t3.strstart + S;
                  do {
                  } while (i2 === s2[++n3] && i2 === s2[++n3] && i2 === s2[++n3] && i2 === s2[++n3] && i2 === s2[++n3] && i2 === s2[++n3] && i2 === s2[++n3] && i2 === s2[++n3] && n3 < o3);
                  t3.match_length = S - (o3 - n3), t3.match_length > t3.lookahead && (t3.match_length = t3.lookahead);
                }
                if (t3.match_length >= k ? (r3 = a._tr_tally(t3, 1, t3.match_length - k), t3.lookahead -= t3.match_length, t3.strstart += t3.match_length, t3.match_length = 0) : (r3 = a._tr_tally(t3, 0, t3.window[t3.strstart]), t3.lookahead--, t3.strstart++), r3 && (N(t3, false), 0 === t3.strm.avail_out))
                  return R;
              }
              return t3.insert = 0, e3 === f ? (N(t3, true), 0 === t3.strm.avail_out ? O : L) : t3.last_lit && (N(t3, false), 0 === t3.strm.avail_out) ? R : P;
            }(n2, e2) : i[n2.level].func(n2, e2);
            if (p2 !== O && p2 !== L || (n2.status = T), p2 === R || p2 === O)
              return 0 === t2.avail_out && (n2.last_flush = -1), u;
            if (p2 === P && (1 === e2 ? a._tr_align(n2) : 5 !== e2 && (a._tr_stored_block(n2, 0, 0, false), 3 === e2 && (z(n2.head), 0 === n2.lookahead && (n2.strstart = 0, n2.block_start = 0, n2.insert = 0))), D(t2), 0 === t2.avail_out))
              return n2.last_flush = -1, u;
          }
          return e2 !== f ? u : n2.wrap <= 0 ? 1 : (2 === n2.wrap ? (F(n2, 255 & t2.adler), F(n2, t2.adler >> 8 & 255), F(n2, t2.adler >> 16 & 255), F(n2, t2.adler >> 24 & 255), F(n2, 255 & t2.total_in), F(n2, t2.total_in >> 8 & 255), F(n2, t2.total_in >> 16 & 255), F(n2, t2.total_in >> 24 & 255)) : (j(n2, t2.adler >>> 16), j(n2, 65535 & t2.adler)), D(t2), n2.wrap > 0 && (n2.wrap = -n2.wrap), 0 !== n2.pending ? u : 1);
        }, e.deflateEnd = function(t2) {
          var e2;
          return t2 && t2.state ? (e2 = t2.state.status) !== A && 69 !== e2 && 73 !== e2 && 91 !== e2 && e2 !== I && e2 !== B && e2 !== T ? C(t2, c) : (t2.state = null, e2 === B ? C(t2, -3) : u) : c;
        }, e.deflateSetDictionary = function(t2, e2) {
          var r2, i2, a2, s2, h2, l2, f2, d2, p2 = e2.length;
          if (!t2 || !t2.state)
            return c;
          if (2 === (s2 = (r2 = t2.state).wrap) || 1 === s2 && r2.status !== A || r2.lookahead)
            return c;
          for (1 === s2 && (t2.adler = o(t2.adler, e2, p2, 0)), r2.wrap = 0, p2 >= r2.w_size && (0 === s2 && (z(r2.head), r2.strstart = 0, r2.block_start = 0, r2.insert = 0), d2 = new n.Buf8(r2.w_size), n.arraySet(d2, e2, p2 - r2.w_size, r2.w_size, 0), e2 = d2, p2 = r2.w_size), h2 = t2.avail_in, l2 = t2.next_in, f2 = t2.input, t2.avail_in = p2, t2.next_in = 0, t2.input = e2, H(r2); r2.lookahead >= k; ) {
            i2 = r2.strstart, a2 = r2.lookahead - (k - 1);
            do {
              r2.ins_h = (r2.ins_h << r2.hash_shift ^ r2.window[i2 + k - 1]) & r2.hash_mask, r2.prev[i2 & r2.w_mask] = r2.head[r2.ins_h], r2.head[r2.ins_h] = i2, i2++;
            } while (--a2);
            r2.strstart = i2, r2.lookahead = k - 1, H(r2);
          }
          return r2.strstart += r2.lookahead, r2.block_start = r2.strstart, r2.insert = r2.lookahead, r2.lookahead = 0, r2.match_length = r2.prev_length = k - 1, r2.match_available = 0, t2.next_in = l2, t2.input = f2, t2.avail_in = h2, r2.wrap = s2, u;
        }, e.deflateInfo = "pako deflate (from Nodeca project)";
      }, 7357: (t) => {
        "use strict";
        t.exports = function() {
          this.text = 0, this.time = 0, this.xflags = 0, this.os = 0, this.extra = null, this.extra_len = 0, this.name = "", this.comment = "", this.hcrc = 0, this.done = false;
        };
      }, 4980: (t) => {
        "use strict";
        t.exports = function(t2, e) {
          var r, i, n, a, o, s, h, l, f, u, c, d, p, m, g, b, _, y, w, v, x, E, k, S, M;
          r = t2.state, i = t2.next_in, S = t2.input, n = i + (t2.avail_in - 5), a = t2.next_out, M = t2.output, o = a - (e - t2.avail_out), s = a + (t2.avail_out - 257), h = r.dmax, l = r.wsize, f = r.whave, u = r.wnext, c = r.window, d = r.hold, p = r.bits, m = r.lencode, g = r.distcode, b = (1 << r.lenbits) - 1, _ = (1 << r.distbits) - 1;
          t:
            do {
              p < 15 && (d += S[i++] << p, p += 8, d += S[i++] << p, p += 8), y = m[d & b];
              e:
                for (; ; ) {
                  if (d >>>= w = y >>> 24, p -= w, 0 == (w = y >>> 16 & 255))
                    M[a++] = 65535 & y;
                  else {
                    if (!(16 & w)) {
                      if (0 == (64 & w)) {
                        y = m[(65535 & y) + (d & (1 << w) - 1)];
                        continue e;
                      }
                      if (32 & w) {
                        r.mode = 12;
                        break t;
                      }
                      t2.msg = "invalid literal/length code", r.mode = 30;
                      break t;
                    }
                    v = 65535 & y, (w &= 15) && (p < w && (d += S[i++] << p, p += 8), v += d & (1 << w) - 1, d >>>= w, p -= w), p < 15 && (d += S[i++] << p, p += 8, d += S[i++] << p, p += 8), y = g[d & _];
                    r:
                      for (; ; ) {
                        if (d >>>= w = y >>> 24, p -= w, !(16 & (w = y >>> 16 & 255))) {
                          if (0 == (64 & w)) {
                            y = g[(65535 & y) + (d & (1 << w) - 1)];
                            continue r;
                          }
                          t2.msg = "invalid distance code", r.mode = 30;
                          break t;
                        }
                        if (x = 65535 & y, p < (w &= 15) && (d += S[i++] << p, (p += 8) < w && (d += S[i++] << p, p += 8)), (x += d & (1 << w) - 1) > h) {
                          t2.msg = "invalid distance too far back", r.mode = 30;
                          break t;
                        }
                        if (d >>>= w, p -= w, x > (w = a - o)) {
                          if ((w = x - w) > f && r.sane) {
                            t2.msg = "invalid distance too far back", r.mode = 30;
                            break t;
                          }
                          if (E = 0, k = c, 0 === u) {
                            if (E += l - w, w < v) {
                              v -= w;
                              do {
                                M[a++] = c[E++];
                              } while (--w);
                              E = a - x, k = M;
                            }
                          } else if (u < w) {
                            if (E += l + u - w, (w -= u) < v) {
                              v -= w;
                              do {
                                M[a++] = c[E++];
                              } while (--w);
                              if (E = 0, u < v) {
                                v -= w = u;
                                do {
                                  M[a++] = c[E++];
                                } while (--w);
                                E = a - x, k = M;
                              }
                            }
                          } else if (E += u - w, w < v) {
                            v -= w;
                            do {
                              M[a++] = c[E++];
                            } while (--w);
                            E = a - x, k = M;
                          }
                          for (; v > 2; )
                            M[a++] = k[E++], M[a++] = k[E++], M[a++] = k[E++], v -= 3;
                          v && (M[a++] = k[E++], v > 1 && (M[a++] = k[E++]));
                        } else {
                          E = a - x;
                          do {
                            M[a++] = M[E++], M[a++] = M[E++], M[a++] = M[E++], v -= 3;
                          } while (v > 2);
                          v && (M[a++] = M[E++], v > 1 && (M[a++] = M[E++]));
                        }
                        break;
                      }
                  }
                  break;
                }
            } while (i < n && a < s);
          i -= v = p >> 3, d &= (1 << (p -= v << 3)) - 1, t2.next_in = i, t2.next_out = a, t2.avail_in = i < n ? n - i + 5 : 5 - (i - n), t2.avail_out = a < s ? s - a + 257 : 257 - (a - s), r.hold = d, r.bits = p;
        };
      }, 5020: (t, e, r) => {
        "use strict";
        var i = r(9761), n = r(5562), a = r(4299), o = r(4980), s = r(881), h = 1, l = 2, f = 0, u = -2, c = 1, d = 12, p = 30, m = 852, g = 592;
        function b(t2) {
          return (t2 >>> 24 & 255) + (t2 >>> 8 & 65280) + ((65280 & t2) << 8) + ((255 & t2) << 24);
        }
        function _() {
          this.mode = 0, this.last = false, this.wrap = 0, this.havedict = false, this.flags = 0, this.dmax = 0, this.check = 0, this.total = 0, this.head = null, this.wbits = 0, this.wsize = 0, this.whave = 0, this.wnext = 0, this.window = null, this.hold = 0, this.bits = 0, this.length = 0, this.offset = 0, this.extra = 0, this.lencode = null, this.distcode = null, this.lenbits = 0, this.distbits = 0, this.ncode = 0, this.nlen = 0, this.ndist = 0, this.have = 0, this.next = null, this.lens = new i.Buf16(320), this.work = new i.Buf16(288), this.lendyn = null, this.distdyn = null, this.sane = 0, this.back = 0, this.was = 0;
        }
        function y(t2) {
          var e2;
          return t2 && t2.state ? (e2 = t2.state, t2.total_in = t2.total_out = e2.total = 0, t2.msg = "", e2.wrap && (t2.adler = 1 & e2.wrap), e2.mode = c, e2.last = 0, e2.havedict = 0, e2.dmax = 32768, e2.head = null, e2.hold = 0, e2.bits = 0, e2.lencode = e2.lendyn = new i.Buf32(m), e2.distcode = e2.distdyn = new i.Buf32(g), e2.sane = 1, e2.back = -1, f) : u;
        }
        function w(t2) {
          var e2;
          return t2 && t2.state ? ((e2 = t2.state).wsize = 0, e2.whave = 0, e2.wnext = 0, y(t2)) : u;
        }
        function v(t2, e2) {
          var r2, i2;
          return t2 && t2.state ? (i2 = t2.state, e2 < 0 ? (r2 = 0, e2 = -e2) : (r2 = 1 + (e2 >> 4), e2 < 48 && (e2 &= 15)), e2 && (e2 < 8 || e2 > 15) ? u : (null !== i2.window && i2.wbits !== e2 && (i2.window = null), i2.wrap = r2, i2.wbits = e2, w(t2))) : u;
        }
        function x(t2, e2) {
          var r2, i2;
          return t2 ? (i2 = new _(), t2.state = i2, i2.window = null, (r2 = v(t2, e2)) !== f && (t2.state = null), r2) : u;
        }
        var E, k, S = true;
        function M(t2) {
          if (S) {
            var e2;
            for (E = new i.Buf32(512), k = new i.Buf32(32), e2 = 0; e2 < 144; )
              t2.lens[e2++] = 8;
            for (; e2 < 256; )
              t2.lens[e2++] = 9;
            for (; e2 < 280; )
              t2.lens[e2++] = 7;
            for (; e2 < 288; )
              t2.lens[e2++] = 8;
            for (s(h, t2.lens, 0, 288, E, 0, t2.work, { bits: 9 }), e2 = 0; e2 < 32; )
              t2.lens[e2++] = 5;
            s(l, t2.lens, 0, 32, k, 0, t2.work, { bits: 5 }), S = false;
          }
          t2.lencode = E, t2.lenbits = 9, t2.distcode = k, t2.distbits = 5;
        }
        function A(t2, e2, r2, n2) {
          var a2, o2 = t2.state;
          return null === o2.window && (o2.wsize = 1 << o2.wbits, o2.wnext = 0, o2.whave = 0, o2.window = new i.Buf8(o2.wsize)), n2 >= o2.wsize ? (i.arraySet(o2.window, e2, r2 - o2.wsize, o2.wsize, 0), o2.wnext = 0, o2.whave = o2.wsize) : ((a2 = o2.wsize - o2.wnext) > n2 && (a2 = n2), i.arraySet(o2.window, e2, r2 - n2, a2, o2.wnext), (n2 -= a2) ? (i.arraySet(o2.window, e2, r2 - n2, n2, 0), o2.wnext = n2, o2.whave = o2.wsize) : (o2.wnext += a2, o2.wnext === o2.wsize && (o2.wnext = 0), o2.whave < o2.wsize && (o2.whave += a2))), 0;
        }
        e.inflateReset = w, e.inflateReset2 = v, e.inflateResetKeep = y, e.inflateInit = function(t2) {
          return x(t2, 15);
        }, e.inflateInit2 = x, e.inflate = function(t2, e2) {
          var r2, m2, g2, _2, y2, w2, v2, x2, E2, k2, S2, I, B, T, R, P, O, L, C, U, z, D, N, F, j = 0, G = new i.Buf8(4), H = [16, 17, 18, 0, 8, 7, 9, 6, 10, 5, 11, 4, 12, 3, 13, 2, 14, 1, 15];
          if (!t2 || !t2.state || !t2.output || !t2.input && 0 !== t2.avail_in)
            return u;
          (r2 = t2.state).mode === d && (r2.mode = 13), y2 = t2.next_out, g2 = t2.output, v2 = t2.avail_out, _2 = t2.next_in, m2 = t2.input, w2 = t2.avail_in, x2 = r2.hold, E2 = r2.bits, k2 = w2, S2 = v2, D = f;
          t:
            for (; ; )
              switch (r2.mode) {
                case c:
                  if (0 === r2.wrap) {
                    r2.mode = 13;
                    break;
                  }
                  for (; E2 < 16; ) {
                    if (0 === w2)
                      break t;
                    w2--, x2 += m2[_2++] << E2, E2 += 8;
                  }
                  if (2 & r2.wrap && 35615 === x2) {
                    r2.check = 0, G[0] = 255 & x2, G[1] = x2 >>> 8 & 255, r2.check = a(r2.check, G, 2, 0), x2 = 0, E2 = 0, r2.mode = 2;
                    break;
                  }
                  if (r2.flags = 0, r2.head && (r2.head.done = false), !(1 & r2.wrap) || (((255 & x2) << 8) + (x2 >> 8)) % 31) {
                    t2.msg = "incorrect header check", r2.mode = p;
                    break;
                  }
                  if (8 != (15 & x2)) {
                    t2.msg = "unknown compression method", r2.mode = p;
                    break;
                  }
                  if (E2 -= 4, z = 8 + (15 & (x2 >>>= 4)), 0 === r2.wbits)
                    r2.wbits = z;
                  else if (z > r2.wbits) {
                    t2.msg = "invalid window size", r2.mode = p;
                    break;
                  }
                  r2.dmax = 1 << z, t2.adler = r2.check = 1, r2.mode = 512 & x2 ? 10 : d, x2 = 0, E2 = 0;
                  break;
                case 2:
                  for (; E2 < 16; ) {
                    if (0 === w2)
                      break t;
                    w2--, x2 += m2[_2++] << E2, E2 += 8;
                  }
                  if (r2.flags = x2, 8 != (255 & r2.flags)) {
                    t2.msg = "unknown compression method", r2.mode = p;
                    break;
                  }
                  if (57344 & r2.flags) {
                    t2.msg = "unknown header flags set", r2.mode = p;
                    break;
                  }
                  r2.head && (r2.head.text = x2 >> 8 & 1), 512 & r2.flags && (G[0] = 255 & x2, G[1] = x2 >>> 8 & 255, r2.check = a(r2.check, G, 2, 0)), x2 = 0, E2 = 0, r2.mode = 3;
                case 3:
                  for (; E2 < 32; ) {
                    if (0 === w2)
                      break t;
                    w2--, x2 += m2[_2++] << E2, E2 += 8;
                  }
                  r2.head && (r2.head.time = x2), 512 & r2.flags && (G[0] = 255 & x2, G[1] = x2 >>> 8 & 255, G[2] = x2 >>> 16 & 255, G[3] = x2 >>> 24 & 255, r2.check = a(r2.check, G, 4, 0)), x2 = 0, E2 = 0, r2.mode = 4;
                case 4:
                  for (; E2 < 16; ) {
                    if (0 === w2)
                      break t;
                    w2--, x2 += m2[_2++] << E2, E2 += 8;
                  }
                  r2.head && (r2.head.xflags = 255 & x2, r2.head.os = x2 >> 8), 512 & r2.flags && (G[0] = 255 & x2, G[1] = x2 >>> 8 & 255, r2.check = a(r2.check, G, 2, 0)), x2 = 0, E2 = 0, r2.mode = 5;
                case 5:
                  if (1024 & r2.flags) {
                    for (; E2 < 16; ) {
                      if (0 === w2)
                        break t;
                      w2--, x2 += m2[_2++] << E2, E2 += 8;
                    }
                    r2.length = x2, r2.head && (r2.head.extra_len = x2), 512 & r2.flags && (G[0] = 255 & x2, G[1] = x2 >>> 8 & 255, r2.check = a(r2.check, G, 2, 0)), x2 = 0, E2 = 0;
                  } else
                    r2.head && (r2.head.extra = null);
                  r2.mode = 6;
                case 6:
                  if (1024 & r2.flags && ((I = r2.length) > w2 && (I = w2), I && (r2.head && (z = r2.head.extra_len - r2.length, r2.head.extra || (r2.head.extra = new Array(r2.head.extra_len)), i.arraySet(r2.head.extra, m2, _2, I, z)), 512 & r2.flags && (r2.check = a(r2.check, m2, I, _2)), w2 -= I, _2 += I, r2.length -= I), r2.length))
                    break t;
                  r2.length = 0, r2.mode = 7;
                case 7:
                  if (2048 & r2.flags) {
                    if (0 === w2)
                      break t;
                    I = 0;
                    do {
                      z = m2[_2 + I++], r2.head && z && r2.length < 65536 && (r2.head.name += String.fromCharCode(z));
                    } while (z && I < w2);
                    if (512 & r2.flags && (r2.check = a(r2.check, m2, I, _2)), w2 -= I, _2 += I, z)
                      break t;
                  } else
                    r2.head && (r2.head.name = null);
                  r2.length = 0, r2.mode = 8;
                case 8:
                  if (4096 & r2.flags) {
                    if (0 === w2)
                      break t;
                    I = 0;
                    do {
                      z = m2[_2 + I++], r2.head && z && r2.length < 65536 && (r2.head.comment += String.fromCharCode(z));
                    } while (z && I < w2);
                    if (512 & r2.flags && (r2.check = a(r2.check, m2, I, _2)), w2 -= I, _2 += I, z)
                      break t;
                  } else
                    r2.head && (r2.head.comment = null);
                  r2.mode = 9;
                case 9:
                  if (512 & r2.flags) {
                    for (; E2 < 16; ) {
                      if (0 === w2)
                        break t;
                      w2--, x2 += m2[_2++] << E2, E2 += 8;
                    }
                    if (x2 !== (65535 & r2.check)) {
                      t2.msg = "header crc mismatch", r2.mode = p;
                      break;
                    }
                    x2 = 0, E2 = 0;
                  }
                  r2.head && (r2.head.hcrc = r2.flags >> 9 & 1, r2.head.done = true), t2.adler = r2.check = 0, r2.mode = d;
                  break;
                case 10:
                  for (; E2 < 32; ) {
                    if (0 === w2)
                      break t;
                    w2--, x2 += m2[_2++] << E2, E2 += 8;
                  }
                  t2.adler = r2.check = b(x2), x2 = 0, E2 = 0, r2.mode = 11;
                case 11:
                  if (0 === r2.havedict)
                    return t2.next_out = y2, t2.avail_out = v2, t2.next_in = _2, t2.avail_in = w2, r2.hold = x2, r2.bits = E2, 2;
                  t2.adler = r2.check = 1, r2.mode = d;
                case d:
                  if (5 === e2 || 6 === e2)
                    break t;
                case 13:
                  if (r2.last) {
                    x2 >>>= 7 & E2, E2 -= 7 & E2, r2.mode = 27;
                    break;
                  }
                  for (; E2 < 3; ) {
                    if (0 === w2)
                      break t;
                    w2--, x2 += m2[_2++] << E2, E2 += 8;
                  }
                  switch (r2.last = 1 & x2, E2 -= 1, 3 & (x2 >>>= 1)) {
                    case 0:
                      r2.mode = 14;
                      break;
                    case 1:
                      if (M(r2), r2.mode = 20, 6 === e2) {
                        x2 >>>= 2, E2 -= 2;
                        break t;
                      }
                      break;
                    case 2:
                      r2.mode = 17;
                      break;
                    case 3:
                      t2.msg = "invalid block type", r2.mode = p;
                  }
                  x2 >>>= 2, E2 -= 2;
                  break;
                case 14:
                  for (x2 >>>= 7 & E2, E2 -= 7 & E2; E2 < 32; ) {
                    if (0 === w2)
                      break t;
                    w2--, x2 += m2[_2++] << E2, E2 += 8;
                  }
                  if ((65535 & x2) != (x2 >>> 16 ^ 65535)) {
                    t2.msg = "invalid stored block lengths", r2.mode = p;
                    break;
                  }
                  if (r2.length = 65535 & x2, x2 = 0, E2 = 0, r2.mode = 15, 6 === e2)
                    break t;
                case 15:
                  r2.mode = 16;
                case 16:
                  if (I = r2.length) {
                    if (I > w2 && (I = w2), I > v2 && (I = v2), 0 === I)
                      break t;
                    i.arraySet(g2, m2, _2, I, y2), w2 -= I, _2 += I, v2 -= I, y2 += I, r2.length -= I;
                    break;
                  }
                  r2.mode = d;
                  break;
                case 17:
                  for (; E2 < 14; ) {
                    if (0 === w2)
                      break t;
                    w2--, x2 += m2[_2++] << E2, E2 += 8;
                  }
                  if (r2.nlen = 257 + (31 & x2), x2 >>>= 5, E2 -= 5, r2.ndist = 1 + (31 & x2), x2 >>>= 5, E2 -= 5, r2.ncode = 4 + (15 & x2), x2 >>>= 4, E2 -= 4, r2.nlen > 286 || r2.ndist > 30) {
                    t2.msg = "too many length or distance symbols", r2.mode = p;
                    break;
                  }
                  r2.have = 0, r2.mode = 18;
                case 18:
                  for (; r2.have < r2.ncode; ) {
                    for (; E2 < 3; ) {
                      if (0 === w2)
                        break t;
                      w2--, x2 += m2[_2++] << E2, E2 += 8;
                    }
                    r2.lens[H[r2.have++]] = 7 & x2, x2 >>>= 3, E2 -= 3;
                  }
                  for (; r2.have < 19; )
                    r2.lens[H[r2.have++]] = 0;
                  if (r2.lencode = r2.lendyn, r2.lenbits = 7, N = { bits: r2.lenbits }, D = s(0, r2.lens, 0, 19, r2.lencode, 0, r2.work, N), r2.lenbits = N.bits, D) {
                    t2.msg = "invalid code lengths set", r2.mode = p;
                    break;
                  }
                  r2.have = 0, r2.mode = 19;
                case 19:
                  for (; r2.have < r2.nlen + r2.ndist; ) {
                    for (; P = (j = r2.lencode[x2 & (1 << r2.lenbits) - 1]) >>> 16 & 255, O = 65535 & j, !((R = j >>> 24) <= E2); ) {
                      if (0 === w2)
                        break t;
                      w2--, x2 += m2[_2++] << E2, E2 += 8;
                    }
                    if (O < 16)
                      x2 >>>= R, E2 -= R, r2.lens[r2.have++] = O;
                    else {
                      if (16 === O) {
                        for (F = R + 2; E2 < F; ) {
                          if (0 === w2)
                            break t;
                          w2--, x2 += m2[_2++] << E2, E2 += 8;
                        }
                        if (x2 >>>= R, E2 -= R, 0 === r2.have) {
                          t2.msg = "invalid bit length repeat", r2.mode = p;
                          break;
                        }
                        z = r2.lens[r2.have - 1], I = 3 + (3 & x2), x2 >>>= 2, E2 -= 2;
                      } else if (17 === O) {
                        for (F = R + 3; E2 < F; ) {
                          if (0 === w2)
                            break t;
                          w2--, x2 += m2[_2++] << E2, E2 += 8;
                        }
                        E2 -= R, z = 0, I = 3 + (7 & (x2 >>>= R)), x2 >>>= 3, E2 -= 3;
                      } else {
                        for (F = R + 7; E2 < F; ) {
                          if (0 === w2)
                            break t;
                          w2--, x2 += m2[_2++] << E2, E2 += 8;
                        }
                        E2 -= R, z = 0, I = 11 + (127 & (x2 >>>= R)), x2 >>>= 7, E2 -= 7;
                      }
                      if (r2.have + I > r2.nlen + r2.ndist) {
                        t2.msg = "invalid bit length repeat", r2.mode = p;
                        break;
                      }
                      for (; I--; )
                        r2.lens[r2.have++] = z;
                    }
                  }
                  if (r2.mode === p)
                    break;
                  if (0 === r2.lens[256]) {
                    t2.msg = "invalid code -- missing end-of-block", r2.mode = p;
                    break;
                  }
                  if (r2.lenbits = 9, N = { bits: r2.lenbits }, D = s(h, r2.lens, 0, r2.nlen, r2.lencode, 0, r2.work, N), r2.lenbits = N.bits, D) {
                    t2.msg = "invalid literal/lengths set", r2.mode = p;
                    break;
                  }
                  if (r2.distbits = 6, r2.distcode = r2.distdyn, N = { bits: r2.distbits }, D = s(l, r2.lens, r2.nlen, r2.ndist, r2.distcode, 0, r2.work, N), r2.distbits = N.bits, D) {
                    t2.msg = "invalid distances set", r2.mode = p;
                    break;
                  }
                  if (r2.mode = 20, 6 === e2)
                    break t;
                case 20:
                  r2.mode = 21;
                case 21:
                  if (w2 >= 6 && v2 >= 258) {
                    t2.next_out = y2, t2.avail_out = v2, t2.next_in = _2, t2.avail_in = w2, r2.hold = x2, r2.bits = E2, o(t2, S2), y2 = t2.next_out, g2 = t2.output, v2 = t2.avail_out, _2 = t2.next_in, m2 = t2.input, w2 = t2.avail_in, x2 = r2.hold, E2 = r2.bits, r2.mode === d && (r2.back = -1);
                    break;
                  }
                  for (r2.back = 0; P = (j = r2.lencode[x2 & (1 << r2.lenbits) - 1]) >>> 16 & 255, O = 65535 & j, !((R = j >>> 24) <= E2); ) {
                    if (0 === w2)
                      break t;
                    w2--, x2 += m2[_2++] << E2, E2 += 8;
                  }
                  if (P && 0 == (240 & P)) {
                    for (L = R, C = P, U = O; P = (j = r2.lencode[U + ((x2 & (1 << L + C) - 1) >> L)]) >>> 16 & 255, O = 65535 & j, !(L + (R = j >>> 24) <= E2); ) {
                      if (0 === w2)
                        break t;
                      w2--, x2 += m2[_2++] << E2, E2 += 8;
                    }
                    x2 >>>= L, E2 -= L, r2.back += L;
                  }
                  if (x2 >>>= R, E2 -= R, r2.back += R, r2.length = O, 0 === P) {
                    r2.mode = 26;
                    break;
                  }
                  if (32 & P) {
                    r2.back = -1, r2.mode = d;
                    break;
                  }
                  if (64 & P) {
                    t2.msg = "invalid literal/length code", r2.mode = p;
                    break;
                  }
                  r2.extra = 15 & P, r2.mode = 22;
                case 22:
                  if (r2.extra) {
                    for (F = r2.extra; E2 < F; ) {
                      if (0 === w2)
                        break t;
                      w2--, x2 += m2[_2++] << E2, E2 += 8;
                    }
                    r2.length += x2 & (1 << r2.extra) - 1, x2 >>>= r2.extra, E2 -= r2.extra, r2.back += r2.extra;
                  }
                  r2.was = r2.length, r2.mode = 23;
                case 23:
                  for (; P = (j = r2.distcode[x2 & (1 << r2.distbits) - 1]) >>> 16 & 255, O = 65535 & j, !((R = j >>> 24) <= E2); ) {
                    if (0 === w2)
                      break t;
                    w2--, x2 += m2[_2++] << E2, E2 += 8;
                  }
                  if (0 == (240 & P)) {
                    for (L = R, C = P, U = O; P = (j = r2.distcode[U + ((x2 & (1 << L + C) - 1) >> L)]) >>> 16 & 255, O = 65535 & j, !(L + (R = j >>> 24) <= E2); ) {
                      if (0 === w2)
                        break t;
                      w2--, x2 += m2[_2++] << E2, E2 += 8;
                    }
                    x2 >>>= L, E2 -= L, r2.back += L;
                  }
                  if (x2 >>>= R, E2 -= R, r2.back += R, 64 & P) {
                    t2.msg = "invalid distance code", r2.mode = p;
                    break;
                  }
                  r2.offset = O, r2.extra = 15 & P, r2.mode = 24;
                case 24:
                  if (r2.extra) {
                    for (F = r2.extra; E2 < F; ) {
                      if (0 === w2)
                        break t;
                      w2--, x2 += m2[_2++] << E2, E2 += 8;
                    }
                    r2.offset += x2 & (1 << r2.extra) - 1, x2 >>>= r2.extra, E2 -= r2.extra, r2.back += r2.extra;
                  }
                  if (r2.offset > r2.dmax) {
                    t2.msg = "invalid distance too far back", r2.mode = p;
                    break;
                  }
                  r2.mode = 25;
                case 25:
                  if (0 === v2)
                    break t;
                  if (I = S2 - v2, r2.offset > I) {
                    if ((I = r2.offset - I) > r2.whave && r2.sane) {
                      t2.msg = "invalid distance too far back", r2.mode = p;
                      break;
                    }
                    I > r2.wnext ? (I -= r2.wnext, B = r2.wsize - I) : B = r2.wnext - I, I > r2.length && (I = r2.length), T = r2.window;
                  } else
                    T = g2, B = y2 - r2.offset, I = r2.length;
                  I > v2 && (I = v2), v2 -= I, r2.length -= I;
                  do {
                    g2[y2++] = T[B++];
                  } while (--I);
                  0 === r2.length && (r2.mode = 21);
                  break;
                case 26:
                  if (0 === v2)
                    break t;
                  g2[y2++] = r2.length, v2--, r2.mode = 21;
                  break;
                case 27:
                  if (r2.wrap) {
                    for (; E2 < 32; ) {
                      if (0 === w2)
                        break t;
                      w2--, x2 |= m2[_2++] << E2, E2 += 8;
                    }
                    if (S2 -= v2, t2.total_out += S2, r2.total += S2, S2 && (t2.adler = r2.check = r2.flags ? a(r2.check, g2, S2, y2 - S2) : n(r2.check, g2, S2, y2 - S2)), S2 = v2, (r2.flags ? x2 : b(x2)) !== r2.check) {
                      t2.msg = "incorrect data check", r2.mode = p;
                      break;
                    }
                    x2 = 0, E2 = 0;
                  }
                  r2.mode = 28;
                case 28:
                  if (r2.wrap && r2.flags) {
                    for (; E2 < 32; ) {
                      if (0 === w2)
                        break t;
                      w2--, x2 += m2[_2++] << E2, E2 += 8;
                    }
                    if (x2 !== (4294967295 & r2.total)) {
                      t2.msg = "incorrect length check", r2.mode = p;
                      break;
                    }
                    x2 = 0, E2 = 0;
                  }
                  r2.mode = 29;
                case 29:
                  D = 1;
                  break t;
                case p:
                  D = -3;
                  break t;
                case 31:
                  return -4;
                default:
                  return u;
              }
          return t2.next_out = y2, t2.avail_out = v2, t2.next_in = _2, t2.avail_in = w2, r2.hold = x2, r2.bits = E2, (r2.wsize || S2 !== t2.avail_out && r2.mode < p && (r2.mode < 27 || 4 !== e2)) && A(t2, t2.output, t2.next_out, S2 - t2.avail_out) ? (r2.mode = 31, -4) : (k2 -= t2.avail_in, S2 -= t2.avail_out, t2.total_in += k2, t2.total_out += S2, r2.total += S2, r2.wrap && S2 && (t2.adler = r2.check = r2.flags ? a(r2.check, g2, S2, t2.next_out - S2) : n(r2.check, g2, S2, t2.next_out - S2)), t2.data_type = r2.bits + (r2.last ? 64 : 0) + (r2.mode === d ? 128 : 0) + (20 === r2.mode || 15 === r2.mode ? 256 : 0), (0 === k2 && 0 === S2 || 4 === e2) && D === f && (D = -5), D);
        }, e.inflateEnd = function(t2) {
          if (!t2 || !t2.state)
            return u;
          var e2 = t2.state;
          return e2.window && (e2.window = null), t2.state = null, f;
        }, e.inflateGetHeader = function(t2, e2) {
          var r2;
          return t2 && t2.state ? 0 == (2 & (r2 = t2.state).wrap) ? u : (r2.head = e2, e2.done = false, f) : u;
        }, e.inflateSetDictionary = function(t2, e2) {
          var r2, i2 = e2.length;
          return t2 && t2.state ? 0 !== (r2 = t2.state).wrap && 11 !== r2.mode ? u : 11 === r2.mode && n(1, e2, i2, 0) !== r2.check ? -3 : A(t2, e2, i2, i2) ? (r2.mode = 31, -4) : (r2.havedict = 1, f) : u;
        }, e.inflateInfo = "pako inflate (from Nodeca project)";
      }, 881: (t, e, r) => {
        "use strict";
        var i = r(9761), n = [3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 15, 17, 19, 23, 27, 31, 35, 43, 51, 59, 67, 83, 99, 115, 131, 163, 195, 227, 258, 0, 0], a = [16, 16, 16, 16, 16, 16, 16, 16, 17, 17, 17, 17, 18, 18, 18, 18, 19, 19, 19, 19, 20, 20, 20, 20, 21, 21, 21, 21, 16, 72, 78], o = [1, 2, 3, 4, 5, 7, 9, 13, 17, 25, 33, 49, 65, 97, 129, 193, 257, 385, 513, 769, 1025, 1537, 2049, 3073, 4097, 6145, 8193, 12289, 16385, 24577, 0, 0], s = [16, 16, 16, 16, 17, 17, 18, 18, 19, 19, 20, 20, 21, 21, 22, 22, 23, 23, 24, 24, 25, 25, 26, 26, 27, 27, 28, 28, 29, 29, 64, 64];
        t.exports = function(t2, e2, r2, h, l, f, u, c) {
          var d, p, m, g, b, _, y, w, v, x = c.bits, E = 0, k = 0, S = 0, M = 0, A = 0, I = 0, B = 0, T = 0, R = 0, P = 0, O = null, L = 0, C = new i.Buf16(16), U = new i.Buf16(16), z = null, D = 0;
          for (E = 0; E <= 15; E++)
            C[E] = 0;
          for (k = 0; k < h; k++)
            C[e2[r2 + k]]++;
          for (A = x, M = 15; M >= 1 && 0 === C[M]; M--)
            ;
          if (A > M && (A = M), 0 === M)
            return l[f++] = 20971520, l[f++] = 20971520, c.bits = 1, 0;
          for (S = 1; S < M && 0 === C[S]; S++)
            ;
          for (A < S && (A = S), T = 1, E = 1; E <= 15; E++)
            if (T <<= 1, (T -= C[E]) < 0)
              return -1;
          if (T > 0 && (0 === t2 || 1 !== M))
            return -1;
          for (U[1] = 0, E = 1; E < 15; E++)
            U[E + 1] = U[E] + C[E];
          for (k = 0; k < h; k++)
            0 !== e2[r2 + k] && (u[U[e2[r2 + k]]++] = k);
          if (0 === t2 ? (O = z = u, _ = 19) : 1 === t2 ? (O = n, L -= 257, z = a, D -= 257, _ = 256) : (O = o, z = s, _ = -1), P = 0, k = 0, E = S, b = f, I = A, B = 0, m = -1, g = (R = 1 << A) - 1, 1 === t2 && R > 852 || 2 === t2 && R > 592)
            return 1;
          for (; ; ) {
            y = E - B, u[k] < _ ? (w = 0, v = u[k]) : u[k] > _ ? (w = z[D + u[k]], v = O[L + u[k]]) : (w = 96, v = 0), d = 1 << E - B, S = p = 1 << I;
            do {
              l[b + (P >> B) + (p -= d)] = y << 24 | w << 16 | v | 0;
            } while (0 !== p);
            for (d = 1 << E - 1; P & d; )
              d >>= 1;
            if (0 !== d ? (P &= d - 1, P += d) : P = 0, k++, 0 == --C[E]) {
              if (E === M)
                break;
              E = e2[r2 + u[k]];
            }
            if (E > A && (P & g) !== m) {
              for (0 === B && (B = A), b += S, T = 1 << (I = E - B); I + B < M && !((T -= C[I + B]) <= 0); )
                I++, T <<= 1;
              if (R += 1 << I, 1 === t2 && R > 852 || 2 === t2 && R > 592)
                return 1;
              l[m = P & g] = A << 24 | I << 16 | b - f | 0;
            }
          }
          return 0 !== P && (l[b + P] = E - B << 24 | 64 << 16 | 0), c.bits = A, 0;
        };
      }, 2950: (t) => {
        "use strict";
        t.exports = { 2: "need dictionary", 1: "stream end", 0: "", "-1": "file error", "-2": "stream error", "-3": "data error", "-4": "insufficient memory", "-5": "buffer error", "-6": "incompatible version" };
      }, 9564: (t, e, r) => {
        "use strict";
        var i = r(9761);
        function n(t2) {
          for (var e2 = t2.length; --e2 >= 0; )
            t2[e2] = 0;
        }
        var a = 0, o = 256, s = o + 1 + 29, h = 30, l = 19, f = 2 * s + 1, u = 15, c = 16, d = 256, p = 16, m = 17, g = 18, b = [0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 2, 2, 3, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5, 0], _ = [0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 4, 4, 5, 5, 6, 6, 7, 7, 8, 8, 9, 9, 10, 10, 11, 11, 12, 12, 13, 13], y = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 3, 7], w = [16, 17, 18, 0, 8, 7, 9, 6, 10, 5, 11, 4, 12, 3, 13, 2, 14, 1, 15], v = new Array(2 * (s + 2));
        n(v);
        var x = new Array(2 * h);
        n(x);
        var E = new Array(512);
        n(E);
        var k = new Array(256);
        n(k);
        var S = new Array(29);
        n(S);
        var M, A, I, B = new Array(h);
        function T(t2, e2, r2, i2, n2) {
          this.static_tree = t2, this.extra_bits = e2, this.extra_base = r2, this.elems = i2, this.max_length = n2, this.has_stree = t2 && t2.length;
        }
        function R(t2, e2) {
          this.dyn_tree = t2, this.max_code = 0, this.stat_desc = e2;
        }
        function P(t2) {
          return t2 < 256 ? E[t2] : E[256 + (t2 >>> 7)];
        }
        function O(t2, e2) {
          t2.pending_buf[t2.pending++] = 255 & e2, t2.pending_buf[t2.pending++] = e2 >>> 8 & 255;
        }
        function L(t2, e2, r2) {
          t2.bi_valid > c - r2 ? (t2.bi_buf |= e2 << t2.bi_valid & 65535, O(t2, t2.bi_buf), t2.bi_buf = e2 >> c - t2.bi_valid, t2.bi_valid += r2 - c) : (t2.bi_buf |= e2 << t2.bi_valid & 65535, t2.bi_valid += r2);
        }
        function C(t2, e2, r2) {
          L(t2, r2[2 * e2], r2[2 * e2 + 1]);
        }
        function U(t2, e2) {
          var r2 = 0;
          do {
            r2 |= 1 & t2, t2 >>>= 1, r2 <<= 1;
          } while (--e2 > 0);
          return r2 >>> 1;
        }
        function z(t2, e2, r2) {
          var i2, n2, a2 = new Array(u + 1), o2 = 0;
          for (i2 = 1; i2 <= u; i2++)
            a2[i2] = o2 = o2 + r2[i2 - 1] << 1;
          for (n2 = 0; n2 <= e2; n2++) {
            var s2 = t2[2 * n2 + 1];
            0 !== s2 && (t2[2 * n2] = U(a2[s2]++, s2));
          }
        }
        function D(t2) {
          var e2;
          for (e2 = 0; e2 < s; e2++)
            t2.dyn_ltree[2 * e2] = 0;
          for (e2 = 0; e2 < h; e2++)
            t2.dyn_dtree[2 * e2] = 0;
          for (e2 = 0; e2 < l; e2++)
            t2.bl_tree[2 * e2] = 0;
          t2.dyn_ltree[2 * d] = 1, t2.opt_len = t2.static_len = 0, t2.last_lit = t2.matches = 0;
        }
        function N(t2) {
          t2.bi_valid > 8 ? O(t2, t2.bi_buf) : t2.bi_valid > 0 && (t2.pending_buf[t2.pending++] = t2.bi_buf), t2.bi_buf = 0, t2.bi_valid = 0;
        }
        function F(t2, e2, r2, i2) {
          var n2 = 2 * e2, a2 = 2 * r2;
          return t2[n2] < t2[a2] || t2[n2] === t2[a2] && i2[e2] <= i2[r2];
        }
        function j(t2, e2, r2) {
          for (var i2 = t2.heap[r2], n2 = r2 << 1; n2 <= t2.heap_len && (n2 < t2.heap_len && F(e2, t2.heap[n2 + 1], t2.heap[n2], t2.depth) && n2++, !F(e2, i2, t2.heap[n2], t2.depth)); )
            t2.heap[r2] = t2.heap[n2], r2 = n2, n2 <<= 1;
          t2.heap[r2] = i2;
        }
        function G(t2, e2, r2) {
          var i2, n2, a2, s2, h2 = 0;
          if (0 !== t2.last_lit)
            do {
              i2 = t2.pending_buf[t2.d_buf + 2 * h2] << 8 | t2.pending_buf[t2.d_buf + 2 * h2 + 1], n2 = t2.pending_buf[t2.l_buf + h2], h2++, 0 === i2 ? C(t2, n2, e2) : (C(t2, (a2 = k[n2]) + o + 1, e2), 0 !== (s2 = b[a2]) && L(t2, n2 -= S[a2], s2), C(t2, a2 = P(--i2), r2), 0 !== (s2 = _[a2]) && L(t2, i2 -= B[a2], s2));
            } while (h2 < t2.last_lit);
          C(t2, d, e2);
        }
        function H(t2, e2) {
          var r2, i2, n2, a2 = e2.dyn_tree, o2 = e2.stat_desc.static_tree, s2 = e2.stat_desc.has_stree, h2 = e2.stat_desc.elems, l2 = -1;
          for (t2.heap_len = 0, t2.heap_max = f, r2 = 0; r2 < h2; r2++)
            0 !== a2[2 * r2] ? (t2.heap[++t2.heap_len] = l2 = r2, t2.depth[r2] = 0) : a2[2 * r2 + 1] = 0;
          for (; t2.heap_len < 2; )
            a2[2 * (n2 = t2.heap[++t2.heap_len] = l2 < 2 ? ++l2 : 0)] = 1, t2.depth[n2] = 0, t2.opt_len--, s2 && (t2.static_len -= o2[2 * n2 + 1]);
          for (e2.max_code = l2, r2 = t2.heap_len >> 1; r2 >= 1; r2--)
            j(t2, a2, r2);
          n2 = h2;
          do {
            r2 = t2.heap[1], t2.heap[1] = t2.heap[t2.heap_len--], j(t2, a2, 1), i2 = t2.heap[1], t2.heap[--t2.heap_max] = r2, t2.heap[--t2.heap_max] = i2, a2[2 * n2] = a2[2 * r2] + a2[2 * i2], t2.depth[n2] = (t2.depth[r2] >= t2.depth[i2] ? t2.depth[r2] : t2.depth[i2]) + 1, a2[2 * r2 + 1] = a2[2 * i2 + 1] = n2, t2.heap[1] = n2++, j(t2, a2, 1);
          } while (t2.heap_len >= 2);
          t2.heap[--t2.heap_max] = t2.heap[1], function(t3, e3) {
            var r3, i3, n3, a3, o3, s3, h3 = e3.dyn_tree, l3 = e3.max_code, c2 = e3.stat_desc.static_tree, d2 = e3.stat_desc.has_stree, p2 = e3.stat_desc.extra_bits, m2 = e3.stat_desc.extra_base, g2 = e3.stat_desc.max_length, b2 = 0;
            for (a3 = 0; a3 <= u; a3++)
              t3.bl_count[a3] = 0;
            for (h3[2 * t3.heap[t3.heap_max] + 1] = 0, r3 = t3.heap_max + 1; r3 < f; r3++)
              (a3 = h3[2 * h3[2 * (i3 = t3.heap[r3]) + 1] + 1] + 1) > g2 && (a3 = g2, b2++), h3[2 * i3 + 1] = a3, i3 > l3 || (t3.bl_count[a3]++, o3 = 0, i3 >= m2 && (o3 = p2[i3 - m2]), s3 = h3[2 * i3], t3.opt_len += s3 * (a3 + o3), d2 && (t3.static_len += s3 * (c2[2 * i3 + 1] + o3)));
            if (0 !== b2) {
              do {
                for (a3 = g2 - 1; 0 === t3.bl_count[a3]; )
                  a3--;
                t3.bl_count[a3]--, t3.bl_count[a3 + 1] += 2, t3.bl_count[g2]--, b2 -= 2;
              } while (b2 > 0);
              for (a3 = g2; 0 !== a3; a3--)
                for (i3 = t3.bl_count[a3]; 0 !== i3; )
                  (n3 = t3.heap[--r3]) > l3 || (h3[2 * n3 + 1] !== a3 && (t3.opt_len += (a3 - h3[2 * n3 + 1]) * h3[2 * n3], h3[2 * n3 + 1] = a3), i3--);
            }
          }(t2, e2), z(a2, l2, t2.bl_count);
        }
        function W(t2, e2, r2) {
          var i2, n2, a2 = -1, o2 = e2[1], s2 = 0, h2 = 7, l2 = 4;
          for (0 === o2 && (h2 = 138, l2 = 3), e2[2 * (r2 + 1) + 1] = 65535, i2 = 0; i2 <= r2; i2++)
            n2 = o2, o2 = e2[2 * (i2 + 1) + 1], ++s2 < h2 && n2 === o2 || (s2 < l2 ? t2.bl_tree[2 * n2] += s2 : 0 !== n2 ? (n2 !== a2 && t2.bl_tree[2 * n2]++, t2.bl_tree[2 * p]++) : s2 <= 10 ? t2.bl_tree[2 * m]++ : t2.bl_tree[2 * g]++, s2 = 0, a2 = n2, 0 === o2 ? (h2 = 138, l2 = 3) : n2 === o2 ? (h2 = 6, l2 = 3) : (h2 = 7, l2 = 4));
        }
        function q(t2, e2, r2) {
          var i2, n2, a2 = -1, o2 = e2[1], s2 = 0, h2 = 7, l2 = 4;
          for (0 === o2 && (h2 = 138, l2 = 3), i2 = 0; i2 <= r2; i2++)
            if (n2 = o2, o2 = e2[2 * (i2 + 1) + 1], !(++s2 < h2 && n2 === o2)) {
              if (s2 < l2)
                do {
                  C(t2, n2, t2.bl_tree);
                } while (0 != --s2);
              else
                0 !== n2 ? (n2 !== a2 && (C(t2, n2, t2.bl_tree), s2--), C(t2, p, t2.bl_tree), L(t2, s2 - 3, 2)) : s2 <= 10 ? (C(t2, m, t2.bl_tree), L(t2, s2 - 3, 3)) : (C(t2, g, t2.bl_tree), L(t2, s2 - 11, 7));
              s2 = 0, a2 = n2, 0 === o2 ? (h2 = 138, l2 = 3) : n2 === o2 ? (h2 = 6, l2 = 3) : (h2 = 7, l2 = 4);
            }
        }
        n(B);
        var Z = false;
        function Y(t2, e2, r2, n2) {
          L(t2, (a << 1) + (n2 ? 1 : 0), 3), function(t3, e3, r3, n3) {
            N(t3), O(t3, r3), O(t3, ~r3), i.arraySet(t3.pending_buf, t3.window, e3, r3, t3.pending), t3.pending += r3;
          }(t2, e2, r2);
        }
        e._tr_init = function(t2) {
          Z || (function() {
            var t3, e2, r2, i2, n2, a2 = new Array(u + 1);
            for (r2 = 0, i2 = 0; i2 < 28; i2++)
              for (S[i2] = r2, t3 = 0; t3 < 1 << b[i2]; t3++)
                k[r2++] = i2;
            for (k[r2 - 1] = i2, n2 = 0, i2 = 0; i2 < 16; i2++)
              for (B[i2] = n2, t3 = 0; t3 < 1 << _[i2]; t3++)
                E[n2++] = i2;
            for (n2 >>= 7; i2 < h; i2++)
              for (B[i2] = n2 << 7, t3 = 0; t3 < 1 << _[i2] - 7; t3++)
                E[256 + n2++] = i2;
            for (e2 = 0; e2 <= u; e2++)
              a2[e2] = 0;
            for (t3 = 0; t3 <= 143; )
              v[2 * t3 + 1] = 8, t3++, a2[8]++;
            for (; t3 <= 255; )
              v[2 * t3 + 1] = 9, t3++, a2[9]++;
            for (; t3 <= 279; )
              v[2 * t3 + 1] = 7, t3++, a2[7]++;
            for (; t3 <= 287; )
              v[2 * t3 + 1] = 8, t3++, a2[8]++;
            for (z(v, s + 1, a2), t3 = 0; t3 < h; t3++)
              x[2 * t3 + 1] = 5, x[2 * t3] = U(t3, 5);
            M = new T(v, b, o + 1, s, u), A = new T(x, _, 0, h, u), I = new T(new Array(0), y, 0, l, 7);
          }(), Z = true), t2.l_desc = new R(t2.dyn_ltree, M), t2.d_desc = new R(t2.dyn_dtree, A), t2.bl_desc = new R(t2.bl_tree, I), t2.bi_buf = 0, t2.bi_valid = 0, D(t2);
        }, e._tr_stored_block = Y, e._tr_flush_block = function(t2, e2, r2, i2) {
          var n2, a2, s2 = 0;
          t2.level > 0 ? (2 === t2.strm.data_type && (t2.strm.data_type = function(t3) {
            var e3, r3 = 4093624447;
            for (e3 = 0; e3 <= 31; e3++, r3 >>>= 1)
              if (1 & r3 && 0 !== t3.dyn_ltree[2 * e3])
                return 0;
            if (0 !== t3.dyn_ltree[18] || 0 !== t3.dyn_ltree[20] || 0 !== t3.dyn_ltree[26])
              return 1;
            for (e3 = 32; e3 < o; e3++)
              if (0 !== t3.dyn_ltree[2 * e3])
                return 1;
            return 0;
          }(t2)), H(t2, t2.l_desc), H(t2, t2.d_desc), s2 = function(t3) {
            var e3;
            for (W(t3, t3.dyn_ltree, t3.l_desc.max_code), W(t3, t3.dyn_dtree, t3.d_desc.max_code), H(t3, t3.bl_desc), e3 = l - 1; e3 >= 3 && 0 === t3.bl_tree[2 * w[e3] + 1]; e3--)
              ;
            return t3.opt_len += 3 * (e3 + 1) + 5 + 5 + 4, e3;
          }(t2), n2 = t2.opt_len + 3 + 7 >>> 3, (a2 = t2.static_len + 3 + 7 >>> 3) <= n2 && (n2 = a2)) : n2 = a2 = r2 + 5, r2 + 4 <= n2 && -1 !== e2 ? Y(t2, e2, r2, i2) : 4 === t2.strategy || a2 === n2 ? (L(t2, 2 + (i2 ? 1 : 0), 3), G(t2, v, x)) : (L(t2, 4 + (i2 ? 1 : 0), 3), function(t3, e3, r3, i3) {
            var n3;
            for (L(t3, e3 - 257, 5), L(t3, r3 - 1, 5), L(t3, i3 - 4, 4), n3 = 0; n3 < i3; n3++)
              L(t3, t3.bl_tree[2 * w[n3] + 1], 3);
            q(t3, t3.dyn_ltree, e3 - 1), q(t3, t3.dyn_dtree, r3 - 1);
          }(t2, t2.l_desc.max_code + 1, t2.d_desc.max_code + 1, s2 + 1), G(t2, t2.dyn_ltree, t2.dyn_dtree)), D(t2), i2 && N(t2);
        }, e._tr_tally = function(t2, e2, r2) {
          return t2.pending_buf[t2.d_buf + 2 * t2.last_lit] = e2 >>> 8 & 255, t2.pending_buf[t2.d_buf + 2 * t2.last_lit + 1] = 255 & e2, t2.pending_buf[t2.l_buf + t2.last_lit] = 255 & r2, t2.last_lit++, 0 === e2 ? t2.dyn_ltree[2 * r2]++ : (t2.matches++, e2--, t2.dyn_ltree[2 * (k[r2] + o + 1)]++, t2.dyn_dtree[2 * P(e2)]++), t2.last_lit === t2.lit_bufsize - 1;
        }, e._tr_align = function(t2) {
          L(t2, 2, 3), C(t2, d, v), function(t3) {
            16 === t3.bi_valid ? (O(t3, t3.bi_buf), t3.bi_buf = 0, t3.bi_valid = 0) : t3.bi_valid >= 8 && (t3.pending_buf[t3.pending++] = 255 & t3.bi_buf, t3.bi_buf >>= 8, t3.bi_valid -= 8);
          }(t2);
        };
      }, 744: (t) => {
        "use strict";
        t.exports = function() {
          this.input = null, this.next_in = 0, this.avail_in = 0, this.total_in = 0, this.output = null, this.next_out = 0, this.avail_out = 0, this.total_out = 0, this.msg = "", this.state = null, this.data_type = 2, this.adler = 0;
        };
      }, 4398: (t) => {
        function e(t2, e2) {
          if (!(t2 = t2.replace(/\t+/g, " ").trim()))
            return null;
          var i = t2.indexOf(" ");
          if (-1 === i)
            throw new Error("no named row at line " + e2);
          var n = t2.substring(0, i);
          t2 = (t2 = (t2 = (t2 = t2.substring(i + 1)).replace(/letter=[\'\"]\S+[\'\"]/gi, "")).split("=")).map(function(t3) {
            return t3.trim().match(/(".*?"|[^"\s]+)+(?=\s*|\s*$)/g);
          });
          for (var a = [], o = 0; o < t2.length; o++) {
            var s = t2[o];
            0 === o ? a.push({ key: s[0], data: "" }) : o === t2.length - 1 ? a[a.length - 1].data = r(s[0]) : (a[a.length - 1].data = r(s[0]), a.push({ key: s[1], data: "" }));
          }
          var h = { key: n, data: {} };
          return a.forEach(function(t3) {
            h.data[t3.key] = t3.data;
          }), h;
        }
        function r(t2) {
          return t2 && 0 !== t2.length ? 0 === t2.indexOf('"') || 0 === t2.indexOf("'") ? t2.substring(1, t2.length - 1) : -1 !== t2.indexOf(",") ? function(t3) {
            return t3.split(",").map(function(t4) {
              return parseInt(t4, 10);
            });
          }(t2) : parseInt(t2, 10) : "";
        }
        t.exports = function(t2) {
          if (!t2)
            throw new Error("no data provided");
          var r2 = { pages: [], chars: [], kernings: [] }, i = (t2 = t2.toString().trim()).split(/\r\n?|\n/g);
          if (0 === i.length)
            throw new Error("no data in BMFont file");
          for (var n = 0; n < i.length; n++) {
            var a = e(i[n], n);
            if (a)
              if ("page" === a.key) {
                if ("number" != typeof a.data.id)
                  throw new Error("malformed file at line " + n + " -- needs page id=N");
                if ("string" != typeof a.data.file)
                  throw new Error("malformed file at line " + n + ' -- needs page file="path"');
                r2.pages[a.data.id] = a.data.file;
              } else
                "chars" === a.key || "kernings" === a.key || ("char" === a.key ? r2.chars.push(a.data) : "kerning" === a.key ? r2.kernings.push(a.data) : r2[a.key] = a.data);
          }
          return r2;
        };
      }, 8438: (t) => {
        var e = [66, 77, 70];
        function r(t2, e2, r2) {
          if (r2 > e2.length - 1)
            return 0;
          var n = e2.readUInt8(r2++), a = e2.readInt32LE(r2);
          switch (r2 += 4, n) {
            case 1:
              t2.info = function(t3, e3) {
                var r3 = {};
                r3.size = t3.readInt16LE(e3);
                var n2 = t3.readUInt8(e3 + 2);
                return r3.smooth = n2 >> 7 & 1, r3.unicode = n2 >> 6 & 1, r3.italic = n2 >> 5 & 1, r3.bold = n2 >> 4 & 1, n2 >> 3 & 1 && (r3.fixedHeight = 1), r3.charset = t3.readUInt8(e3 + 3) || "", r3.stretchH = t3.readUInt16LE(e3 + 4), r3.aa = t3.readUInt8(e3 + 6), r3.padding = [t3.readInt8(e3 + 7), t3.readInt8(e3 + 8), t3.readInt8(e3 + 9), t3.readInt8(e3 + 10)], r3.spacing = [t3.readInt8(e3 + 11), t3.readInt8(e3 + 12)], r3.outline = t3.readUInt8(e3 + 13), r3.face = function(t4, e4) {
                  return i(t4, e4).toString("utf8");
                }(t3, e3 + 14), r3;
              }(e2, r2);
              break;
            case 2:
              t2.common = function(t3, e3) {
                var r3 = {};
                return r3.lineHeight = t3.readUInt16LE(e3), r3.base = t3.readUInt16LE(e3 + 2), r3.scaleW = t3.readUInt16LE(e3 + 4), r3.scaleH = t3.readUInt16LE(e3 + 6), r3.pages = t3.readUInt16LE(e3 + 8), t3.readUInt8(e3 + 10), r3.packed = 0, r3.alphaChnl = t3.readUInt8(e3 + 11), r3.redChnl = t3.readUInt8(e3 + 12), r3.greenChnl = t3.readUInt8(e3 + 13), r3.blueChnl = t3.readUInt8(e3 + 14), r3;
              }(e2, r2);
              break;
            case 3:
              t2.pages = function(t3, e3, r3) {
                for (var n2 = [], a2 = i(t3, e3), o = a2.length + 1, s = r3 / o, h = 0; h < s; h++)
                  n2[h] = t3.slice(e3, e3 + a2.length).toString("utf8"), e3 += o;
                return n2;
              }(e2, r2, a);
              break;
            case 4:
              t2.chars = function(t3, e3, r3) {
                for (var i2 = [], n2 = r3 / 20, a2 = 0; a2 < n2; a2++) {
                  var o = {}, s = 20 * a2;
                  o.id = t3.readUInt32LE(e3 + 0 + s), o.x = t3.readUInt16LE(e3 + 4 + s), o.y = t3.readUInt16LE(e3 + 6 + s), o.width = t3.readUInt16LE(e3 + 8 + s), o.height = t3.readUInt16LE(e3 + 10 + s), o.xoffset = t3.readInt16LE(e3 + 12 + s), o.yoffset = t3.readInt16LE(e3 + 14 + s), o.xadvance = t3.readInt16LE(e3 + 16 + s), o.page = t3.readUInt8(e3 + 18 + s), o.chnl = t3.readUInt8(e3 + 19 + s), i2[a2] = o;
                }
                return i2;
              }(e2, r2, a);
              break;
            case 5:
              t2.kernings = function(t3, e3, r3) {
                for (var i2 = [], n2 = r3 / 10, a2 = 0; a2 < n2; a2++) {
                  var o = {}, s = 10 * a2;
                  o.first = t3.readUInt32LE(e3 + 0 + s), o.second = t3.readUInt32LE(e3 + 4 + s), o.amount = t3.readInt16LE(e3 + 8 + s), i2[a2] = o;
                }
                return i2;
              }(e2, r2, a);
          }
          return 5 + a;
        }
        function i(t2, e2) {
          for (var r2 = e2; r2 < t2.length && 0 !== t2[r2]; r2++)
            ;
          return t2.slice(e2, r2);
        }
        t.exports = function(t2) {
          if (t2.length < 6)
            throw new Error("invalid buffer length for BMFont");
          var i2 = e.every(function(e2, r2) {
            return t2.readUInt8(r2) === e2;
          });
          if (!i2)
            throw new Error("BMFont missing BMF byte header");
          var n = 3;
          if (t2.readUInt8(n++) > 3)
            throw new Error("Only supports BMFont Binary v3 (BMFont App v1.10)");
          for (var a = { kernings: [], chars: [] }, o = 0; o < 5; o++)
            n += r(a, t2, n);
          return a;
        };
      }, 5947: (t, e, r) => {
        var i = r(403), n = r(1596), a = { scaleh: "scaleH", scalew: "scaleW", stretchh: "stretchH", lineheight: "lineHeight", alphachnl: "alphaChnl", redchnl: "redChnl", greenchnl: "greenChnl", bluechnl: "blueChnl" };
        function o(t2) {
          var e2 = function(t3) {
            for (var e3 = [], r2 = 0; r2 < t3.attributes.length; r2++)
              e3.push(t3.attributes[r2]);
            return e3;
          }(t2);
          return e2.reduce(function(t3, e3) {
            var r2;
            return t3[r2 = e3.nodeName, a[r2.toLowerCase()] || r2] = e3.nodeValue, t3;
          }, {});
        }
        t.exports = function(t2) {
          t2 = t2.toString();
          var e2 = n(t2), r2 = { pages: [], chars: [], kernings: [] };
          ["info", "common"].forEach(function(t3) {
            var n2 = e2.getElementsByTagName(t3)[0];
            n2 && (r2[t3] = i(o(n2)));
          });
          var a2 = e2.getElementsByTagName("pages")[0];
          if (!a2)
            throw new Error("malformed file -- no <pages> element");
          for (var s = a2.getElementsByTagName("page"), h = 0; h < s.length; h++) {
            var l = s[h], f = parseInt(l.getAttribute("id"), 10), u = l.getAttribute("file");
            if (isNaN(f))
              throw new Error('malformed file -- page "id" attribute is NaN');
            if (!u)
              throw new Error('malformed file -- needs page "file" attribute');
            r2.pages[parseInt(f, 10)] = u;
          }
          return ["chars", "kernings"].forEach(function(t3) {
            var n2 = e2.getElementsByTagName(t3)[0];
            if (n2)
              for (var a3 = t3.substring(0, t3.length - 1), s2 = n2.getElementsByTagName(a3), h2 = 0; h2 < s2.length; h2++) {
                var l2 = s2[h2];
                r2[t3].push(i(o(l2)));
              }
          }), r2;
        };
      }, 403: (t) => {
        var e = "chasrset";
        t.exports = function(t2) {
          for (var r in e in t2 && (t2.charset = t2[e], delete t2[e]), t2)
            "face" !== r && "charset" !== r && (t2[r] = "padding" === r || "spacing" === r ? t2[r].split(",").map(function(t3) {
              return parseInt(t3, 10);
            }) : parseInt(t2[r], 10));
          return t2;
        };
      }, 4655: (t, e, r) => {
        var i = r(311), n = r(3243);
        t.exports = function(t2) {
          if (!t2)
            return {};
          var e2 = {};
          return n(i(t2).split("\n"), function(t3) {
            var r2, n2 = t3.indexOf(":"), a = i(t3.slice(0, n2)).toLowerCase(), o = i(t3.slice(n2 + 1));
            void 0 === e2[a] ? e2[a] = o : (r2 = e2[a], "[object Array]" === Object.prototype.toString.call(r2) ? e2[a].push(o) : e2[a] = [e2[a], o]);
          }), e2;
        };
      }, 1023: (t, e, r) => {
        "use strict";
        var i = r(4406);
        function n(t2) {
          if ("string" != typeof t2)
            throw new TypeError("Path must be a string. Received " + JSON.stringify(t2));
        }
        function a(t2, e2) {
          for (var r2, i2 = "", n2 = 0, a2 = -1, o2 = 0, s = 0; s <= t2.length; ++s) {
            if (s < t2.length)
              r2 = t2.charCodeAt(s);
            else {
              if (47 === r2)
                break;
              r2 = 47;
            }
            if (47 === r2) {
              if (a2 === s - 1 || 1 === o2)
                ;
              else if (a2 !== s - 1 && 2 === o2) {
                if (i2.length < 2 || 2 !== n2 || 46 !== i2.charCodeAt(i2.length - 1) || 46 !== i2.charCodeAt(i2.length - 2)) {
                  if (i2.length > 2) {
                    var h = i2.lastIndexOf("/");
                    if (h !== i2.length - 1) {
                      -1 === h ? (i2 = "", n2 = 0) : n2 = (i2 = i2.slice(0, h)).length - 1 - i2.lastIndexOf("/"), a2 = s, o2 = 0;
                      continue;
                    }
                  } else if (2 === i2.length || 1 === i2.length) {
                    i2 = "", n2 = 0, a2 = s, o2 = 0;
                    continue;
                  }
                }
                e2 && (i2.length > 0 ? i2 += "/.." : i2 = "..", n2 = 2);
              } else
                i2.length > 0 ? i2 += "/" + t2.slice(a2 + 1, s) : i2 = t2.slice(a2 + 1, s), n2 = s - a2 - 1;
              a2 = s, o2 = 0;
            } else
              46 === r2 && -1 !== o2 ? ++o2 : o2 = -1;
          }
          return i2;
        }
        var o = { resolve: function() {
          for (var t2, e2 = "", r2 = false, o2 = arguments.length - 1; o2 >= -1 && !r2; o2--) {
            var s;
            o2 >= 0 ? s = arguments[o2] : (void 0 === t2 && (t2 = i.cwd()), s = t2), n(s), 0 !== s.length && (e2 = s + "/" + e2, r2 = 47 === s.charCodeAt(0));
          }
          return e2 = a(e2, !r2), r2 ? e2.length > 0 ? "/" + e2 : "/" : e2.length > 0 ? e2 : ".";
        }, normalize: function(t2) {
          if (n(t2), 0 === t2.length)
            return ".";
          var e2 = 47 === t2.charCodeAt(0), r2 = 47 === t2.charCodeAt(t2.length - 1);
          return 0 !== (t2 = a(t2, !e2)).length || e2 || (t2 = "."), t2.length > 0 && r2 && (t2 += "/"), e2 ? "/" + t2 : t2;
        }, isAbsolute: function(t2) {
          return n(t2), t2.length > 0 && 47 === t2.charCodeAt(0);
        }, join: function() {
          if (0 === arguments.length)
            return ".";
          for (var t2, e2 = 0; e2 < arguments.length; ++e2) {
            var r2 = arguments[e2];
            n(r2), r2.length > 0 && (void 0 === t2 ? t2 = r2 : t2 += "/" + r2);
          }
          return void 0 === t2 ? "." : o.normalize(t2);
        }, relative: function(t2, e2) {
          if (n(t2), n(e2), t2 === e2)
            return "";
          if ((t2 = o.resolve(t2)) === (e2 = o.resolve(e2)))
            return "";
          for (var r2 = 1; r2 < t2.length && 47 === t2.charCodeAt(r2); ++r2)
            ;
          for (var i2 = t2.length, a2 = i2 - r2, s = 1; s < e2.length && 47 === e2.charCodeAt(s); ++s)
            ;
          for (var h = e2.length - s, l = a2 < h ? a2 : h, f = -1, u = 0; u <= l; ++u) {
            if (u === l) {
              if (h > l) {
                if (47 === e2.charCodeAt(s + u))
                  return e2.slice(s + u + 1);
                if (0 === u)
                  return e2.slice(s + u);
              } else
                a2 > l && (47 === t2.charCodeAt(r2 + u) ? f = u : 0 === u && (f = 0));
              break;
            }
            var c = t2.charCodeAt(r2 + u);
            if (c !== e2.charCodeAt(s + u))
              break;
            47 === c && (f = u);
          }
          var d = "";
          for (u = r2 + f + 1; u <= i2; ++u)
            u !== i2 && 47 !== t2.charCodeAt(u) || (0 === d.length ? d += ".." : d += "/..");
          return d.length > 0 ? d + e2.slice(s + f) : (s += f, 47 === e2.charCodeAt(s) && ++s, e2.slice(s));
        }, _makeLong: function(t2) {
          return t2;
        }, dirname: function(t2) {
          if (n(t2), 0 === t2.length)
            return ".";
          for (var e2 = t2.charCodeAt(0), r2 = 47 === e2, i2 = -1, a2 = true, o2 = t2.length - 1; o2 >= 1; --o2)
            if (47 === (e2 = t2.charCodeAt(o2))) {
              if (!a2) {
                i2 = o2;
                break;
              }
            } else
              a2 = false;
          return -1 === i2 ? r2 ? "/" : "." : r2 && 1 === i2 ? "//" : t2.slice(0, i2);
        }, basename: function(t2, e2) {
          if (void 0 !== e2 && "string" != typeof e2)
            throw new TypeError('"ext" argument must be a string');
          n(t2);
          var r2, i2 = 0, a2 = -1, o2 = true;
          if (void 0 !== e2 && e2.length > 0 && e2.length <= t2.length) {
            if (e2.length === t2.length && e2 === t2)
              return "";
            var s = e2.length - 1, h = -1;
            for (r2 = t2.length - 1; r2 >= 0; --r2) {
              var l = t2.charCodeAt(r2);
              if (47 === l) {
                if (!o2) {
                  i2 = r2 + 1;
                  break;
                }
              } else
                -1 === h && (o2 = false, h = r2 + 1), s >= 0 && (l === e2.charCodeAt(s) ? -1 == --s && (a2 = r2) : (s = -1, a2 = h));
            }
            return i2 === a2 ? a2 = h : -1 === a2 && (a2 = t2.length), t2.slice(i2, a2);
          }
          for (r2 = t2.length - 1; r2 >= 0; --r2)
            if (47 === t2.charCodeAt(r2)) {
              if (!o2) {
                i2 = r2 + 1;
                break;
              }
            } else
              -1 === a2 && (o2 = false, a2 = r2 + 1);
          return -1 === a2 ? "" : t2.slice(i2, a2);
        }, extname: function(t2) {
          n(t2);
          for (var e2 = -1, r2 = 0, i2 = -1, a2 = true, o2 = 0, s = t2.length - 1; s >= 0; --s) {
            var h = t2.charCodeAt(s);
            if (47 !== h)
              -1 === i2 && (a2 = false, i2 = s + 1), 46 === h ? -1 === e2 ? e2 = s : 1 !== o2 && (o2 = 1) : -1 !== e2 && (o2 = -1);
            else if (!a2) {
              r2 = s + 1;
              break;
            }
          }
          return -1 === e2 || -1 === i2 || 0 === o2 || 1 === o2 && e2 === i2 - 1 && e2 === r2 + 1 ? "" : t2.slice(e2, i2);
        }, format: function(t2) {
          if (null === t2 || "object" != typeof t2)
            throw new TypeError('The "pathObject" argument must be of type Object. Received type ' + typeof t2);
          return function(t3, e2) {
            var r2 = e2.dir || e2.root, i2 = e2.base || (e2.name || "") + (e2.ext || "");
            return r2 ? r2 === e2.root ? r2 + i2 : r2 + "/" + i2 : i2;
          }(0, t2);
        }, parse: function(t2) {
          n(t2);
          var e2 = { root: "", dir: "", base: "", ext: "", name: "" };
          if (0 === t2.length)
            return e2;
          var r2, i2 = t2.charCodeAt(0), a2 = 47 === i2;
          a2 ? (e2.root = "/", r2 = 1) : r2 = 0;
          for (var o2 = -1, s = 0, h = -1, l = true, f = t2.length - 1, u = 0; f >= r2; --f)
            if (47 !== (i2 = t2.charCodeAt(f)))
              -1 === h && (l = false, h = f + 1), 46 === i2 ? -1 === o2 ? o2 = f : 1 !== u && (u = 1) : -1 !== o2 && (u = -1);
            else if (!l) {
              s = f + 1;
              break;
            }
          return -1 === o2 || -1 === h || 0 === u || 1 === u && o2 === h - 1 && o2 === s + 1 ? -1 !== h && (e2.base = e2.name = 0 === s && a2 ? t2.slice(1, h) : t2.slice(s, h)) : (0 === s && a2 ? (e2.name = t2.slice(1, o2), e2.base = t2.slice(1, h)) : (e2.name = t2.slice(s, o2), e2.base = t2.slice(s, h)), e2.ext = t2.slice(o2, h)), s > 0 ? e2.dir = t2.slice(0, s - 1) : a2 && (e2.dir = "/"), e2;
        }, sep: "/", delimiter: ":", win32: null, posix: null };
        o.posix = o, t.exports = o;
      }, 482: (t, e) => {
        "use strict";
        Object.defineProperty(e, "__esModule", { value: true }), e.Deferred = void 0, e.Deferred = class {
          constructor() {
            this.resolve = () => null, this.reject = () => null, this.promise = new Promise((t2, e2) => {
              this.reject = e2, this.resolve = t2;
            });
          }
        };
      }, 5567: (t, e) => {
        "use strict";
        Object.defineProperty(e, "__esModule", { value: true }), e.EndOfStreamError = e.defaultMessages = void 0, e.defaultMessages = "End-Of-Stream";
        class r extends Error {
          constructor() {
            super(e.defaultMessages);
          }
        }
        e.EndOfStreamError = r;
      }, 4514: (t, e, r) => {
        "use strict";
        Object.defineProperty(e, "__esModule", { value: true }), e.StreamReader = e.EndOfStreamError = void 0;
        const i = r(5567), n = r(482);
        var a = r(5567);
        Object.defineProperty(e, "EndOfStreamError", { enumerable: true, get: function() {
          return a.EndOfStreamError;
        } }), e.StreamReader = class {
          constructor(t2) {
            if (this.s = t2, this.deferred = null, this.endOfStream = false, this.peekQueue = [], !t2.read || !t2.once)
              throw new Error("Expected an instance of stream.Readable");
            this.s.once("end", () => this.reject(new i.EndOfStreamError())), this.s.once("error", (t3) => this.reject(t3)), this.s.once("close", () => this.reject(new Error("Stream closed")));
          }
          async peek(t2, e2, r2) {
            const i2 = await this.read(t2, e2, r2);
            return this.peekQueue.push(t2.subarray(e2, e2 + i2)), i2;
          }
          async read(t2, e2, r2) {
            if (0 === r2)
              return 0;
            if (0 === this.peekQueue.length && this.endOfStream)
              throw new i.EndOfStreamError();
            let n2 = r2, a2 = 0;
            for (; this.peekQueue.length > 0 && n2 > 0; ) {
              const r3 = this.peekQueue.pop();
              if (!r3)
                throw new Error("peekData should be defined");
              const i2 = Math.min(r3.length, n2);
              t2.set(r3.subarray(0, i2), e2 + a2), a2 += i2, n2 -= i2, i2 < r3.length && this.peekQueue.push(r3.subarray(i2));
            }
            for (; n2 > 0 && !this.endOfStream; ) {
              const r3 = Math.min(n2, 1048576), i2 = await this.readFromStream(t2, e2 + a2, r3);
              if (a2 += i2, i2 < r3)
                break;
              n2 -= i2;
            }
            return a2;
          }
          async readFromStream(t2, e2, r2) {
            const i2 = this.s.read(r2);
            if (i2)
              return t2.set(i2, e2), i2.length;
            {
              const i3 = { buffer: t2, offset: e2, length: r2, deferred: new n.Deferred() };
              return this.deferred = i3.deferred, this.s.once("readable", () => {
                this.readDeferred(i3);
              }), i3.deferred.promise;
            }
          }
          readDeferred(t2) {
            const e2 = this.s.read(t2.length);
            e2 ? (t2.buffer.set(e2, t2.offset), t2.deferred.resolve(e2.length), this.deferred = null) : this.s.once("readable", () => {
              this.readDeferred(t2);
            });
          }
          reject(t2) {
            this.endOfStream = true, this.deferred && (this.deferred.reject(t2), this.deferred = null);
          }
        };
      }, 4644: (t, e, r) => {
        "use strict";
        Object.defineProperty(e, "__esModule", { value: true }), e.StreamReader = e.EndOfStreamError = void 0;
        var i = r(5567);
        Object.defineProperty(e, "EndOfStreamError", { enumerable: true, get: function() {
          return i.EndOfStreamError;
        } });
        var n = r(4514);
        Object.defineProperty(e, "StreamReader", { enumerable: true, get: function() {
          return n.StreamReader;
        } });
      }, 1294: (t) => {
        "use strict";
        function e(t2, i2, n2, a2, o2, s2) {
          for (var h, l, f, u, c = Math.max(i2 - 1, 0), d = Math.max(n2 - 1, 0), p = Math.min(i2 + 1, a2 - 1), m = Math.min(n2 + 1, o2 - 1), g = 4 * (n2 * a2 + i2), b = 0, _ = 0, y = 0, w = 0, v = 0, x = c; x <= p; x++)
            for (var E = d; E <= m; E++)
              if (x !== i2 || E !== n2) {
                var k = r(t2, t2, g, 4 * (E * a2 + x), true);
                if (0 === k ? b++ : k < 0 ? y++ : k > 0 && _++, b > 2)
                  return false;
                s2 && (k < w && (w = k, h = x, l = E), k > v && (v = k, f = x, u = E));
              }
          return !s2 || 0 !== y && 0 !== _ && (!e(t2, h, l, a2, o2) && !e(s2, h, l, a2, o2) || !e(t2, f, u, a2, o2) && !e(s2, f, u, a2, o2));
        }
        function r(t2, e2, r2, s2, h) {
          var l = t2[r2 + 3] / 255, f = e2[s2 + 3] / 255, u = o(t2[r2 + 0], l), c = o(t2[r2 + 1], l), d = o(t2[r2 + 2], l), p = o(e2[s2 + 0], f), m = o(e2[s2 + 1], f), g = o(e2[s2 + 2], f), b = i(u, c, d) - i(p, m, g);
          if (h)
            return b;
          var _ = n(u, c, d) - n(p, m, g), y = a(u, c, d) - a(p, m, g);
          return 0.5053 * b * b + 0.299 * _ * _ + 0.1957 * y * y;
        }
        function i(t2, e2, r2) {
          return 0.29889531 * t2 + 0.58662247 * e2 + 0.11448223 * r2;
        }
        function n(t2, e2, r2) {
          return 0.59597799 * t2 - 0.2741761 * e2 - 0.32180189 * r2;
        }
        function a(t2, e2, r2) {
          return 0.21147017 * t2 - 0.52261711 * e2 + 0.31114694 * r2;
        }
        function o(t2, e2) {
          return 255 + (t2 - 255) * e2;
        }
        function s(t2, e2, r2, i2, n2) {
          t2[e2 + 0] = r2, t2[e2 + 1] = i2, t2[e2 + 2] = n2, t2[e2 + 3] = 255;
        }
        t.exports = function(t2, n2, a2, h, l, f) {
          f || (f = {});
          for (var u = void 0 === f.threshold ? 0.1 : f.threshold, c = 35215 * u * u, d = 0, p = 0; p < l; p++)
            for (var m = 0; m < h; m++) {
              var g = 4 * (p * h + m);
              if (r(t2, n2, g, g) > c)
                f.includeAA || !e(t2, m, p, h, l, n2) && !e(n2, m, p, h, l, t2) ? (a2 && s(a2, g, 255, 0, 0), d++) : a2 && s(a2, g, 255, 255, 0);
              else if (a2) {
                var b = o((void 0, void 0, void 0, void 0, w = (_ = t2)[(y = g) + 3] / 255, i(o(_[y + 0], w), o(_[y + 1], w), o(_[y + 2], w))), 0.1);
                s(a2, g, b, b, b);
              }
            }
          var _, y, w;
          return d;
        };
      }, 9902: (t, e, r) => {
        t.exports = function t2(e2, r2, i) {
          function n(o2, s) {
            if (!r2[o2]) {
              if (!e2[o2]) {
                if (a)
                  return a(o2, true);
                var h = new Error("Cannot find module '" + o2 + "'");
                throw h.code = "MODULE_NOT_FOUND", h;
              }
              var l = r2[o2] = { exports: {} };
              e2[o2][0].call(l.exports, function(t3) {
                return n(e2[o2][1][t3] || t3);
              }, l, l.exports, t2, e2, r2, i);
            }
            return r2[o2].exports;
          }
          for (var a = void 0, o = 0; o < i.length; o++)
            n(i[o]);
          return n;
        }({ 1: [function(t2, e2, r2) {
          (function(e3) {
            (function() {
              "use strict";
              let i = t2("./interlace"), n = [function() {
              }, function(t3, e4, r3, i2) {
                if (i2 === e4.length)
                  throw new Error("Ran out of data");
                let n2 = e4[i2];
                t3[r3] = n2, t3[r3 + 1] = n2, t3[r3 + 2] = n2, t3[r3 + 3] = 255;
              }, function(t3, e4, r3, i2) {
                if (i2 + 1 >= e4.length)
                  throw new Error("Ran out of data");
                let n2 = e4[i2];
                t3[r3] = n2, t3[r3 + 1] = n2, t3[r3 + 2] = n2, t3[r3 + 3] = e4[i2 + 1];
              }, function(t3, e4, r3, i2) {
                if (i2 + 2 >= e4.length)
                  throw new Error("Ran out of data");
                t3[r3] = e4[i2], t3[r3 + 1] = e4[i2 + 1], t3[r3 + 2] = e4[i2 + 2], t3[r3 + 3] = 255;
              }, function(t3, e4, r3, i2) {
                if (i2 + 3 >= e4.length)
                  throw new Error("Ran out of data");
                t3[r3] = e4[i2], t3[r3 + 1] = e4[i2 + 1], t3[r3 + 2] = e4[i2 + 2], t3[r3 + 3] = e4[i2 + 3];
              }], a = [function() {
              }, function(t3, e4, r3, i2) {
                let n2 = e4[0];
                t3[r3] = n2, t3[r3 + 1] = n2, t3[r3 + 2] = n2, t3[r3 + 3] = i2;
              }, function(t3, e4, r3) {
                let i2 = e4[0];
                t3[r3] = i2, t3[r3 + 1] = i2, t3[r3 + 2] = i2, t3[r3 + 3] = e4[1];
              }, function(t3, e4, r3, i2) {
                t3[r3] = e4[0], t3[r3 + 1] = e4[1], t3[r3 + 2] = e4[2], t3[r3 + 3] = i2;
              }, function(t3, e4, r3) {
                t3[r3] = e4[0], t3[r3 + 1] = e4[1], t3[r3 + 2] = e4[2], t3[r3 + 3] = e4[3];
              }];
              function o(t3, e4, r3, i2, a2, o2) {
                let s2 = t3.width, h = t3.height, l = t3.index;
                for (let t4 = 0; t4 < h; t4++)
                  for (let h2 = 0; h2 < s2; h2++) {
                    let s3 = r3(h2, t4, l);
                    n[i2](e4, a2, s3, o2), o2 += i2;
                  }
                return o2;
              }
              function s(t3, e4, r3, i2, n2, o2) {
                let s2 = t3.width, h = t3.height, l = t3.index;
                for (let t4 = 0; t4 < h; t4++) {
                  for (let h2 = 0; h2 < s2; h2++) {
                    let s3 = n2.get(i2), f = r3(h2, t4, l);
                    a[i2](e4, s3, f, o2);
                  }
                  n2.resetAfterLine();
                }
              }
              r2.dataToBitMap = function(t3, r3) {
                let n2, a2, h = r3.width, l = r3.height, f = r3.depth, u = r3.bpp, c = r3.interlace;
                8 !== f && (n2 = /* @__PURE__ */ function(t4, e4) {
                  let r4 = [], i2 = 0;
                  function n3() {
                    if (i2 === t4.length)
                      throw new Error("Ran out of data");
                    let n4, a3, o2, s2, h2, l2, f2, u2, c2 = t4[i2];
                    switch (i2++, e4) {
                      default:
                        throw new Error("unrecognised depth");
                      case 16:
                        f2 = t4[i2], i2++, r4.push((c2 << 8) + f2);
                        break;
                      case 4:
                        f2 = 15 & c2, u2 = c2 >> 4, r4.push(u2, f2);
                        break;
                      case 2:
                        h2 = 3 & c2, l2 = c2 >> 2 & 3, f2 = c2 >> 4 & 3, u2 = c2 >> 6 & 3, r4.push(u2, f2, l2, h2);
                        break;
                      case 1:
                        n4 = 1 & c2, a3 = c2 >> 1 & 1, o2 = c2 >> 2 & 1, s2 = c2 >> 3 & 1, h2 = c2 >> 4 & 1, l2 = c2 >> 5 & 1, f2 = c2 >> 6 & 1, u2 = c2 >> 7 & 1, r4.push(u2, f2, l2, h2, s2, o2, a3, n4);
                    }
                  }
                  return { get: function(t5) {
                    for (; r4.length < t5; )
                      n3();
                    let e5 = r4.slice(0, t5);
                    return r4 = r4.slice(t5), e5;
                  }, resetAfterLine: function() {
                    r4.length = 0;
                  }, end: function() {
                    if (i2 !== t4.length)
                      throw new Error("extra data found");
                  } };
                }(t3, f)), a2 = f <= 8 ? e3.alloc(h * l * 4) : new Uint16Array(h * l * 4);
                let d, p, m = Math.pow(2, f) - 1, g = 0;
                if (c)
                  d = i.getImagePasses(h, l), p = i.getInterlaceIterator(h, l);
                else {
                  let t4 = 0;
                  p = function() {
                    let e4 = t4;
                    return t4 += 4, e4;
                  }, d = [{ width: h, height: l }];
                }
                for (let e4 = 0; e4 < d.length; e4++)
                  8 === f ? g = o(d[e4], a2, p, u, t3, g) : s(d[e4], a2, p, u, n2, m);
                if (8 === f) {
                  if (g !== t3.length)
                    throw new Error("extra data found");
                } else
                  n2.end();
                return a2;
              };
            }).call(this);
          }).call(this, t2("buffer").Buffer);
        }, { "./interlace": 11, buffer: 33 }], 2: [function(t2, e2, r2) {
          (function(r3) {
            (function() {
              "use strict";
              let i = t2("./constants");
              e2.exports = function(t3, e3, n, a) {
                let o = -1 !== [i.COLORTYPE_COLOR_ALPHA, i.COLORTYPE_ALPHA].indexOf(a.colorType);
                if (a.colorType === a.inputColorType) {
                  let e4 = function() {
                    let t4 = new ArrayBuffer(2);
                    return new DataView(t4).setInt16(0, 256, true), 256 !== new Int16Array(t4)[0];
                  }();
                  if (8 === a.bitDepth || 16 === a.bitDepth && e4)
                    return t3;
                }
                let s = 16 !== a.bitDepth ? t3 : new Uint16Array(t3.buffer), h = 255, l = i.COLORTYPE_TO_BPP_MAP[a.inputColorType];
                4 !== l || a.inputHasAlpha || (l = 3);
                let f = i.COLORTYPE_TO_BPP_MAP[a.colorType];
                16 === a.bitDepth && (h = 65535, f *= 2);
                let u = r3.alloc(e3 * n * f), c = 0, d = 0, p = a.bgColor || {};
                function m() {
                  let t4, e4, r4, n2 = h;
                  switch (a.inputColorType) {
                    case i.COLORTYPE_COLOR_ALPHA:
                      n2 = s[c + 3], t4 = s[c], e4 = s[c + 1], r4 = s[c + 2];
                      break;
                    case i.COLORTYPE_COLOR:
                      t4 = s[c], e4 = s[c + 1], r4 = s[c + 2];
                      break;
                    case i.COLORTYPE_ALPHA:
                      n2 = s[c + 1], t4 = s[c], e4 = t4, r4 = t4;
                      break;
                    case i.COLORTYPE_GRAYSCALE:
                      t4 = s[c], e4 = t4, r4 = t4;
                      break;
                    default:
                      throw new Error("input color type:" + a.inputColorType + " is not supported at present");
                  }
                  return a.inputHasAlpha && (o || (n2 /= h, t4 = Math.min(Math.max(Math.round((1 - n2) * p.red + n2 * t4), 0), h), e4 = Math.min(Math.max(Math.round((1 - n2) * p.green + n2 * e4), 0), h), r4 = Math.min(Math.max(Math.round((1 - n2) * p.blue + n2 * r4), 0), h))), { red: t4, green: e4, blue: r4, alpha: n2 };
                }
                void 0 === p.red && (p.red = h), void 0 === p.green && (p.green = h), void 0 === p.blue && (p.blue = h);
                for (let t4 = 0; t4 < n; t4++)
                  for (let t5 = 0; t5 < e3; t5++) {
                    let t6 = m();
                    switch (a.colorType) {
                      case i.COLORTYPE_COLOR_ALPHA:
                      case i.COLORTYPE_COLOR:
                        8 === a.bitDepth ? (u[d] = t6.red, u[d + 1] = t6.green, u[d + 2] = t6.blue, o && (u[d + 3] = t6.alpha)) : (u.writeUInt16BE(t6.red, d), u.writeUInt16BE(t6.green, d + 2), u.writeUInt16BE(t6.blue, d + 4), o && u.writeUInt16BE(t6.alpha, d + 6));
                        break;
                      case i.COLORTYPE_ALPHA:
                      case i.COLORTYPE_GRAYSCALE: {
                        let e4 = (t6.red + t6.green + t6.blue) / 3;
                        8 === a.bitDepth ? (u[d] = e4, o && (u[d + 1] = t6.alpha)) : (u.writeUInt16BE(e4, d), o && u.writeUInt16BE(t6.alpha, d + 2));
                        break;
                      }
                      default:
                        throw new Error("unrecognised color Type " + a.colorType);
                    }
                    c += l, d += f;
                  }
                return u;
              };
            }).call(this);
          }).call(this, t2("buffer").Buffer);
        }, { "./constants": 4, buffer: 33 }], 3: [function(t2, e2, r2) {
          (function(r3, i) {
            (function() {
              "use strict";
              let n = t2("util"), a = t2("stream"), o = e2.exports = function() {
                a.call(this), this._buffers = [], this._buffered = 0, this._reads = [], this._paused = false, this._encoding = "utf8", this.writable = true;
              };
              n.inherits(o, a), o.prototype.read = function(t3, e3) {
                this._reads.push({ length: Math.abs(t3), allowLess: t3 < 0, func: e3 }), r3.nextTick((function() {
                  this._process(), this._paused && this._reads && this._reads.length > 0 && (this._paused = false, this.emit("drain"));
                }).bind(this));
              }, o.prototype.write = function(t3, e3) {
                if (!this.writable)
                  return this.emit("error", new Error("Stream not writable")), false;
                let r4;
                return r4 = i.isBuffer(t3) ? t3 : i.from(t3, e3 || this._encoding), this._buffers.push(r4), this._buffered += r4.length, this._process(), this._reads && 0 === this._reads.length && (this._paused = true), this.writable && !this._paused;
              }, o.prototype.end = function(t3, e3) {
                t3 && this.write(t3, e3), this.writable = false, this._buffers && (0 === this._buffers.length ? this._end() : (this._buffers.push(null), this._process()));
              }, o.prototype.destroySoon = o.prototype.end, o.prototype._end = function() {
                this._reads.length > 0 && this.emit("error", new Error("Unexpected end of input")), this.destroy();
              }, o.prototype.destroy = function() {
                this._buffers && (this.writable = false, this._reads = null, this._buffers = null, this.emit("close"));
              }, o.prototype._processReadAllowingLess = function(t3) {
                this._reads.shift();
                let e3 = this._buffers[0];
                e3.length > t3.length ? (this._buffered -= t3.length, this._buffers[0] = e3.slice(t3.length), t3.func.call(this, e3.slice(0, t3.length))) : (this._buffered -= e3.length, this._buffers.shift(), t3.func.call(this, e3));
              }, o.prototype._processRead = function(t3) {
                this._reads.shift();
                let e3 = 0, r4 = 0, n2 = i.alloc(t3.length);
                for (; e3 < t3.length; ) {
                  let i2 = this._buffers[r4++], a2 = Math.min(i2.length, t3.length - e3);
                  i2.copy(n2, e3, 0, a2), e3 += a2, a2 !== i2.length && (this._buffers[--r4] = i2.slice(a2));
                }
                r4 > 0 && this._buffers.splice(0, r4), this._buffered -= t3.length, t3.func.call(this, n2);
              }, o.prototype._process = function() {
                try {
                  for (; this._buffered > 0 && this._reads && this._reads.length > 0; ) {
                    let t3 = this._reads[0];
                    if (t3.allowLess)
                      this._processReadAllowingLess(t3);
                    else {
                      if (!(this._buffered >= t3.length))
                        break;
                      this._processRead(t3);
                    }
                  }
                  this._buffers && !this.writable && this._end();
                } catch (t3) {
                  this.emit("error", t3);
                }
              };
            }).call(this);
          }).call(this, t2("_process"), t2("buffer").Buffer);
        }, { _process: 60, buffer: 33, stream: 61, util: 81 }], 4: [function(t2, e2, r2) {
          "use strict";
          e2.exports = { PNG_SIGNATURE: [137, 80, 78, 71, 13, 10, 26, 10], TYPE_IHDR: 1229472850, TYPE_IEND: 1229278788, TYPE_IDAT: 1229209940, TYPE_PLTE: 1347179589, TYPE_tRNS: 1951551059, TYPE_gAMA: 1732332865, COLORTYPE_GRAYSCALE: 0, COLORTYPE_PALETTE: 1, COLORTYPE_COLOR: 2, COLORTYPE_ALPHA: 4, COLORTYPE_PALETTE_COLOR: 3, COLORTYPE_COLOR_ALPHA: 6, COLORTYPE_TO_BPP_MAP: { 0: 1, 2: 3, 3: 1, 4: 2, 6: 4 }, GAMMA_DIVISION: 1e5 };
        }, {}], 5: [function(t2, e2, r2) {
          "use strict";
          let i = [];
          !function() {
            for (let t3 = 0; t3 < 256; t3++) {
              let e3 = t3;
              for (let t4 = 0; t4 < 8; t4++)
                1 & e3 ? e3 = 3988292384 ^ e3 >>> 1 : e3 >>>= 1;
              i[t3] = e3;
            }
          }();
          let n = e2.exports = function() {
            this._crc = -1;
          };
          n.prototype.write = function(t3) {
            for (let e3 = 0; e3 < t3.length; e3++)
              this._crc = i[255 & (this._crc ^ t3[e3])] ^ this._crc >>> 8;
            return true;
          }, n.prototype.crc32 = function() {
            return -1 ^ this._crc;
          }, n.crc32 = function(t3) {
            let e3 = -1;
            for (let r3 = 0; r3 < t3.length; r3++)
              e3 = i[255 & (e3 ^ t3[r3])] ^ e3 >>> 8;
            return -1 ^ e3;
          };
        }, {}], 6: [function(t2, e2, r2) {
          (function(r3) {
            (function() {
              "use strict";
              let i = t2("./paeth-predictor");
              let n = { 0: function(t3, e3, r4, i2, n2) {
                for (let a2 = 0; a2 < r4; a2++)
                  i2[n2 + a2] = t3[e3 + a2];
              }, 1: function(t3, e3, r4, i2, n2, a2) {
                for (let o = 0; o < r4; o++) {
                  let r5 = o >= a2 ? t3[e3 + o - a2] : 0, s = t3[e3 + o] - r5;
                  i2[n2 + o] = s;
                }
              }, 2: function(t3, e3, r4, i2, n2) {
                for (let a2 = 0; a2 < r4; a2++) {
                  let o = e3 > 0 ? t3[e3 + a2 - r4] : 0, s = t3[e3 + a2] - o;
                  i2[n2 + a2] = s;
                }
              }, 3: function(t3, e3, r4, i2, n2, a2) {
                for (let o = 0; o < r4; o++) {
                  let s = o >= a2 ? t3[e3 + o - a2] : 0, h = e3 > 0 ? t3[e3 + o - r4] : 0, l = t3[e3 + o] - (s + h >> 1);
                  i2[n2 + o] = l;
                }
              }, 4: function(t3, e3, r4, n2, a2, o) {
                for (let s = 0; s < r4; s++) {
                  let h = s >= o ? t3[e3 + s - o] : 0, l = e3 > 0 ? t3[e3 + s - r4] : 0, f = e3 > 0 && s >= o ? t3[e3 + s - (r4 + o)] : 0, u = t3[e3 + s] - i(h, l, f);
                  n2[a2 + s] = u;
                }
              } }, a = { 0: function(t3, e3, r4) {
                let i2 = 0, n2 = e3 + r4;
                for (let r5 = e3; r5 < n2; r5++)
                  i2 += Math.abs(t3[r5]);
                return i2;
              }, 1: function(t3, e3, r4, i2) {
                let n2 = 0;
                for (let a2 = 0; a2 < r4; a2++) {
                  let r5 = a2 >= i2 ? t3[e3 + a2 - i2] : 0, o = t3[e3 + a2] - r5;
                  n2 += Math.abs(o);
                }
                return n2;
              }, 2: function(t3, e3, r4) {
                let i2 = 0, n2 = e3 + r4;
                for (let a2 = e3; a2 < n2; a2++) {
                  let n3 = e3 > 0 ? t3[a2 - r4] : 0, o = t3[a2] - n3;
                  i2 += Math.abs(o);
                }
                return i2;
              }, 3: function(t3, e3, r4, i2) {
                let n2 = 0;
                for (let a2 = 0; a2 < r4; a2++) {
                  let o = a2 >= i2 ? t3[e3 + a2 - i2] : 0, s = e3 > 0 ? t3[e3 + a2 - r4] : 0, h = t3[e3 + a2] - (o + s >> 1);
                  n2 += Math.abs(h);
                }
                return n2;
              }, 4: function(t3, e3, r4, n2) {
                let a2 = 0;
                for (let o = 0; o < r4; o++) {
                  let s = o >= n2 ? t3[e3 + o - n2] : 0, h = e3 > 0 ? t3[e3 + o - r4] : 0, l = e3 > 0 && o >= n2 ? t3[e3 + o - (r4 + n2)] : 0, f = t3[e3 + o] - i(s, h, l);
                  a2 += Math.abs(f);
                }
                return a2;
              } };
              e2.exports = function(t3, e3, i2, o, s) {
                let h;
                if ("filterType" in o && -1 !== o.filterType) {
                  if ("number" != typeof o.filterType)
                    throw new Error("unrecognised filter types");
                  h = [o.filterType];
                } else
                  h = [0, 1, 2, 3, 4];
                16 === o.bitDepth && (s *= 2);
                let l = e3 * s, f = 0, u = 0, c = r3.alloc((l + 1) * i2), d = h[0];
                for (let e4 = 0; e4 < i2; e4++) {
                  if (h.length > 1) {
                    let e5 = 1 / 0;
                    for (let r4 = 0; r4 < h.length; r4++) {
                      let i3 = a[h[r4]](t3, u, l, s);
                      i3 < e5 && (d = h[r4], e5 = i3);
                    }
                  }
                  c[f] = d, f++, n[d](t3, u, l, c, f, s), f += l, u += l;
                }
                return c;
              };
            }).call(this);
          }).call(this, t2("buffer").Buffer);
        }, { "./paeth-predictor": 15, buffer: 33 }], 7: [function(t2, e2, r2) {
          (function(r3) {
            (function() {
              "use strict";
              let i = t2("util"), n = t2("./chunkstream"), a = t2("./filter-parse"), o = e2.exports = function(t3) {
                n.call(this);
                let e3 = [], i2 = this;
                this._filter = new a(t3, { read: this.read.bind(this), write: function(t4) {
                  e3.push(t4);
                }, complete: function() {
                  i2.emit("complete", r3.concat(e3));
                } }), this._filter.start();
              };
              i.inherits(o, n);
            }).call(this);
          }).call(this, t2("buffer").Buffer);
        }, { "./chunkstream": 3, "./filter-parse": 9, buffer: 33, util: 81 }], 8: [function(t2, e2, r2) {
          (function(e3) {
            (function() {
              "use strict";
              let i = t2("./sync-reader"), n = t2("./filter-parse");
              r2.process = function(t3, r3) {
                let a = [], o = new i(t3);
                return new n(r3, { read: o.read.bind(o), write: function(t4) {
                  a.push(t4);
                }, complete: function() {
                } }).start(), o.process(), e3.concat(a);
              };
            }).call(this);
          }).call(this, t2("buffer").Buffer);
        }, { "./filter-parse": 9, "./sync-reader": 22, buffer: 33 }], 9: [function(t2, e2, r2) {
          (function(r3) {
            (function() {
              "use strict";
              let i = t2("./interlace"), n = t2("./paeth-predictor");
              function a(t3, e3, r4) {
                let i2 = t3 * e3;
                return 8 !== r4 && (i2 = Math.ceil(i2 / (8 / r4))), i2;
              }
              let o = e2.exports = function(t3, e3) {
                let r4 = t3.width, n2 = t3.height, o2 = t3.interlace, s = t3.bpp, h = t3.depth;
                if (this.read = e3.read, this.write = e3.write, this.complete = e3.complete, this._imageIndex = 0, this._images = [], o2) {
                  let t4 = i.getImagePasses(r4, n2);
                  for (let e4 = 0; e4 < t4.length; e4++)
                    this._images.push({ byteWidth: a(t4[e4].width, s, h), height: t4[e4].height, lineIndex: 0 });
                } else
                  this._images.push({ byteWidth: a(r4, s, h), height: n2, lineIndex: 0 });
                this._xComparison = 8 === h ? s : 16 === h ? 2 * s : 1;
              };
              o.prototype.start = function() {
                this.read(this._images[this._imageIndex].byteWidth + 1, this._reverseFilterLine.bind(this));
              }, o.prototype._unFilterType1 = function(t3, e3, r4) {
                let i2 = this._xComparison, n2 = i2 - 1;
                for (let a2 = 0; a2 < r4; a2++) {
                  let r5 = t3[1 + a2], o2 = a2 > n2 ? e3[a2 - i2] : 0;
                  e3[a2] = r5 + o2;
                }
              }, o.prototype._unFilterType2 = function(t3, e3, r4) {
                let i2 = this._lastLine;
                for (let n2 = 0; n2 < r4; n2++) {
                  let r5 = t3[1 + n2], a2 = i2 ? i2[n2] : 0;
                  e3[n2] = r5 + a2;
                }
              }, o.prototype._unFilterType3 = function(t3, e3, r4) {
                let i2 = this._xComparison, n2 = i2 - 1, a2 = this._lastLine;
                for (let o2 = 0; o2 < r4; o2++) {
                  let r5 = t3[1 + o2], s = a2 ? a2[o2] : 0, h = o2 > n2 ? e3[o2 - i2] : 0, l = Math.floor((h + s) / 2);
                  e3[o2] = r5 + l;
                }
              }, o.prototype._unFilterType4 = function(t3, e3, r4) {
                let i2 = this._xComparison, a2 = i2 - 1, o2 = this._lastLine;
                for (let s = 0; s < r4; s++) {
                  let r5 = t3[1 + s], h = o2 ? o2[s] : 0, l = s > a2 ? e3[s - i2] : 0, f = s > a2 && o2 ? o2[s - i2] : 0, u = n(l, h, f);
                  e3[s] = r5 + u;
                }
              }, o.prototype._reverseFilterLine = function(t3) {
                let e3, i2 = t3[0], n2 = this._images[this._imageIndex], a2 = n2.byteWidth;
                if (0 === i2)
                  e3 = t3.slice(1, a2 + 1);
                else
                  switch (e3 = r3.alloc(a2), i2) {
                    case 1:
                      this._unFilterType1(t3, e3, a2);
                      break;
                    case 2:
                      this._unFilterType2(t3, e3, a2);
                      break;
                    case 3:
                      this._unFilterType3(t3, e3, a2);
                      break;
                    case 4:
                      this._unFilterType4(t3, e3, a2);
                      break;
                    default:
                      throw new Error("Unrecognised filter type - " + i2);
                  }
                this.write(e3), n2.lineIndex++, n2.lineIndex >= n2.height ? (this._lastLine = null, this._imageIndex++, n2 = this._images[this._imageIndex]) : this._lastLine = e3, n2 ? this.read(n2.byteWidth + 1, this._reverseFilterLine.bind(this)) : (this._lastLine = null, this.complete());
              };
            }).call(this);
          }).call(this, t2("buffer").Buffer);
        }, { "./interlace": 11, "./paeth-predictor": 15, buffer: 33 }], 10: [function(t2, e2, r2) {
          (function(t3) {
            (function() {
              "use strict";
              e2.exports = function(e3, r3, i = false) {
                let n = r3.depth, a = r3.width, o = r3.height, s = r3.colorType, h = r3.transColor, l = r3.palette, f = e3;
                return 3 === s ? function(t4, e4, r4, i2, n2) {
                  let a2 = 0;
                  for (let o2 = 0; o2 < i2; o2++)
                    for (let i3 = 0; i3 < r4; i3++) {
                      let r5 = n2[t4[a2]];
                      if (!r5)
                        throw new Error("index " + t4[a2] + " not in palette");
                      for (let t5 = 0; t5 < 4; t5++)
                        e4[a2 + t5] = r5[t5];
                      a2 += 4;
                    }
                }(e3, f, a, o, l) : (h && function(t4, e4, r4, i2, n2) {
                  let a2 = 0;
                  for (let o2 = 0; o2 < i2; o2++)
                    for (let i3 = 0; i3 < r4; i3++) {
                      let r5 = false;
                      if (1 === n2.length ? n2[0] === t4[a2] && (r5 = true) : n2[0] === t4[a2] && n2[1] === t4[a2 + 1] && n2[2] === t4[a2 + 2] && (r5 = true), r5)
                        for (let t5 = 0; t5 < 4; t5++)
                          e4[a2 + t5] = 0;
                      a2 += 4;
                    }
                }(e3, f, a, o, h), 8 === n || i || (16 === n && (f = t3.alloc(a * o * 4)), function(t4, e4, r4, i2, n2) {
                  let a2 = Math.pow(2, n2) - 1, o2 = 0;
                  for (let n3 = 0; n3 < i2; n3++)
                    for (let i3 = 0; i3 < r4; i3++) {
                      for (let r5 = 0; r5 < 4; r5++)
                        e4[o2 + r5] = Math.floor(255 * t4[o2 + r5] / a2 + 0.5);
                      o2 += 4;
                    }
                }(e3, f, a, o, n))), f;
              };
            }).call(this);
          }).call(this, t2("buffer").Buffer);
        }, { buffer: 33 }], 11: [function(t2, e2, r2) {
          "use strict";
          let i = [{ x: [0], y: [0] }, { x: [4], y: [0] }, { x: [0, 4], y: [4] }, { x: [2, 6], y: [0, 4] }, { x: [0, 2, 4, 6], y: [2, 6] }, { x: [1, 3, 5, 7], y: [0, 2, 4, 6] }, { x: [0, 1, 2, 3, 4, 5, 6, 7], y: [1, 3, 5, 7] }];
          r2.getImagePasses = function(t3, e3) {
            let r3 = [], n = t3 % 8, a = e3 % 8, o = (t3 - n) / 8, s = (e3 - a) / 8;
            for (let t4 = 0; t4 < i.length; t4++) {
              let e4 = i[t4], h = o * e4.x.length, l = s * e4.y.length;
              for (let t5 = 0; t5 < e4.x.length && e4.x[t5] < n; t5++)
                h++;
              for (let t5 = 0; t5 < e4.y.length && e4.y[t5] < a; t5++)
                l++;
              h > 0 && l > 0 && r3.push({ width: h, height: l, index: t4 });
            }
            return r3;
          }, r2.getInterlaceIterator = function(t3) {
            return function(e3, r3, n) {
              let a = e3 % i[n].x.length, o = (e3 - a) / i[n].x.length * 8 + i[n].x[a], s = r3 % i[n].y.length;
              return 4 * o + ((r3 - s) / i[n].y.length * 8 + i[n].y[s]) * t3 * 4;
            };
          };
        }, {}], 12: [function(t2, e2, r2) {
          (function(r3) {
            (function() {
              "use strict";
              let i = t2("util"), n = t2("stream"), a = t2("./constants"), o = t2("./packer"), s = e2.exports = function(t3) {
                n.call(this);
                let e3 = t3 || {};
                this._packer = new o(e3), this._deflate = this._packer.createDeflate(), this.readable = true;
              };
              i.inherits(s, n), s.prototype.pack = function(t3, e3, i2, n2) {
                this.emit("data", r3.from(a.PNG_SIGNATURE)), this.emit("data", this._packer.packIHDR(e3, i2)), n2 && this.emit("data", this._packer.packGAMA(n2));
                let o2 = this._packer.filterData(t3, e3, i2);
                this._deflate.on("error", this.emit.bind(this, "error")), this._deflate.on("data", (function(t4) {
                  this.emit("data", this._packer.packIDAT(t4));
                }).bind(this)), this._deflate.on("end", (function() {
                  this.emit("data", this._packer.packIEND()), this.emit("end");
                }).bind(this)), this._deflate.end(o2);
              };
            }).call(this);
          }).call(this, t2("buffer").Buffer);
        }, { "./constants": 4, "./packer": 14, buffer: 33, stream: 61, util: 81 }], 13: [function(t2, e2, r2) {
          (function(r3) {
            (function() {
              "use strict";
              let i = true, n = t2("zlib");
              n.deflateSync || (i = false);
              let a = t2("./constants"), o = t2("./packer");
              e2.exports = function(t3, e3) {
                if (!i)
                  throw new Error("To use the sync capability of this library in old node versions, please pin pngjs to v2.3.0");
                let s = new o(e3 || {}), h = [];
                h.push(r3.from(a.PNG_SIGNATURE)), h.push(s.packIHDR(t3.width, t3.height)), t3.gamma && h.push(s.packGAMA(t3.gamma));
                let l = s.filterData(t3.data, t3.width, t3.height), f = n.deflateSync(l, s.getDeflateOptions());
                if (l = null, !f || !f.length)
                  throw new Error("bad png - invalid compressed data response");
                return h.push(s.packIDAT(f)), h.push(s.packIEND()), r3.concat(h);
              };
            }).call(this);
          }).call(this, t2("buffer").Buffer);
        }, { "./constants": 4, "./packer": 14, buffer: 33, zlib: 32 }], 14: [function(t2, e2, r2) {
          (function(r3) {
            (function() {
              "use strict";
              let i = t2("./constants"), n = t2("./crc"), a = t2("./bitpacker"), o = t2("./filter-pack"), s = t2("zlib"), h = e2.exports = function(t3) {
                if (this._options = t3, t3.deflateChunkSize = t3.deflateChunkSize || 32768, t3.deflateLevel = null != t3.deflateLevel ? t3.deflateLevel : 9, t3.deflateStrategy = null != t3.deflateStrategy ? t3.deflateStrategy : 3, t3.inputHasAlpha = null == t3.inputHasAlpha || t3.inputHasAlpha, t3.deflateFactory = t3.deflateFactory || s.createDeflate, t3.bitDepth = t3.bitDepth || 8, t3.colorType = "number" == typeof t3.colorType ? t3.colorType : i.COLORTYPE_COLOR_ALPHA, t3.inputColorType = "number" == typeof t3.inputColorType ? t3.inputColorType : i.COLORTYPE_COLOR_ALPHA, -1 === [i.COLORTYPE_GRAYSCALE, i.COLORTYPE_COLOR, i.COLORTYPE_COLOR_ALPHA, i.COLORTYPE_ALPHA].indexOf(t3.colorType))
                  throw new Error("option color type:" + t3.colorType + " is not supported at present");
                if (-1 === [i.COLORTYPE_GRAYSCALE, i.COLORTYPE_COLOR, i.COLORTYPE_COLOR_ALPHA, i.COLORTYPE_ALPHA].indexOf(t3.inputColorType))
                  throw new Error("option input color type:" + t3.inputColorType + " is not supported at present");
                if (8 !== t3.bitDepth && 16 !== t3.bitDepth)
                  throw new Error("option bit depth:" + t3.bitDepth + " is not supported at present");
              };
              h.prototype.getDeflateOptions = function() {
                return { chunkSize: this._options.deflateChunkSize, level: this._options.deflateLevel, strategy: this._options.deflateStrategy };
              }, h.prototype.createDeflate = function() {
                return this._options.deflateFactory(this.getDeflateOptions());
              }, h.prototype.filterData = function(t3, e3, r4) {
                let n2 = a(t3, e3, r4, this._options), s2 = i.COLORTYPE_TO_BPP_MAP[this._options.colorType];
                return o(n2, e3, r4, this._options, s2);
              }, h.prototype._packChunk = function(t3, e3) {
                let i2 = e3 ? e3.length : 0, a2 = r3.alloc(i2 + 12);
                return a2.writeUInt32BE(i2, 0), a2.writeUInt32BE(t3, 4), e3 && e3.copy(a2, 8), a2.writeInt32BE(n.crc32(a2.slice(4, a2.length - 4)), a2.length - 4), a2;
              }, h.prototype.packGAMA = function(t3) {
                let e3 = r3.alloc(4);
                return e3.writeUInt32BE(Math.floor(t3 * i.GAMMA_DIVISION), 0), this._packChunk(i.TYPE_gAMA, e3);
              }, h.prototype.packIHDR = function(t3, e3) {
                let n2 = r3.alloc(13);
                return n2.writeUInt32BE(t3, 0), n2.writeUInt32BE(e3, 4), n2[8] = this._options.bitDepth, n2[9] = this._options.colorType, n2[10] = 0, n2[11] = 0, n2[12] = 0, this._packChunk(i.TYPE_IHDR, n2);
              }, h.prototype.packIDAT = function(t3) {
                return this._packChunk(i.TYPE_IDAT, t3);
              }, h.prototype.packIEND = function() {
                return this._packChunk(i.TYPE_IEND, null);
              };
            }).call(this);
          }).call(this, t2("buffer").Buffer);
        }, { "./bitpacker": 2, "./constants": 4, "./crc": 5, "./filter-pack": 6, buffer: 33, zlib: 32 }], 15: [function(t2, e2, r2) {
          "use strict";
          e2.exports = function(t3, e3, r3) {
            let i = t3 + e3 - r3, n = Math.abs(i - t3), a = Math.abs(i - e3), o = Math.abs(i - r3);
            return n <= a && n <= o ? t3 : a <= o ? e3 : r3;
          };
        }, {}], 16: [function(t2, e2, r2) {
          "use strict";
          let i = t2("util"), n = t2("zlib"), a = t2("./chunkstream"), o = t2("./filter-parse-async"), s = t2("./parser"), h = t2("./bitmapper"), l = t2("./format-normaliser"), f = e2.exports = function(t3) {
            a.call(this), this._parser = new s(t3, { read: this.read.bind(this), error: this._handleError.bind(this), metadata: this._handleMetaData.bind(this), gamma: this.emit.bind(this, "gamma"), palette: this._handlePalette.bind(this), transColor: this._handleTransColor.bind(this), finished: this._finished.bind(this), inflateData: this._inflateData.bind(this), simpleTransparency: this._simpleTransparency.bind(this), headersFinished: this._headersFinished.bind(this) }), this._options = t3, this.writable = true, this._parser.start();
          };
          i.inherits(f, a), f.prototype._handleError = function(t3) {
            this.emit("error", t3), this.writable = false, this.destroy(), this._inflate && this._inflate.destroy && this._inflate.destroy(), this._filter && (this._filter.destroy(), this._filter.on("error", function() {
            })), this.errord = true;
          }, f.prototype._inflateData = function(t3) {
            if (!this._inflate)
              if (this._bitmapInfo.interlace)
                this._inflate = n.createInflate(), this._inflate.on("error", this.emit.bind(this, "error")), this._filter.on("complete", this._complete.bind(this)), this._inflate.pipe(this._filter);
              else {
                let t4 = (1 + (this._bitmapInfo.width * this._bitmapInfo.bpp * this._bitmapInfo.depth + 7 >> 3)) * this._bitmapInfo.height, e3 = Math.max(t4, n.Z_MIN_CHUNK);
                this._inflate = n.createInflate({ chunkSize: e3 });
                let r3 = t4, i2 = this.emit.bind(this, "error");
                this._inflate.on("error", function(t5) {
                  r3 && i2(t5);
                }), this._filter.on("complete", this._complete.bind(this));
                let a2 = this._filter.write.bind(this._filter);
                this._inflate.on("data", function(t5) {
                  r3 && (t5.length > r3 && (t5 = t5.slice(0, r3)), r3 -= t5.length, a2(t5));
                }), this._inflate.on("end", this._filter.end.bind(this._filter));
              }
            this._inflate.write(t3);
          }, f.prototype._handleMetaData = function(t3) {
            this._metaData = t3, this._bitmapInfo = Object.create(t3), this._filter = new o(this._bitmapInfo);
          }, f.prototype._handleTransColor = function(t3) {
            this._bitmapInfo.transColor = t3;
          }, f.prototype._handlePalette = function(t3) {
            this._bitmapInfo.palette = t3;
          }, f.prototype._simpleTransparency = function() {
            this._metaData.alpha = true;
          }, f.prototype._headersFinished = function() {
            this.emit("metadata", this._metaData);
          }, f.prototype._finished = function() {
            this.errord || (this._inflate ? this._inflate.end() : this.emit("error", "No Inflate block"));
          }, f.prototype._complete = function(t3) {
            if (this.errord)
              return;
            let e3;
            try {
              let r3 = h.dataToBitMap(t3, this._bitmapInfo);
              e3 = l(r3, this._bitmapInfo, this._options.skipRescale), r3 = null;
            } catch (t4) {
              return void this._handleError(t4);
            }
            this.emit("parsed", e3);
          };
        }, { "./bitmapper": 1, "./chunkstream": 3, "./filter-parse-async": 7, "./format-normaliser": 10, "./parser": 18, util: 81, zlib: 32 }], 17: [function(t2, e2, r2) {
          (function(r3) {
            (function() {
              "use strict";
              let i = true, n = t2("zlib"), a = t2("./sync-inflate");
              n.deflateSync || (i = false);
              let o = t2("./sync-reader"), s = t2("./filter-parse-sync"), h = t2("./parser"), l = t2("./bitmapper"), f = t2("./format-normaliser");
              e2.exports = function(t3, e3) {
                if (!i)
                  throw new Error("To use the sync capability of this library in old node versions, please pin pngjs to v2.3.0");
                let u, c, d;
                let p = [];
                let m = new o(t3);
                if (new h(e3, { read: m.read.bind(m), error: function(t4) {
                  u = t4;
                }, metadata: function(t4) {
                  c = t4;
                }, gamma: function(t4) {
                  d = t4;
                }, palette: function(t4) {
                  c.palette = t4;
                }, transColor: function(t4) {
                  c.transColor = t4;
                }, inflateData: function(t4) {
                  p.push(t4);
                }, simpleTransparency: function() {
                  c.alpha = true;
                } }).start(), m.process(), u)
                  throw u;
                let g, b = r3.concat(p);
                if (p.length = 0, c.interlace)
                  g = n.inflateSync(b);
                else {
                  let t4 = (1 + (c.width * c.bpp * c.depth + 7 >> 3)) * c.height;
                  g = a(b, { chunkSize: t4, maxLength: t4 });
                }
                if (b = null, !g || !g.length)
                  throw new Error("bad png - invalid inflate data response");
                let _ = s.process(g, c);
                b = null;
                let y = l.dataToBitMap(_, c);
                _ = null;
                let w = f(y, c, e3.skipRescale);
                return c.data = w, c.gamma = d || 0, c;
              };
            }).call(this);
          }).call(this, t2("buffer").Buffer);
        }, { "./bitmapper": 1, "./filter-parse-sync": 8, "./format-normaliser": 10, "./parser": 18, "./sync-inflate": 21, "./sync-reader": 22, buffer: 33, zlib: 32 }], 18: [function(t2, e2, r2) {
          (function(r3) {
            (function() {
              "use strict";
              let i = t2("./constants"), n = t2("./crc"), a = e2.exports = function(t3, e3) {
                this._options = t3, t3.checkCRC = false !== t3.checkCRC, this._hasIHDR = false, this._hasIEND = false, this._emittedHeadersFinished = false, this._palette = [], this._colorType = 0, this._chunks = {}, this._chunks[i.TYPE_IHDR] = this._handleIHDR.bind(this), this._chunks[i.TYPE_IEND] = this._handleIEND.bind(this), this._chunks[i.TYPE_IDAT] = this._handleIDAT.bind(this), this._chunks[i.TYPE_PLTE] = this._handlePLTE.bind(this), this._chunks[i.TYPE_tRNS] = this._handleTRNS.bind(this), this._chunks[i.TYPE_gAMA] = this._handleGAMA.bind(this), this.read = e3.read, this.error = e3.error, this.metadata = e3.metadata, this.gamma = e3.gamma, this.transColor = e3.transColor, this.palette = e3.palette, this.parsed = e3.parsed, this.inflateData = e3.inflateData, this.finished = e3.finished, this.simpleTransparency = e3.simpleTransparency, this.headersFinished = e3.headersFinished || function() {
                };
              };
              a.prototype.start = function() {
                this.read(i.PNG_SIGNATURE.length, this._parseSignature.bind(this));
              }, a.prototype._parseSignature = function(t3) {
                let e3 = i.PNG_SIGNATURE;
                for (let r4 = 0; r4 < e3.length; r4++)
                  if (t3[r4] !== e3[r4])
                    return void this.error(new Error("Invalid file signature"));
                this.read(8, this._parseChunkBegin.bind(this));
              }, a.prototype._parseChunkBegin = function(t3) {
                let e3 = t3.readUInt32BE(0), a2 = t3.readUInt32BE(4), o = "";
                for (let e4 = 4; e4 < 8; e4++)
                  o += String.fromCharCode(t3[e4]);
                let s = Boolean(32 & t3[4]);
                if (this._hasIHDR || a2 === i.TYPE_IHDR) {
                  if (this._crc = new n(), this._crc.write(r3.from(o)), this._chunks[a2])
                    return this._chunks[a2](e3);
                  s ? this.read(e3 + 4, this._skipChunk.bind(this)) : this.error(new Error("Unsupported critical chunk type " + o));
                } else
                  this.error(new Error("Expected IHDR on beggining"));
              }, a.prototype._skipChunk = function() {
                this.read(8, this._parseChunkBegin.bind(this));
              }, a.prototype._handleChunkEnd = function() {
                this.read(4, this._parseChunkEnd.bind(this));
              }, a.prototype._parseChunkEnd = function(t3) {
                let e3 = t3.readInt32BE(0), r4 = this._crc.crc32();
                this._options.checkCRC && r4 !== e3 ? this.error(new Error("Crc error - " + e3 + " - " + r4)) : this._hasIEND || this.read(8, this._parseChunkBegin.bind(this));
              }, a.prototype._handleIHDR = function(t3) {
                this.read(t3, this._parseIHDR.bind(this));
              }, a.prototype._parseIHDR = function(t3) {
                this._crc.write(t3);
                let e3 = t3.readUInt32BE(0), r4 = t3.readUInt32BE(4), n2 = t3[8], a2 = t3[9], o = t3[10], s = t3[11], h = t3[12];
                if (8 !== n2 && 4 !== n2 && 2 !== n2 && 1 !== n2 && 16 !== n2)
                  return void this.error(new Error("Unsupported bit depth " + n2));
                if (!(a2 in i.COLORTYPE_TO_BPP_MAP))
                  return void this.error(new Error("Unsupported color type"));
                if (0 !== o)
                  return void this.error(new Error("Unsupported compression method"));
                if (0 !== s)
                  return void this.error(new Error("Unsupported filter method"));
                if (0 !== h && 1 !== h)
                  return void this.error(new Error("Unsupported interlace method"));
                this._colorType = a2;
                let l = i.COLORTYPE_TO_BPP_MAP[this._colorType];
                this._hasIHDR = true, this.metadata({ width: e3, height: r4, depth: n2, interlace: Boolean(h), palette: Boolean(a2 & i.COLORTYPE_PALETTE), color: Boolean(a2 & i.COLORTYPE_COLOR), alpha: Boolean(a2 & i.COLORTYPE_ALPHA), bpp: l, colorType: a2 }), this._handleChunkEnd();
              }, a.prototype._handlePLTE = function(t3) {
                this.read(t3, this._parsePLTE.bind(this));
              }, a.prototype._parsePLTE = function(t3) {
                this._crc.write(t3);
                let e3 = Math.floor(t3.length / 3);
                for (let r4 = 0; r4 < e3; r4++)
                  this._palette.push([t3[3 * r4], t3[3 * r4 + 1], t3[3 * r4 + 2], 255]);
                this.palette(this._palette), this._handleChunkEnd();
              }, a.prototype._handleTRNS = function(t3) {
                this.simpleTransparency(), this.read(t3, this._parseTRNS.bind(this));
              }, a.prototype._parseTRNS = function(t3) {
                if (this._crc.write(t3), this._colorType === i.COLORTYPE_PALETTE_COLOR) {
                  if (0 === this._palette.length)
                    return void this.error(new Error("Transparency chunk must be after palette"));
                  if (t3.length > this._palette.length)
                    return void this.error(new Error("More transparent colors than palette size"));
                  for (let e3 = 0; e3 < t3.length; e3++)
                    this._palette[e3][3] = t3[e3];
                  this.palette(this._palette);
                }
                this._colorType === i.COLORTYPE_GRAYSCALE && this.transColor([t3.readUInt16BE(0)]), this._colorType === i.COLORTYPE_COLOR && this.transColor([t3.readUInt16BE(0), t3.readUInt16BE(2), t3.readUInt16BE(4)]), this._handleChunkEnd();
              }, a.prototype._handleGAMA = function(t3) {
                this.read(t3, this._parseGAMA.bind(this));
              }, a.prototype._parseGAMA = function(t3) {
                this._crc.write(t3), this.gamma(t3.readUInt32BE(0) / i.GAMMA_DIVISION), this._handleChunkEnd();
              }, a.prototype._handleIDAT = function(t3) {
                this._emittedHeadersFinished || (this._emittedHeadersFinished = true, this.headersFinished()), this.read(-t3, this._parseIDAT.bind(this, t3));
              }, a.prototype._parseIDAT = function(t3, e3) {
                if (this._crc.write(e3), this._colorType === i.COLORTYPE_PALETTE_COLOR && 0 === this._palette.length)
                  throw new Error("Expected palette not found");
                this.inflateData(e3);
                let r4 = t3 - e3.length;
                r4 > 0 ? this._handleIDAT(r4) : this._handleChunkEnd();
              }, a.prototype._handleIEND = function(t3) {
                this.read(t3, this._parseIEND.bind(this));
              }, a.prototype._parseIEND = function(t3) {
                this._crc.write(t3), this._hasIEND = true, this._handleChunkEnd(), this.finished && this.finished();
              };
            }).call(this);
          }).call(this, t2("buffer").Buffer);
        }, { "./constants": 4, "./crc": 5, buffer: 33 }], 19: [function(t2, e2, r2) {
          "use strict";
          let i = t2("./parser-sync"), n = t2("./packer-sync");
          r2.read = function(t3, e3) {
            return i(t3, e3 || {});
          }, r2.write = function(t3, e3) {
            return n(t3, e3);
          };
        }, { "./packer-sync": 13, "./parser-sync": 17 }], 20: [function(t2, e2, r2) {
          (function(e3, i) {
            (function() {
              "use strict";
              let n = t2("util"), a = t2("stream"), o = t2("./parser-async"), s = t2("./packer-async"), h = t2("./png-sync"), l = r2.PNG = function(t3) {
                a.call(this), t3 = t3 || {}, this.width = 0 | t3.width, this.height = 0 | t3.height, this.data = this.width > 0 && this.height > 0 ? i.alloc(4 * this.width * this.height) : null, t3.fill && this.data && this.data.fill(0), this.gamma = 0, this.readable = this.writable = true, this._parser = new o(t3), this._parser.on("error", this.emit.bind(this, "error")), this._parser.on("close", this._handleClose.bind(this)), this._parser.on("metadata", this._metadata.bind(this)), this._parser.on("gamma", this._gamma.bind(this)), this._parser.on("parsed", (function(t4) {
                  this.data = t4, this.emit("parsed", t4);
                }).bind(this)), this._packer = new s(t3), this._packer.on("data", this.emit.bind(this, "data")), this._packer.on("end", this.emit.bind(this, "end")), this._parser.on("close", this._handleClose.bind(this)), this._packer.on("error", this.emit.bind(this, "error"));
              };
              n.inherits(l, a), l.sync = h, l.prototype.pack = function() {
                return this.data && this.data.length ? (e3.nextTick((function() {
                  this._packer.pack(this.data, this.width, this.height, this.gamma);
                }).bind(this)), this) : (this.emit("error", "No data provided"), this);
              }, l.prototype.parse = function(t3, e4) {
                if (e4) {
                  let t4, r3;
                  t4 = (function(t5) {
                    this.removeListener("error", r3), this.data = t5, e4(null, this);
                  }).bind(this), r3 = (function(r4) {
                    this.removeListener("parsed", t4), e4(r4, null);
                  }).bind(this), this.once("parsed", t4), this.once("error", r3);
                }
                return this.end(t3), this;
              }, l.prototype.write = function(t3) {
                return this._parser.write(t3), true;
              }, l.prototype.end = function(t3) {
                this._parser.end(t3);
              }, l.prototype._metadata = function(t3) {
                this.width = t3.width, this.height = t3.height, this.emit("metadata", t3);
              }, l.prototype._gamma = function(t3) {
                this.gamma = t3;
              }, l.prototype._handleClose = function() {
                this._parser.writable || this._packer.readable || this.emit("close");
              }, l.bitblt = function(t3, e4, r3, i2, n2, a2, o2, s2) {
                if (i2 |= 0, n2 |= 0, a2 |= 0, o2 |= 0, s2 |= 0, (r3 |= 0) > t3.width || i2 > t3.height || r3 + n2 > t3.width || i2 + a2 > t3.height)
                  throw new Error("bitblt reading outside image");
                if (o2 > e4.width || s2 > e4.height || o2 + n2 > e4.width || s2 + a2 > e4.height)
                  throw new Error("bitblt writing outside image");
                for (let h2 = 0; h2 < a2; h2++)
                  t3.data.copy(e4.data, (s2 + h2) * e4.width + o2 << 2, (i2 + h2) * t3.width + r3 << 2, (i2 + h2) * t3.width + r3 + n2 << 2);
              }, l.prototype.bitblt = function(t3, e4, r3, i2, n2, a2, o2) {
                return l.bitblt(this, t3, e4, r3, i2, n2, a2, o2), this;
              }, l.adjustGamma = function(t3) {
                if (t3.gamma) {
                  for (let e4 = 0; e4 < t3.height; e4++)
                    for (let r3 = 0; r3 < t3.width; r3++) {
                      let i2 = t3.width * e4 + r3 << 2;
                      for (let e5 = 0; e5 < 3; e5++) {
                        let r4 = t3.data[i2 + e5] / 255;
                        r4 = Math.pow(r4, 1 / 2.2 / t3.gamma), t3.data[i2 + e5] = Math.round(255 * r4);
                      }
                    }
                  t3.gamma = 0;
                }
              }, l.prototype.adjustGamma = function() {
                l.adjustGamma(this);
              };
            }).call(this);
          }).call(this, t2("_process"), t2("buffer").Buffer);
        }, { "./packer-async": 12, "./parser-async": 16, "./png-sync": 19, _process: 60, buffer: 33, stream: 61, util: 81 }], 21: [function(t2, e2, r2) {
          (function(i, n) {
            (function() {
              "use strict";
              let a = t2("assert").ok, o = t2("zlib"), s = t2("util"), h = t2("buffer").kMaxLength;
              function l(t3) {
                if (!(this instanceof l))
                  return new l(t3);
                t3 && t3.chunkSize < o.Z_MIN_CHUNK && (t3.chunkSize = o.Z_MIN_CHUNK), o.Inflate.call(this, t3), this._offset = void 0 === this._offset ? this._outOffset : this._offset, this._buffer = this._buffer || this._outBuffer, t3 && null != t3.maxLength && (this._maxLength = t3.maxLength);
              }
              function f(t3, e3) {
                e3 && i.nextTick(e3), t3._handle && (t3._handle.close(), t3._handle = null);
              }
              function u(t3, e3) {
                return function(t4, e4) {
                  if ("string" == typeof e4 && (e4 = n.from(e4)), !(e4 instanceof n))
                    throw new TypeError("Not a string or buffer");
                  let r3 = t4._finishFlushFlag;
                  return null == r3 && (r3 = o.Z_FINISH), t4._processChunk(e4, r3);
                }(new l(e3), t3);
              }
              l.prototype._processChunk = function(t3, e3, r3) {
                if ("function" == typeof r3)
                  return o.Inflate._processChunk.call(this, t3, e3, r3);
                let i2, s2, l2 = this, u2 = t3 && t3.length, c = this._chunkSize - this._offset, d = this._maxLength, p = 0, m = [], g = 0;
                function b(t4, e4) {
                  if (l2._hadError)
                    return;
                  let r4 = c - e4;
                  if (a(r4 >= 0, "have should not go down"), r4 > 0) {
                    let t5 = l2._buffer.slice(l2._offset, l2._offset + r4);
                    if (l2._offset += r4, t5.length > d && (t5 = t5.slice(0, d)), m.push(t5), g += t5.length, d -= t5.length, 0 === d)
                      return false;
                  }
                  return (0 === e4 || l2._offset >= l2._chunkSize) && (c = l2._chunkSize, l2._offset = 0, l2._buffer = n.allocUnsafe(l2._chunkSize)), 0 === e4 && (p += u2 - t4, u2 = t4, true);
                }
                this.on("error", function(t4) {
                  i2 = t4;
                }), a(this._handle, "zlib binding closed");
                do {
                  s2 = this._handle.writeSync(e3, t3, p, u2, this._buffer, this._offset, c), s2 = s2 || this._writeState;
                } while (!this._hadError && b(s2[0], s2[1]));
                if (this._hadError)
                  throw i2;
                if (g >= h)
                  throw f(this), new RangeError("Cannot create final Buffer. It would be larger than 0x" + h.toString(16) + " bytes");
                let _ = n.concat(m, g);
                return f(this), _;
              }, s.inherits(l, o.Inflate), e2.exports = r2 = u, r2.Inflate = l, r2.createInflate = function(t3) {
                return new l(t3);
              }, r2.inflateSync = u;
            }).call(this);
          }).call(this, t2("_process"), t2("buffer").Buffer);
        }, { _process: 60, assert: 23, buffer: 33, util: 81, zlib: 32 }], 22: [function(t2, e2, r2) {
          "use strict";
          let i = e2.exports = function(t3) {
            this._buffer = t3, this._reads = [];
          };
          i.prototype.read = function(t3, e3) {
            this._reads.push({ length: Math.abs(t3), allowLess: t3 < 0, func: e3 });
          }, i.prototype.process = function() {
            for (; this._reads.length > 0 && this._buffer.length; ) {
              let t3 = this._reads[0];
              if (!this._buffer.length || !(this._buffer.length >= t3.length || t3.allowLess))
                break;
              {
                this._reads.shift();
                let e3 = this._buffer;
                this._buffer = e3.slice(t3.length), t3.func.call(this, e3.slice(0, t3.length));
              }
            }
            if (this._reads.length > 0)
              throw new Error("There are some read requests waitng on finished stream");
            if (this._buffer.length > 0)
              throw new Error("unrecognised content at end of stream");
          };
        }, {}], 23: [function(t2, e2, i) {
          (function(r2) {
            (function() {
              "use strict";
              function i2(t3, e3) {
                if (t3 === e3)
                  return 0;
                for (var r3 = t3.length, i3 = e3.length, n2 = 0, a2 = Math.min(r3, i3); n2 < a2; ++n2)
                  if (t3[n2] !== e3[n2]) {
                    r3 = t3[n2], i3 = e3[n2];
                    break;
                  }
                return r3 < i3 ? -1 : i3 < r3 ? 1 : 0;
              }
              function n(t3) {
                return r2.Buffer && "function" == typeof r2.Buffer.isBuffer ? r2.Buffer.isBuffer(t3) : !(null == t3 || !t3._isBuffer);
              }
              var a = t2("util/"), o = Object.prototype.hasOwnProperty, s = Array.prototype.slice, h = "foo" === (function() {
              }).name;
              function l(t3) {
                return Object.prototype.toString.call(t3);
              }
              function f(t3) {
                return !n(t3) && "function" == typeof r2.ArrayBuffer && ("function" == typeof ArrayBuffer.isView ? ArrayBuffer.isView(t3) : !!t3 && (t3 instanceof DataView || !!(t3.buffer && t3.buffer instanceof ArrayBuffer)));
              }
              var u = e2.exports = b, c = /\s*function\s+([^\(\s]*)\s*/;
              function d(t3) {
                if (a.isFunction(t3)) {
                  if (h)
                    return t3.name;
                  var e3 = t3.toString().match(c);
                  return e3 && e3[1];
                }
              }
              function p(t3, e3) {
                return "string" == typeof t3 ? t3.length < e3 ? t3 : t3.slice(0, e3) : t3;
              }
              function m(t3) {
                if (h || !a.isFunction(t3))
                  return a.inspect(t3);
                var e3 = d(t3);
                return "[Function" + (e3 ? ": " + e3 : "") + "]";
              }
              function g(t3, e3, r3, i3, n2) {
                throw new u.AssertionError({ message: r3, actual: t3, expected: e3, operator: i3, stackStartFunction: n2 });
              }
              function b(t3, e3) {
                t3 || g(t3, true, e3, "==", u.ok);
              }
              function _(t3, e3, r3, o2) {
                if (t3 === e3)
                  return true;
                if (n(t3) && n(e3))
                  return 0 === i2(t3, e3);
                if (a.isDate(t3) && a.isDate(e3))
                  return t3.getTime() === e3.getTime();
                if (a.isRegExp(t3) && a.isRegExp(e3))
                  return t3.source === e3.source && t3.global === e3.global && t3.multiline === e3.multiline && t3.lastIndex === e3.lastIndex && t3.ignoreCase === e3.ignoreCase;
                if (null !== t3 && "object" == typeof t3 || null !== e3 && "object" == typeof e3) {
                  if (f(t3) && f(e3) && l(t3) === l(e3) && !(t3 instanceof Float32Array || t3 instanceof Float64Array))
                    return 0 === i2(new Uint8Array(t3.buffer), new Uint8Array(e3.buffer));
                  if (n(t3) !== n(e3))
                    return false;
                  var h2 = (o2 = o2 || { actual: [], expected: [] }).actual.indexOf(t3);
                  return -1 !== h2 && h2 === o2.expected.indexOf(e3) || (o2.actual.push(t3), o2.expected.push(e3), function(t4, e4, r4, i3) {
                    if (null == t4 || null == e4)
                      return false;
                    if (a.isPrimitive(t4) || a.isPrimitive(e4))
                      return t4 === e4;
                    if (r4 && Object.getPrototypeOf(t4) !== Object.getPrototypeOf(e4))
                      return false;
                    var n2 = y(t4), o3 = y(e4);
                    if (n2 && !o3 || !n2 && o3)
                      return false;
                    if (n2)
                      return _(t4 = s.call(t4), e4 = s.call(e4), r4);
                    var h3, l2, f2 = x(t4), u2 = x(e4);
                    if (f2.length !== u2.length)
                      return false;
                    for (f2.sort(), u2.sort(), l2 = f2.length - 1; l2 >= 0; l2--)
                      if (f2[l2] !== u2[l2])
                        return false;
                    for (l2 = f2.length - 1; l2 >= 0; l2--)
                      if (!_(t4[h3 = f2[l2]], e4[h3], r4, i3))
                        return false;
                    return true;
                  }(t3, e3, r3, o2));
                }
                return r3 ? t3 === e3 : t3 == e3;
              }
              function y(t3) {
                return "[object Arguments]" == Object.prototype.toString.call(t3);
              }
              function w(t3, e3) {
                if (!t3 || !e3)
                  return false;
                if ("[object RegExp]" == Object.prototype.toString.call(e3))
                  return e3.test(t3);
                try {
                  if (t3 instanceof e3)
                    return true;
                } catch (t4) {
                }
                return !Error.isPrototypeOf(e3) && true === e3.call({}, t3);
              }
              function v(t3, e3, r3, i3) {
                var n2;
                if ("function" != typeof e3)
                  throw new TypeError('"block" argument must be a function');
                "string" == typeof r3 && (i3 = r3, r3 = null), n2 = function(t4) {
                  var e4;
                  try {
                    t4();
                  } catch (t5) {
                    e4 = t5;
                  }
                  return e4;
                }(e3), i3 = (r3 && r3.name ? " (" + r3.name + ")." : ".") + (i3 ? " " + i3 : "."), t3 && !n2 && g(n2, r3, "Missing expected exception" + i3);
                var o2 = "string" == typeof i3, s2 = !t3 && n2 && !r3;
                if ((!t3 && a.isError(n2) && o2 && w(n2, r3) || s2) && g(n2, r3, "Got unwanted exception" + i3), t3 && n2 && r3 && !w(n2, r3) || !t3 && n2)
                  throw n2;
              }
              u.AssertionError = function(t3) {
                this.name = "AssertionError", this.actual = t3.actual, this.expected = t3.expected, this.operator = t3.operator, t3.message ? (this.message = t3.message, this.generatedMessage = false) : (this.message = function(t4) {
                  return p(m(t4.actual), 128) + " " + t4.operator + " " + p(m(t4.expected), 128);
                }(this), this.generatedMessage = true);
                var e3 = t3.stackStartFunction || g;
                if (Error.captureStackTrace)
                  Error.captureStackTrace(this, e3);
                else {
                  var r3 = new Error();
                  if (r3.stack) {
                    var i3 = r3.stack, n2 = d(e3), a2 = i3.indexOf("\n" + n2);
                    if (a2 >= 0) {
                      var o2 = i3.indexOf("\n", a2 + 1);
                      i3 = i3.substring(o2 + 1);
                    }
                    this.stack = i3;
                  }
                }
              }, a.inherits(u.AssertionError, Error), u.fail = g, u.ok = b, u.equal = function(t3, e3, r3) {
                t3 != e3 && g(t3, e3, r3, "==", u.equal);
              }, u.notEqual = function(t3, e3, r3) {
                t3 == e3 && g(t3, e3, r3, "!=", u.notEqual);
              }, u.deepEqual = function(t3, e3, r3) {
                _(t3, e3, false) || g(t3, e3, r3, "deepEqual", u.deepEqual);
              }, u.deepStrictEqual = function(t3, e3, r3) {
                _(t3, e3, true) || g(t3, e3, r3, "deepStrictEqual", u.deepStrictEqual);
              }, u.notDeepEqual = function(t3, e3, r3) {
                _(t3, e3, false) && g(t3, e3, r3, "notDeepEqual", u.notDeepEqual);
              }, u.notDeepStrictEqual = function t3(e3, r3, i3) {
                _(e3, r3, true) && g(e3, r3, i3, "notDeepStrictEqual", t3);
              }, u.strictEqual = function(t3, e3, r3) {
                t3 !== e3 && g(t3, e3, r3, "===", u.strictEqual);
              }, u.notStrictEqual = function(t3, e3, r3) {
                t3 === e3 && g(t3, e3, r3, "!==", u.notStrictEqual);
              }, u.throws = function(t3, e3, r3) {
                v(true, t3, e3, r3);
              }, u.doesNotThrow = function(t3, e3, r3) {
                v(false, t3, e3, r3);
              }, u.ifError = function(t3) {
                if (t3)
                  throw t3;
              };
              var x = Object.keys || function(t3) {
                var e3 = [];
                for (var r3 in t3)
                  o.call(t3, r3) && e3.push(r3);
                return e3;
              };
            }).call(this);
          }).call(this, void 0 !== r.g ? r.g : "undefined" != typeof self ? self : "undefined" != typeof window ? window : {});
        }, { "util/": 26 }], 24: [function(t2, e2, r2) {
          "function" == typeof Object.create ? e2.exports = function(t3, e3) {
            t3.super_ = e3, t3.prototype = Object.create(e3.prototype, { constructor: { value: t3, enumerable: false, writable: true, configurable: true } });
          } : e2.exports = function(t3, e3) {
            t3.super_ = e3;
            var r3 = function() {
            };
            r3.prototype = e3.prototype, t3.prototype = new r3(), t3.prototype.constructor = t3;
          };
        }, {}], 25: [function(t2, e2, r2) {
          e2.exports = function(t3) {
            return t3 && "object" == typeof t3 && "function" == typeof t3.copy && "function" == typeof t3.fill && "function" == typeof t3.readUInt8;
          };
        }, {}], 26: [function(t2, e2, i) {
          (function(e3, r2) {
            (function() {
              var n = /%[sdj%]/g;
              i.format = function(t3) {
                if (!b(t3)) {
                  for (var e4 = [], r3 = 0; r3 < arguments.length; r3++)
                    e4.push(s(arguments[r3]));
                  return e4.join(" ");
                }
                r3 = 1;
                for (var i2 = arguments, a2 = i2.length, o2 = String(t3).replace(n, function(t4) {
                  if ("%%" === t4)
                    return "%";
                  if (r3 >= a2)
                    return t4;
                  switch (t4) {
                    case "%s":
                      return String(i2[r3++]);
                    case "%d":
                      return Number(i2[r3++]);
                    case "%j":
                      try {
                        return JSON.stringify(i2[r3++]);
                      } catch (t5) {
                        return "[Circular]";
                      }
                    default:
                      return t4;
                  }
                }), h2 = i2[r3]; r3 < a2; h2 = i2[++r3])
                  m(h2) || !w(h2) ? o2 += " " + h2 : o2 += " " + s(h2);
                return o2;
              }, i.deprecate = function(t3, n2) {
                if (_(r2.process))
                  return function() {
                    return i.deprecate(t3, n2).apply(this, arguments);
                  };
                if (true === e3.noDeprecation)
                  return t3;
                var a2 = false;
                return function() {
                  if (!a2) {
                    if (e3.throwDeprecation)
                      throw new Error(n2);
                    e3.traceDeprecation ? console.trace(n2) : console.error(n2), a2 = true;
                  }
                  return t3.apply(this, arguments);
                };
              };
              var a, o = {};
              function s(t3, e4) {
                var r3 = { seen: [], stylize: l };
                return arguments.length >= 3 && (r3.depth = arguments[2]), arguments.length >= 4 && (r3.colors = arguments[3]), p(e4) ? r3.showHidden = e4 : e4 && i._extend(r3, e4), _(r3.showHidden) && (r3.showHidden = false), _(r3.depth) && (r3.depth = 2), _(r3.colors) && (r3.colors = false), _(r3.customInspect) && (r3.customInspect = true), r3.colors && (r3.stylize = h), f(r3, t3, r3.depth);
              }
              function h(t3, e4) {
                var r3 = s.styles[e4];
                return r3 ? "\x1B[" + s.colors[r3][0] + "m" + t3 + "\x1B[" + s.colors[r3][1] + "m" : t3;
              }
              function l(t3, e4) {
                return t3;
              }
              function f(t3, e4, r3) {
                if (t3.customInspect && e4 && E(e4.inspect) && e4.inspect !== i.inspect && (!e4.constructor || e4.constructor.prototype !== e4)) {
                  var n2 = e4.inspect(r3, t3);
                  return b(n2) || (n2 = f(t3, n2, r3)), n2;
                }
                var a2 = function(t4, e5) {
                  if (_(e5))
                    return t4.stylize("undefined", "undefined");
                  if (b(e5)) {
                    var r4 = "'" + JSON.stringify(e5).replace(/^"|"$/g, "").replace(/'/g, "\\'").replace(/\\"/g, '"') + "'";
                    return t4.stylize(r4, "string");
                  }
                  return g(e5) ? t4.stylize("" + e5, "number") : p(e5) ? t4.stylize("" + e5, "boolean") : m(e5) ? t4.stylize("null", "null") : void 0;
                }(t3, e4);
                if (a2)
                  return a2;
                var o2 = Object.keys(e4), s2 = function(t4) {
                  var e5 = {};
                  return t4.forEach(function(t5, r4) {
                    e5[t5] = true;
                  }), e5;
                }(o2);
                if (t3.showHidden && (o2 = Object.getOwnPropertyNames(e4)), x(e4) && (o2.indexOf("message") >= 0 || o2.indexOf("description") >= 0))
                  return u(e4);
                if (0 === o2.length) {
                  if (E(e4)) {
                    var h2 = e4.name ? ": " + e4.name : "";
                    return t3.stylize("[Function" + h2 + "]", "special");
                  }
                  if (y(e4))
                    return t3.stylize(RegExp.prototype.toString.call(e4), "regexp");
                  if (v(e4))
                    return t3.stylize(Date.prototype.toString.call(e4), "date");
                  if (x(e4))
                    return u(e4);
                }
                var l2, w2 = "", k2 = false, S2 = ["{", "}"];
                return d(e4) && (k2 = true, S2 = ["[", "]"]), E(e4) && (w2 = " [Function" + (e4.name ? ": " + e4.name : "") + "]"), y(e4) && (w2 = " " + RegExp.prototype.toString.call(e4)), v(e4) && (w2 = " " + Date.prototype.toUTCString.call(e4)), x(e4) && (w2 = " " + u(e4)), 0 !== o2.length || k2 && 0 != e4.length ? r3 < 0 ? y(e4) ? t3.stylize(RegExp.prototype.toString.call(e4), "regexp") : t3.stylize("[Object]", "special") : (t3.seen.push(e4), l2 = k2 ? function(t4, e5, r4, i2, n3) {
                  for (var a3 = [], o3 = 0, s3 = e5.length; o3 < s3; ++o3)
                    A(e5, String(o3)) ? a3.push(c(t4, e5, r4, i2, String(o3), true)) : a3.push("");
                  return n3.forEach(function(n4) {
                    n4.match(/^\d+$/) || a3.push(c(t4, e5, r4, i2, n4, true));
                  }), a3;
                }(t3, e4, r3, s2, o2) : o2.map(function(i2) {
                  return c(t3, e4, r3, s2, i2, k2);
                }), t3.seen.pop(), function(t4, e5, r4) {
                  return t4.reduce(function(t5, e6) {
                    return e6.indexOf("\n"), t5 + e6.replace(/\u001b\[\d\d?m/g, "").length + 1;
                  }, 0) > 60 ? r4[0] + ("" === e5 ? "" : e5 + "\n ") + " " + t4.join(",\n  ") + " " + r4[1] : r4[0] + e5 + " " + t4.join(", ") + " " + r4[1];
                }(l2, w2, S2)) : S2[0] + w2 + S2[1];
              }
              function u(t3) {
                return "[" + Error.prototype.toString.call(t3) + "]";
              }
              function c(t3, e4, r3, i2, n2, a2) {
                var o2, s2, h2;
                if ((h2 = Object.getOwnPropertyDescriptor(e4, n2) || { value: e4[n2] }).get ? s2 = h2.set ? t3.stylize("[Getter/Setter]", "special") : t3.stylize("[Getter]", "special") : h2.set && (s2 = t3.stylize("[Setter]", "special")), A(i2, n2) || (o2 = "[" + n2 + "]"), s2 || (t3.seen.indexOf(h2.value) < 0 ? (s2 = m(r3) ? f(t3, h2.value, null) : f(t3, h2.value, r3 - 1)).indexOf("\n") > -1 && (s2 = a2 ? s2.split("\n").map(function(t4) {
                  return "  " + t4;
                }).join("\n").substr(2) : "\n" + s2.split("\n").map(function(t4) {
                  return "   " + t4;
                }).join("\n")) : s2 = t3.stylize("[Circular]", "special")), _(o2)) {
                  if (a2 && n2.match(/^\d+$/))
                    return s2;
                  (o2 = JSON.stringify("" + n2)).match(/^"([a-zA-Z_][a-zA-Z_0-9]*)"$/) ? (o2 = o2.substr(1, o2.length - 2), o2 = t3.stylize(o2, "name")) : (o2 = o2.replace(/'/g, "\\'").replace(/\\"/g, '"').replace(/(^"|"$)/g, "'"), o2 = t3.stylize(o2, "string"));
                }
                return o2 + ": " + s2;
              }
              function d(t3) {
                return Array.isArray(t3);
              }
              function p(t3) {
                return "boolean" == typeof t3;
              }
              function m(t3) {
                return null === t3;
              }
              function g(t3) {
                return "number" == typeof t3;
              }
              function b(t3) {
                return "string" == typeof t3;
              }
              function _(t3) {
                return void 0 === t3;
              }
              function y(t3) {
                return w(t3) && "[object RegExp]" === k(t3);
              }
              function w(t3) {
                return "object" == typeof t3 && null !== t3;
              }
              function v(t3) {
                return w(t3) && "[object Date]" === k(t3);
              }
              function x(t3) {
                return w(t3) && ("[object Error]" === k(t3) || t3 instanceof Error);
              }
              function E(t3) {
                return "function" == typeof t3;
              }
              function k(t3) {
                return Object.prototype.toString.call(t3);
              }
              function S(t3) {
                return t3 < 10 ? "0" + t3.toString(10) : t3.toString(10);
              }
              i.debuglog = function(t3) {
                if (_(a) && (a = e3.env.NODE_DEBUG || ""), t3 = t3.toUpperCase(), !o[t3])
                  if (new RegExp("\\b" + t3 + "\\b", "i").test(a)) {
                    var r3 = e3.pid;
                    o[t3] = function() {
                      var e4 = i.format.apply(i, arguments);
                      console.error("%s %d: %s", t3, r3, e4);
                    };
                  } else
                    o[t3] = function() {
                    };
                return o[t3];
              }, i.inspect = s, s.colors = { bold: [1, 22], italic: [3, 23], underline: [4, 24], inverse: [7, 27], white: [37, 39], grey: [90, 39], black: [30, 39], blue: [34, 39], cyan: [36, 39], green: [32, 39], magenta: [35, 39], red: [31, 39], yellow: [33, 39] }, s.styles = { special: "cyan", number: "yellow", boolean: "yellow", undefined: "grey", null: "bold", string: "green", date: "magenta", regexp: "red" }, i.isArray = d, i.isBoolean = p, i.isNull = m, i.isNullOrUndefined = function(t3) {
                return null == t3;
              }, i.isNumber = g, i.isString = b, i.isSymbol = function(t3) {
                return "symbol" == typeof t3;
              }, i.isUndefined = _, i.isRegExp = y, i.isObject = w, i.isDate = v, i.isError = x, i.isFunction = E, i.isPrimitive = function(t3) {
                return null === t3 || "boolean" == typeof t3 || "number" == typeof t3 || "string" == typeof t3 || "symbol" == typeof t3 || void 0 === t3;
              }, i.isBuffer = t2("./support/isBuffer");
              var M = ["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"];
              function A(t3, e4) {
                return Object.prototype.hasOwnProperty.call(t3, e4);
              }
              i.log = function() {
                var t3, e4;
                console.log("%s - %s", (t3 = /* @__PURE__ */ new Date(), e4 = [S(t3.getHours()), S(t3.getMinutes()), S(t3.getSeconds())].join(":"), [t3.getDate(), M[t3.getMonth()], e4].join(" ")), i.format.apply(i, arguments));
              }, i.inherits = t2("inherits"), i._extend = function(t3, e4) {
                if (!e4 || !w(e4))
                  return t3;
                for (var r3 = Object.keys(e4), i2 = r3.length; i2--; )
                  t3[r3[i2]] = e4[r3[i2]];
                return t3;
              };
            }).call(this);
          }).call(this, t2("_process"), void 0 !== r.g ? r.g : "undefined" != typeof self ? self : "undefined" != typeof window ? window : {});
        }, { "./support/isBuffer": 25, _process: 60, inherits: 24 }], 27: [function(t2, e2, i) {
          (function(r2) {
            (function() {
              "use strict";
              var i2 = t2("array-filter");
              e2.exports = function() {
                return i2(["BigInt64Array", "BigUint64Array", "Float32Array", "Float64Array", "Int16Array", "Int32Array", "Int8Array", "Uint16Array", "Uint32Array", "Uint8Array", "Uint8ClampedArray"], function(t3) {
                  return "function" == typeof r2[t3];
                });
              };
            }).call(this);
          }).call(this, void 0 !== r.g ? r.g : "undefined" != typeof self ? self : "undefined" != typeof window ? window : {});
        }, { "array-filter": 28 }], 28: [function(t2, e2, r2) {
          e2.exports = function(t3, e3, r3) {
            if (t3.filter)
              return t3.filter(e3, r3);
            if (null == t3)
              throw new TypeError();
            if ("function" != typeof e3)
              throw new TypeError();
            for (var n = [], a = 0; a < t3.length; a++)
              if (i.call(t3, a)) {
                var o = t3[a];
                e3.call(r3, o, a, t3) && n.push(o);
              }
            return n;
          };
          var i = Object.prototype.hasOwnProperty;
        }, {}], 29: [function(t2, e2, r2) {
          "use strict";
          r2.byteLength = function(t3) {
            var e3 = l(t3), r3 = e3[0], i2 = e3[1];
            return 3 * (r3 + i2) / 4 - i2;
          }, r2.toByteArray = function(t3) {
            var e3, r3, i2 = l(t3), o2 = i2[0], s2 = i2[1], h2 = new a(function(t4, e4, r4) {
              return 3 * (e4 + r4) / 4 - r4;
            }(0, o2, s2)), f2 = 0, u = s2 > 0 ? o2 - 4 : o2;
            for (r3 = 0; r3 < u; r3 += 4)
              e3 = n[t3.charCodeAt(r3)] << 18 | n[t3.charCodeAt(r3 + 1)] << 12 | n[t3.charCodeAt(r3 + 2)] << 6 | n[t3.charCodeAt(r3 + 3)], h2[f2++] = e3 >> 16 & 255, h2[f2++] = e3 >> 8 & 255, h2[f2++] = 255 & e3;
            return 2 === s2 && (e3 = n[t3.charCodeAt(r3)] << 2 | n[t3.charCodeAt(r3 + 1)] >> 4, h2[f2++] = 255 & e3), 1 === s2 && (e3 = n[t3.charCodeAt(r3)] << 10 | n[t3.charCodeAt(r3 + 1)] << 4 | n[t3.charCodeAt(r3 + 2)] >> 2, h2[f2++] = e3 >> 8 & 255, h2[f2++] = 255 & e3), h2;
          }, r2.fromByteArray = function(t3) {
            for (var e3, r3 = t3.length, n2 = r3 % 3, a2 = [], o2 = 16383, s2 = 0, h2 = r3 - n2; s2 < h2; s2 += o2)
              a2.push(f(t3, s2, s2 + o2 > h2 ? h2 : s2 + o2));
            return 1 === n2 ? (e3 = t3[r3 - 1], a2.push(i[e3 >> 2] + i[e3 << 4 & 63] + "==")) : 2 === n2 && (e3 = (t3[r3 - 2] << 8) + t3[r3 - 1], a2.push(i[e3 >> 10] + i[e3 >> 4 & 63] + i[e3 << 2 & 63] + "=")), a2.join("");
          };
          for (var i = [], n = [], a = "undefined" != typeof Uint8Array ? Uint8Array : Array, o = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/", s = 0, h = o.length; s < h; ++s)
            i[s] = o[s], n[o.charCodeAt(s)] = s;
          function l(t3) {
            var e3 = t3.length;
            if (e3 % 4 > 0)
              throw new Error("Invalid string. Length must be a multiple of 4");
            var r3 = t3.indexOf("=");
            return -1 === r3 && (r3 = e3), [r3, r3 === e3 ? 0 : 4 - r3 % 4];
          }
          function f(t3, e3, r3) {
            for (var n2, a2 = [], o2 = e3; o2 < r3; o2 += 3)
              n2 = (t3[o2] << 16 & 16711680) + (t3[o2 + 1] << 8 & 65280) + (255 & t3[o2 + 2]), a2.push(i[(s2 = n2) >> 18 & 63] + i[s2 >> 12 & 63] + i[s2 >> 6 & 63] + i[63 & s2]);
            var s2;
            return a2.join("");
          }
          n["-".charCodeAt(0)] = 62, n["_".charCodeAt(0)] = 63;
        }, {}], 30: [function(t2, e2, r2) {
        }, {}], 31: [function(t2, e2, r2) {
          (function(e3, i) {
            (function() {
              "use strict";
              var n = t2("assert"), a = t2("pako/lib/zlib/zstream"), o = t2("pako/lib/zlib/deflate.js"), s = t2("pako/lib/zlib/inflate.js"), h = t2("pako/lib/zlib/constants");
              for (var l in h)
                r2[l] = h[l];
              r2.NONE = 0, r2.DEFLATE = 1, r2.INFLATE = 2, r2.GZIP = 3, r2.GUNZIP = 4, r2.DEFLATERAW = 5, r2.INFLATERAW = 6, r2.UNZIP = 7;
              function f(t3) {
                if ("number" != typeof t3 || t3 < r2.DEFLATE || t3 > r2.UNZIP)
                  throw new TypeError("Bad argument");
                this.dictionary = null, this.err = 0, this.flush = 0, this.init_done = false, this.level = 0, this.memLevel = 0, this.mode = t3, this.strategy = 0, this.windowBits = 0, this.write_in_progress = false, this.pending_close = false, this.gzip_id_bytes_read = 0;
              }
              f.prototype.close = function() {
                this.write_in_progress ? this.pending_close = true : (this.pending_close = false, n(this.init_done, "close before init"), n(this.mode <= r2.UNZIP), this.mode === r2.DEFLATE || this.mode === r2.GZIP || this.mode === r2.DEFLATERAW ? o.deflateEnd(this.strm) : this.mode !== r2.INFLATE && this.mode !== r2.GUNZIP && this.mode !== r2.INFLATERAW && this.mode !== r2.UNZIP || s.inflateEnd(this.strm), this.mode = r2.NONE, this.dictionary = null);
              }, f.prototype.write = function(t3, e4, r3, i2, n2, a2, o2) {
                return this._write(true, t3, e4, r3, i2, n2, a2, o2);
              }, f.prototype.writeSync = function(t3, e4, r3, i2, n2, a2, o2) {
                return this._write(false, t3, e4, r3, i2, n2, a2, o2);
              }, f.prototype._write = function(t3, a2, o2, s2, h2, l2, f2, u) {
                if (n.equal(arguments.length, 8), n(this.init_done, "write before init"), n(this.mode !== r2.NONE, "already finalized"), n.equal(false, this.write_in_progress, "write already in progress"), n.equal(false, this.pending_close, "close is pending"), this.write_in_progress = true, n.equal(false, void 0 === a2, "must provide flush value"), this.write_in_progress = true, a2 !== r2.Z_NO_FLUSH && a2 !== r2.Z_PARTIAL_FLUSH && a2 !== r2.Z_SYNC_FLUSH && a2 !== r2.Z_FULL_FLUSH && a2 !== r2.Z_FINISH && a2 !== r2.Z_BLOCK)
                  throw new Error("Invalid flush value");
                if (null == o2 && (o2 = i.alloc(0), h2 = 0, s2 = 0), this.strm.avail_in = h2, this.strm.input = o2, this.strm.next_in = s2, this.strm.avail_out = u, this.strm.output = l2, this.strm.next_out = f2, this.flush = a2, !t3)
                  return this._process(), this._checkError() ? this._afterSync() : void 0;
                var c = this;
                return e3.nextTick(function() {
                  c._process(), c._after();
                }), this;
              }, f.prototype._afterSync = function() {
                var t3 = this.strm.avail_out, e4 = this.strm.avail_in;
                return this.write_in_progress = false, [e4, t3];
              }, f.prototype._process = function() {
                var t3 = null;
                switch (this.mode) {
                  case r2.DEFLATE:
                  case r2.GZIP:
                  case r2.DEFLATERAW:
                    this.err = o.deflate(this.strm, this.flush);
                    break;
                  case r2.UNZIP:
                    switch (this.strm.avail_in > 0 && (t3 = this.strm.next_in), this.gzip_id_bytes_read) {
                      case 0:
                        if (null === t3)
                          break;
                        if (31 !== this.strm.input[t3]) {
                          this.mode = r2.INFLATE;
                          break;
                        }
                        if (this.gzip_id_bytes_read = 1, t3++, 1 === this.strm.avail_in)
                          break;
                      case 1:
                        if (null === t3)
                          break;
                        139 === this.strm.input[t3] ? (this.gzip_id_bytes_read = 2, this.mode = r2.GUNZIP) : this.mode = r2.INFLATE;
                        break;
                      default:
                        throw new Error("invalid number of gzip magic number bytes read");
                    }
                  case r2.INFLATE:
                  case r2.GUNZIP:
                  case r2.INFLATERAW:
                    for (this.err = s.inflate(this.strm, this.flush), this.err === r2.Z_NEED_DICT && this.dictionary && (this.err = s.inflateSetDictionary(this.strm, this.dictionary), this.err === r2.Z_OK ? this.err = s.inflate(this.strm, this.flush) : this.err === r2.Z_DATA_ERROR && (this.err = r2.Z_NEED_DICT)); this.strm.avail_in > 0 && this.mode === r2.GUNZIP && this.err === r2.Z_STREAM_END && 0 !== this.strm.next_in[0]; )
                      this.reset(), this.err = s.inflate(this.strm, this.flush);
                    break;
                  default:
                    throw new Error("Unknown mode " + this.mode);
                }
              }, f.prototype._checkError = function() {
                switch (this.err) {
                  case r2.Z_OK:
                  case r2.Z_BUF_ERROR:
                    if (0 !== this.strm.avail_out && this.flush === r2.Z_FINISH)
                      return this._error("unexpected end of file"), false;
                    break;
                  case r2.Z_STREAM_END:
                    break;
                  case r2.Z_NEED_DICT:
                    return null == this.dictionary ? this._error("Missing dictionary") : this._error("Bad dictionary"), false;
                  default:
                    return this._error("Zlib error"), false;
                }
                return true;
              }, f.prototype._after = function() {
                if (this._checkError()) {
                  var t3 = this.strm.avail_out, e4 = this.strm.avail_in;
                  this.write_in_progress = false, this.callback(e4, t3), this.pending_close && this.close();
                }
              }, f.prototype._error = function(t3) {
                this.strm.msg && (t3 = this.strm.msg), this.onerror(t3, this.err), this.write_in_progress = false, this.pending_close && this.close();
              }, f.prototype.init = function(t3, e4, i2, a2, o2) {
                n(4 === arguments.length || 5 === arguments.length, "init(windowBits, level, memLevel, strategy, [dictionary])"), n(t3 >= 8 && t3 <= 15, "invalid windowBits"), n(e4 >= -1 && e4 <= 9, "invalid compression level"), n(i2 >= 1 && i2 <= 9, "invalid memlevel"), n(a2 === r2.Z_FILTERED || a2 === r2.Z_HUFFMAN_ONLY || a2 === r2.Z_RLE || a2 === r2.Z_FIXED || a2 === r2.Z_DEFAULT_STRATEGY, "invalid strategy"), this._init(e4, t3, i2, a2, o2), this._setDictionary();
              }, f.prototype.params = function() {
                throw new Error("deflateParams Not supported");
              }, f.prototype.reset = function() {
                this._reset(), this._setDictionary();
              }, f.prototype._init = function(t3, e4, i2, n2, h2) {
                switch (this.level = t3, this.windowBits = e4, this.memLevel = i2, this.strategy = n2, this.flush = r2.Z_NO_FLUSH, this.err = r2.Z_OK, this.mode !== r2.GZIP && this.mode !== r2.GUNZIP || (this.windowBits += 16), this.mode === r2.UNZIP && (this.windowBits += 32), this.mode !== r2.DEFLATERAW && this.mode !== r2.INFLATERAW || (this.windowBits = -1 * this.windowBits), this.strm = new a(), this.mode) {
                  case r2.DEFLATE:
                  case r2.GZIP:
                  case r2.DEFLATERAW:
                    this.err = o.deflateInit2(this.strm, this.level, r2.Z_DEFLATED, this.windowBits, this.memLevel, this.strategy);
                    break;
                  case r2.INFLATE:
                  case r2.GUNZIP:
                  case r2.INFLATERAW:
                  case r2.UNZIP:
                    this.err = s.inflateInit2(this.strm, this.windowBits);
                    break;
                  default:
                    throw new Error("Unknown mode " + this.mode);
                }
                this.err !== r2.Z_OK && this._error("Init error"), this.dictionary = h2, this.write_in_progress = false, this.init_done = true;
              }, f.prototype._setDictionary = function() {
                if (null != this.dictionary) {
                  switch (this.err = r2.Z_OK, this.mode) {
                    case r2.DEFLATE:
                    case r2.DEFLATERAW:
                      this.err = o.deflateSetDictionary(this.strm, this.dictionary);
                  }
                  this.err !== r2.Z_OK && this._error("Failed to set dictionary");
                }
              }, f.prototype._reset = function() {
                switch (this.err = r2.Z_OK, this.mode) {
                  case r2.DEFLATE:
                  case r2.DEFLATERAW:
                  case r2.GZIP:
                    this.err = o.deflateReset(this.strm);
                    break;
                  case r2.INFLATE:
                  case r2.INFLATERAW:
                  case r2.GUNZIP:
                    this.err = s.inflateReset(this.strm);
                }
                this.err !== r2.Z_OK && this._error("Failed to reset stream");
              }, r2.Zlib = f;
            }).call(this);
          }).call(this, t2("_process"), t2("buffer").Buffer);
        }, { _process: 60, assert: 23, buffer: 33, "pako/lib/zlib/constants": 51, "pako/lib/zlib/deflate.js": 53, "pako/lib/zlib/inflate.js": 55, "pako/lib/zlib/zstream": 59 }], 32: [function(t2, e2, r2) {
          (function(e3) {
            (function() {
              "use strict";
              var i = t2("buffer").Buffer, n = t2("stream").Transform, a = t2("./binding"), o = t2("util"), s = t2("assert").ok, h = t2("buffer").kMaxLength, l = "Cannot create final Buffer. It would be larger than 0x" + h.toString(16) + " bytes";
              a.Z_MIN_WINDOWBITS = 8, a.Z_MAX_WINDOWBITS = 15, a.Z_DEFAULT_WINDOWBITS = 15, a.Z_MIN_CHUNK = 64, a.Z_MAX_CHUNK = 1 / 0, a.Z_DEFAULT_CHUNK = 16384, a.Z_MIN_MEMLEVEL = 1, a.Z_MAX_MEMLEVEL = 9, a.Z_DEFAULT_MEMLEVEL = 8, a.Z_MIN_LEVEL = -1, a.Z_MAX_LEVEL = 9, a.Z_DEFAULT_LEVEL = a.Z_DEFAULT_COMPRESSION;
              for (var f = Object.keys(a), u = 0; u < f.length; u++) {
                var c = f[u];
                c.match(/^Z/) && Object.defineProperty(r2, c, { enumerable: true, value: a[c], writable: false });
              }
              for (var d = { Z_OK: a.Z_OK, Z_STREAM_END: a.Z_STREAM_END, Z_NEED_DICT: a.Z_NEED_DICT, Z_ERRNO: a.Z_ERRNO, Z_STREAM_ERROR: a.Z_STREAM_ERROR, Z_DATA_ERROR: a.Z_DATA_ERROR, Z_MEM_ERROR: a.Z_MEM_ERROR, Z_BUF_ERROR: a.Z_BUF_ERROR, Z_VERSION_ERROR: a.Z_VERSION_ERROR }, p = Object.keys(d), m = 0; m < p.length; m++) {
                var g = p[m];
                d[d[g]] = g;
              }
              function b(t3, e4, r3) {
                var n2 = [], a2 = 0;
                function o2() {
                  for (var e5; null !== (e5 = t3.read()); )
                    n2.push(e5), a2 += e5.length;
                  t3.once("readable", o2);
                }
                function s2() {
                  var e5, o3 = null;
                  a2 >= h ? o3 = new RangeError(l) : e5 = i.concat(n2, a2), n2 = [], t3.close(), r3(o3, e5);
                }
                t3.on("error", function(e5) {
                  t3.removeListener("end", s2), t3.removeListener("readable", o2), r3(e5);
                }), t3.on("end", s2), t3.end(e4), o2();
              }
              function _(t3, e4) {
                if ("string" == typeof e4 && (e4 = i.from(e4)), !i.isBuffer(e4))
                  throw new TypeError("Not a string or buffer");
                var r3 = t3._finishFlushFlag;
                return t3._processChunk(e4, r3);
              }
              function y(t3) {
                if (!(this instanceof y))
                  return new y(t3);
                A.call(this, t3, a.DEFLATE);
              }
              function w(t3) {
                if (!(this instanceof w))
                  return new w(t3);
                A.call(this, t3, a.INFLATE);
              }
              function v(t3) {
                if (!(this instanceof v))
                  return new v(t3);
                A.call(this, t3, a.GZIP);
              }
              function x(t3) {
                if (!(this instanceof x))
                  return new x(t3);
                A.call(this, t3, a.GUNZIP);
              }
              function E(t3) {
                if (!(this instanceof E))
                  return new E(t3);
                A.call(this, t3, a.DEFLATERAW);
              }
              function k(t3) {
                if (!(this instanceof k))
                  return new k(t3);
                A.call(this, t3, a.INFLATERAW);
              }
              function S(t3) {
                if (!(this instanceof S))
                  return new S(t3);
                A.call(this, t3, a.UNZIP);
              }
              function M(t3) {
                return t3 === a.Z_NO_FLUSH || t3 === a.Z_PARTIAL_FLUSH || t3 === a.Z_SYNC_FLUSH || t3 === a.Z_FULL_FLUSH || t3 === a.Z_FINISH || t3 === a.Z_BLOCK;
              }
              function A(t3, e4) {
                var o2 = this;
                if (this._opts = t3 = t3 || {}, this._chunkSize = t3.chunkSize || r2.Z_DEFAULT_CHUNK, n.call(this, t3), t3.flush && !M(t3.flush))
                  throw new Error("Invalid flush flag: " + t3.flush);
                if (t3.finishFlush && !M(t3.finishFlush))
                  throw new Error("Invalid flush flag: " + t3.finishFlush);
                if (this._flushFlag = t3.flush || a.Z_NO_FLUSH, this._finishFlushFlag = void 0 !== t3.finishFlush ? t3.finishFlush : a.Z_FINISH, t3.chunkSize && (t3.chunkSize < r2.Z_MIN_CHUNK || t3.chunkSize > r2.Z_MAX_CHUNK))
                  throw new Error("Invalid chunk size: " + t3.chunkSize);
                if (t3.windowBits && (t3.windowBits < r2.Z_MIN_WINDOWBITS || t3.windowBits > r2.Z_MAX_WINDOWBITS))
                  throw new Error("Invalid windowBits: " + t3.windowBits);
                if (t3.level && (t3.level < r2.Z_MIN_LEVEL || t3.level > r2.Z_MAX_LEVEL))
                  throw new Error("Invalid compression level: " + t3.level);
                if (t3.memLevel && (t3.memLevel < r2.Z_MIN_MEMLEVEL || t3.memLevel > r2.Z_MAX_MEMLEVEL))
                  throw new Error("Invalid memLevel: " + t3.memLevel);
                if (t3.strategy && t3.strategy != r2.Z_FILTERED && t3.strategy != r2.Z_HUFFMAN_ONLY && t3.strategy != r2.Z_RLE && t3.strategy != r2.Z_FIXED && t3.strategy != r2.Z_DEFAULT_STRATEGY)
                  throw new Error("Invalid strategy: " + t3.strategy);
                if (t3.dictionary && !i.isBuffer(t3.dictionary))
                  throw new Error("Invalid dictionary: it should be a Buffer instance");
                this._handle = new a.Zlib(e4);
                var s2 = this;
                this._hadError = false, this._handle.onerror = function(t4, e5) {
                  I(s2), s2._hadError = true;
                  var i2 = new Error(t4);
                  i2.errno = e5, i2.code = r2.codes[e5], s2.emit("error", i2);
                };
                var h2 = r2.Z_DEFAULT_COMPRESSION;
                "number" == typeof t3.level && (h2 = t3.level);
                var l2 = r2.Z_DEFAULT_STRATEGY;
                "number" == typeof t3.strategy && (l2 = t3.strategy), this._handle.init(t3.windowBits || r2.Z_DEFAULT_WINDOWBITS, h2, t3.memLevel || r2.Z_DEFAULT_MEMLEVEL, l2, t3.dictionary), this._buffer = i.allocUnsafe(this._chunkSize), this._offset = 0, this._level = h2, this._strategy = l2, this.once("end", this.close), Object.defineProperty(this, "_closed", { get: function() {
                  return !o2._handle;
                }, configurable: true, enumerable: true });
              }
              function I(t3, r3) {
                r3 && e3.nextTick(r3), t3._handle && (t3._handle.close(), t3._handle = null);
              }
              function B(t3) {
                t3.emit("close");
              }
              Object.defineProperty(r2, "codes", { enumerable: true, value: Object.freeze(d), writable: false }), r2.Deflate = y, r2.Inflate = w, r2.Gzip = v, r2.Gunzip = x, r2.DeflateRaw = E, r2.InflateRaw = k, r2.Unzip = S, r2.createDeflate = function(t3) {
                return new y(t3);
              }, r2.createInflate = function(t3) {
                return new w(t3);
              }, r2.createDeflateRaw = function(t3) {
                return new E(t3);
              }, r2.createInflateRaw = function(t3) {
                return new k(t3);
              }, r2.createGzip = function(t3) {
                return new v(t3);
              }, r2.createGunzip = function(t3) {
                return new x(t3);
              }, r2.createUnzip = function(t3) {
                return new S(t3);
              }, r2.deflate = function(t3, e4, r3) {
                return "function" == typeof e4 && (r3 = e4, e4 = {}), b(new y(e4), t3, r3);
              }, r2.deflateSync = function(t3, e4) {
                return _(new y(e4), t3);
              }, r2.gzip = function(t3, e4, r3) {
                return "function" == typeof e4 && (r3 = e4, e4 = {}), b(new v(e4), t3, r3);
              }, r2.gzipSync = function(t3, e4) {
                return _(new v(e4), t3);
              }, r2.deflateRaw = function(t3, e4, r3) {
                return "function" == typeof e4 && (r3 = e4, e4 = {}), b(new E(e4), t3, r3);
              }, r2.deflateRawSync = function(t3, e4) {
                return _(new E(e4), t3);
              }, r2.unzip = function(t3, e4, r3) {
                return "function" == typeof e4 && (r3 = e4, e4 = {}), b(new S(e4), t3, r3);
              }, r2.unzipSync = function(t3, e4) {
                return _(new S(e4), t3);
              }, r2.inflate = function(t3, e4, r3) {
                return "function" == typeof e4 && (r3 = e4, e4 = {}), b(new w(e4), t3, r3);
              }, r2.inflateSync = function(t3, e4) {
                return _(new w(e4), t3);
              }, r2.gunzip = function(t3, e4, r3) {
                return "function" == typeof e4 && (r3 = e4, e4 = {}), b(new x(e4), t3, r3);
              }, r2.gunzipSync = function(t3, e4) {
                return _(new x(e4), t3);
              }, r2.inflateRaw = function(t3, e4, r3) {
                return "function" == typeof e4 && (r3 = e4, e4 = {}), b(new k(e4), t3, r3);
              }, r2.inflateRawSync = function(t3, e4) {
                return _(new k(e4), t3);
              }, o.inherits(A, n), A.prototype.params = function(t3, i2, n2) {
                if (t3 < r2.Z_MIN_LEVEL || t3 > r2.Z_MAX_LEVEL)
                  throw new RangeError("Invalid compression level: " + t3);
                if (i2 != r2.Z_FILTERED && i2 != r2.Z_HUFFMAN_ONLY && i2 != r2.Z_RLE && i2 != r2.Z_FIXED && i2 != r2.Z_DEFAULT_STRATEGY)
                  throw new TypeError("Invalid strategy: " + i2);
                if (this._level !== t3 || this._strategy !== i2) {
                  var o2 = this;
                  this.flush(a.Z_SYNC_FLUSH, function() {
                    s(o2._handle, "zlib binding closed"), o2._handle.params(t3, i2), o2._hadError || (o2._level = t3, o2._strategy = i2, n2 && n2());
                  });
                } else
                  e3.nextTick(n2);
              }, A.prototype.reset = function() {
                return s(this._handle, "zlib binding closed"), this._handle.reset();
              }, A.prototype._flush = function(t3) {
                this._transform(i.alloc(0), "", t3);
              }, A.prototype.flush = function(t3, r3) {
                var n2 = this, o2 = this._writableState;
                ("function" == typeof t3 || void 0 === t3 && !r3) && (r3 = t3, t3 = a.Z_FULL_FLUSH), o2.ended ? r3 && e3.nextTick(r3) : o2.ending ? r3 && this.once("end", r3) : o2.needDrain ? r3 && this.once("drain", function() {
                  return n2.flush(t3, r3);
                }) : (this._flushFlag = t3, this.write(i.alloc(0), "", r3));
              }, A.prototype.close = function(t3) {
                I(this, t3), e3.nextTick(B, this);
              }, A.prototype._transform = function(t3, e4, r3) {
                var n2, o2 = this._writableState, s2 = (o2.ending || o2.ended) && (!t3 || o2.length === t3.length);
                return null === t3 || i.isBuffer(t3) ? this._handle ? (s2 ? n2 = this._finishFlushFlag : (n2 = this._flushFlag, t3.length >= o2.length && (this._flushFlag = this._opts.flush || a.Z_NO_FLUSH)), void this._processChunk(t3, n2, r3)) : r3(new Error("zlib binding closed")) : r3(new Error("invalid input"));
              }, A.prototype._processChunk = function(t3, e4, r3) {
                var n2 = t3 && t3.length, a2 = this._chunkSize - this._offset, o2 = 0, f2 = this, u2 = "function" == typeof r3;
                if (!u2) {
                  var c2, d2 = [], p2 = 0;
                  this.on("error", function(t4) {
                    c2 = t4;
                  }), s(this._handle, "zlib binding closed");
                  do {
                    var m2 = this._handle.writeSync(e4, t3, o2, n2, this._buffer, this._offset, a2);
                  } while (!this._hadError && _2(m2[0], m2[1]));
                  if (this._hadError)
                    throw c2;
                  if (p2 >= h)
                    throw I(this), new RangeError(l);
                  var g2 = i.concat(d2, p2);
                  return I(this), g2;
                }
                s(this._handle, "zlib binding closed");
                var b2 = this._handle.write(e4, t3, o2, n2, this._buffer, this._offset, a2);
                function _2(h2, l2) {
                  if (this && (this.buffer = null, this.callback = null), !f2._hadError) {
                    var c3 = a2 - l2;
                    if (s(c3 >= 0, "have should not go down"), c3 > 0) {
                      var m3 = f2._buffer.slice(f2._offset, f2._offset + c3);
                      f2._offset += c3, u2 ? f2.push(m3) : (d2.push(m3), p2 += m3.length);
                    }
                    if ((0 === l2 || f2._offset >= f2._chunkSize) && (a2 = f2._chunkSize, f2._offset = 0, f2._buffer = i.allocUnsafe(f2._chunkSize)), 0 === l2) {
                      if (o2 += n2 - h2, n2 = h2, !u2)
                        return true;
                      var g3 = f2._handle.write(e4, t3, o2, n2, f2._buffer, f2._offset, f2._chunkSize);
                      return g3.callback = _2, void (g3.buffer = t3);
                    }
                    if (!u2)
                      return false;
                    r3();
                  }
                }
                b2.buffer = t3, b2.callback = _2;
              }, o.inherits(y, A), o.inherits(w, A), o.inherits(v, A), o.inherits(x, A), o.inherits(E, A), o.inherits(k, A), o.inherits(S, A);
            }).call(this);
          }).call(this, t2("_process"));
        }, { "./binding": 31, _process: 60, assert: 23, buffer: 33, stream: 61, util: 81 }], 33: [function(t2, e2, r2) {
          (function(e3) {
            (function() {
              "use strict";
              var e4 = t2("base64-js"), i = t2("ieee754");
              r2.Buffer = o, r2.SlowBuffer = function(t3) {
                return +t3 != t3 && (t3 = 0), o.alloc(+t3);
              }, r2.INSPECT_MAX_BYTES = 50;
              var n = 2147483647;
              function a(t3) {
                if (t3 > n)
                  throw new RangeError('The value "' + t3 + '" is invalid for option "size"');
                var e5 = new Uint8Array(t3);
                return e5.__proto__ = o.prototype, e5;
              }
              function o(t3, e5, r3) {
                if ("number" == typeof t3) {
                  if ("string" == typeof e5)
                    throw new TypeError('The "string" argument must be of type string. Received type number');
                  return l(t3);
                }
                return s(t3, e5, r3);
              }
              function s(t3, e5, r3) {
                if ("string" == typeof t3)
                  return function(t4, e6) {
                    if ("string" == typeof e6 && "" !== e6 || (e6 = "utf8"), !o.isEncoding(e6))
                      throw new TypeError("Unknown encoding: " + e6);
                    var r4 = 0 | c(t4, e6), i3 = a(r4), n3 = i3.write(t4, e6);
                    return n3 !== r4 && (i3 = i3.slice(0, n3)), i3;
                  }(t3, e5);
                if (ArrayBuffer.isView(t3))
                  return f(t3);
                if (null == t3)
                  throw TypeError("The first argument must be one of type string, Buffer, ArrayBuffer, Array, or Array-like Object. Received type " + typeof t3);
                if (N(t3, ArrayBuffer) || t3 && N(t3.buffer, ArrayBuffer))
                  return function(t4, e6, r4) {
                    if (e6 < 0 || t4.byteLength < e6)
                      throw new RangeError('"offset" is outside of buffer bounds');
                    if (t4.byteLength < e6 + (r4 || 0))
                      throw new RangeError('"length" is outside of buffer bounds');
                    var i3;
                    return (i3 = void 0 === e6 && void 0 === r4 ? new Uint8Array(t4) : void 0 === r4 ? new Uint8Array(t4, e6) : new Uint8Array(t4, e6, r4)).__proto__ = o.prototype, i3;
                  }(t3, e5, r3);
                if ("number" == typeof t3)
                  throw new TypeError('The "value" argument must not be of type number. Received type number');
                var i2 = t3.valueOf && t3.valueOf();
                if (null != i2 && i2 !== t3)
                  return o.from(i2, e5, r3);
                var n2 = function(t4) {
                  if (o.isBuffer(t4)) {
                    var e6 = 0 | u(t4.length), r4 = a(e6);
                    return 0 === r4.length || t4.copy(r4, 0, 0, e6), r4;
                  }
                  return void 0 !== t4.length ? "number" != typeof t4.length || F(t4.length) ? a(0) : f(t4) : "Buffer" === t4.type && Array.isArray(t4.data) ? f(t4.data) : void 0;
                }(t3);
                if (n2)
                  return n2;
                if ("undefined" != typeof Symbol && null != Symbol.toPrimitive && "function" == typeof t3[Symbol.toPrimitive])
                  return o.from(t3[Symbol.toPrimitive]("string"), e5, r3);
                throw new TypeError("The first argument must be one of type string, Buffer, ArrayBuffer, Array, or Array-like Object. Received type " + typeof t3);
              }
              function h(t3) {
                if ("number" != typeof t3)
                  throw new TypeError('"size" argument must be of type number');
                if (t3 < 0)
                  throw new RangeError('The value "' + t3 + '" is invalid for option "size"');
              }
              function l(t3) {
                return h(t3), a(t3 < 0 ? 0 : 0 | u(t3));
              }
              function f(t3) {
                for (var e5 = t3.length < 0 ? 0 : 0 | u(t3.length), r3 = a(e5), i2 = 0; i2 < e5; i2 += 1)
                  r3[i2] = 255 & t3[i2];
                return r3;
              }
              function u(t3) {
                if (t3 >= n)
                  throw new RangeError("Attempt to allocate Buffer larger than maximum size: 0x" + n.toString(16) + " bytes");
                return 0 | t3;
              }
              function c(t3, e5) {
                if (o.isBuffer(t3))
                  return t3.length;
                if (ArrayBuffer.isView(t3) || N(t3, ArrayBuffer))
                  return t3.byteLength;
                if ("string" != typeof t3)
                  throw new TypeError('The "string" argument must be one of type string, Buffer, or ArrayBuffer. Received type ' + typeof t3);
                var r3 = t3.length, i2 = arguments.length > 2 && true === arguments[2];
                if (!i2 && 0 === r3)
                  return 0;
                for (var n2 = false; ; )
                  switch (e5) {
                    case "ascii":
                    case "latin1":
                    case "binary":
                      return r3;
                    case "utf8":
                    case "utf-8":
                      return U(t3).length;
                    case "ucs2":
                    case "ucs-2":
                    case "utf16le":
                    case "utf-16le":
                      return 2 * r3;
                    case "hex":
                      return r3 >>> 1;
                    case "base64":
                      return z(t3).length;
                    default:
                      if (n2)
                        return i2 ? -1 : U(t3).length;
                      e5 = ("" + e5).toLowerCase(), n2 = true;
                  }
              }
              function d(t3, e5, r3) {
                var i2 = false;
                if ((void 0 === e5 || e5 < 0) && (e5 = 0), e5 > this.length)
                  return "";
                if ((void 0 === r3 || r3 > this.length) && (r3 = this.length), r3 <= 0)
                  return "";
                if ((r3 >>>= 0) <= (e5 >>>= 0))
                  return "";
                for (t3 || (t3 = "utf8"); ; )
                  switch (t3) {
                    case "hex":
                      return I(this, e5, r3);
                    case "utf8":
                    case "utf-8":
                      return k(this, e5, r3);
                    case "ascii":
                      return M(this, e5, r3);
                    case "latin1":
                    case "binary":
                      return A(this, e5, r3);
                    case "base64":
                      return E(this, e5, r3);
                    case "ucs2":
                    case "ucs-2":
                    case "utf16le":
                    case "utf-16le":
                      return B(this, e5, r3);
                    default:
                      if (i2)
                        throw new TypeError("Unknown encoding: " + t3);
                      t3 = (t3 + "").toLowerCase(), i2 = true;
                  }
              }
              function p(t3, e5, r3) {
                var i2 = t3[e5];
                t3[e5] = t3[r3], t3[r3] = i2;
              }
              function m(t3, e5, r3, i2, n2) {
                if (0 === t3.length)
                  return -1;
                if ("string" == typeof r3 ? (i2 = r3, r3 = 0) : r3 > 2147483647 ? r3 = 2147483647 : r3 < -2147483648 && (r3 = -2147483648), F(r3 = +r3) && (r3 = n2 ? 0 : t3.length - 1), r3 < 0 && (r3 = t3.length + r3), r3 >= t3.length) {
                  if (n2)
                    return -1;
                  r3 = t3.length - 1;
                } else if (r3 < 0) {
                  if (!n2)
                    return -1;
                  r3 = 0;
                }
                if ("string" == typeof e5 && (e5 = o.from(e5, i2)), o.isBuffer(e5))
                  return 0 === e5.length ? -1 : g(t3, e5, r3, i2, n2);
                if ("number" == typeof e5)
                  return e5 &= 255, "function" == typeof Uint8Array.prototype.indexOf ? n2 ? Uint8Array.prototype.indexOf.call(t3, e5, r3) : Uint8Array.prototype.lastIndexOf.call(t3, e5, r3) : g(t3, [e5], r3, i2, n2);
                throw new TypeError("val must be string, number or Buffer");
              }
              function g(t3, e5, r3, i2, n2) {
                var a2, o2 = 1, s2 = t3.length, h2 = e5.length;
                if (void 0 !== i2 && ("ucs2" === (i2 = String(i2).toLowerCase()) || "ucs-2" === i2 || "utf16le" === i2 || "utf-16le" === i2)) {
                  if (t3.length < 2 || e5.length < 2)
                    return -1;
                  o2 = 2, s2 /= 2, h2 /= 2, r3 /= 2;
                }
                function l2(t4, e6) {
                  return 1 === o2 ? t4[e6] : t4.readUInt16BE(e6 * o2);
                }
                if (n2) {
                  var f2 = -1;
                  for (a2 = r3; a2 < s2; a2++)
                    if (l2(t3, a2) === l2(e5, -1 === f2 ? 0 : a2 - f2)) {
                      if (-1 === f2 && (f2 = a2), a2 - f2 + 1 === h2)
                        return f2 * o2;
                    } else
                      -1 !== f2 && (a2 -= a2 - f2), f2 = -1;
                } else
                  for (r3 + h2 > s2 && (r3 = s2 - h2), a2 = r3; a2 >= 0; a2--) {
                    for (var u2 = true, c2 = 0; c2 < h2; c2++)
                      if (l2(t3, a2 + c2) !== l2(e5, c2)) {
                        u2 = false;
                        break;
                      }
                    if (u2)
                      return a2;
                  }
                return -1;
              }
              function b(t3, e5, r3, i2) {
                r3 = Number(r3) || 0;
                var n2 = t3.length - r3;
                i2 ? (i2 = Number(i2)) > n2 && (i2 = n2) : i2 = n2;
                var a2 = e5.length;
                i2 > a2 / 2 && (i2 = a2 / 2);
                for (var o2 = 0; o2 < i2; ++o2) {
                  var s2 = parseInt(e5.substr(2 * o2, 2), 16);
                  if (F(s2))
                    return o2;
                  t3[r3 + o2] = s2;
                }
                return o2;
              }
              function _(t3, e5, r3, i2) {
                return D(U(e5, t3.length - r3), t3, r3, i2);
              }
              function y(t3, e5, r3, i2) {
                return D(function(t4) {
                  for (var e6 = [], r4 = 0; r4 < t4.length; ++r4)
                    e6.push(255 & t4.charCodeAt(r4));
                  return e6;
                }(e5), t3, r3, i2);
              }
              function w(t3, e5, r3, i2) {
                return y(t3, e5, r3, i2);
              }
              function v(t3, e5, r3, i2) {
                return D(z(e5), t3, r3, i2);
              }
              function x(t3, e5, r3, i2) {
                return D(function(t4, e6) {
                  for (var r4, i3, n2, a2 = [], o2 = 0; o2 < t4.length && !((e6 -= 2) < 0); ++o2)
                    i3 = (r4 = t4.charCodeAt(o2)) >> 8, n2 = r4 % 256, a2.push(n2), a2.push(i3);
                  return a2;
                }(e5, t3.length - r3), t3, r3, i2);
              }
              function E(t3, r3, i2) {
                return 0 === r3 && i2 === t3.length ? e4.fromByteArray(t3) : e4.fromByteArray(t3.slice(r3, i2));
              }
              function k(t3, e5, r3) {
                r3 = Math.min(t3.length, r3);
                for (var i2 = [], n2 = e5; n2 < r3; ) {
                  var a2, o2, s2, h2, l2 = t3[n2], f2 = null, u2 = l2 > 239 ? 4 : l2 > 223 ? 3 : l2 > 191 ? 2 : 1;
                  if (n2 + u2 <= r3)
                    switch (u2) {
                      case 1:
                        l2 < 128 && (f2 = l2);
                        break;
                      case 2:
                        128 == (192 & (a2 = t3[n2 + 1])) && (h2 = (31 & l2) << 6 | 63 & a2) > 127 && (f2 = h2);
                        break;
                      case 3:
                        a2 = t3[n2 + 1], o2 = t3[n2 + 2], 128 == (192 & a2) && 128 == (192 & o2) && (h2 = (15 & l2) << 12 | (63 & a2) << 6 | 63 & o2) > 2047 && (h2 < 55296 || h2 > 57343) && (f2 = h2);
                        break;
                      case 4:
                        a2 = t3[n2 + 1], o2 = t3[n2 + 2], s2 = t3[n2 + 3], 128 == (192 & a2) && 128 == (192 & o2) && 128 == (192 & s2) && (h2 = (15 & l2) << 18 | (63 & a2) << 12 | (63 & o2) << 6 | 63 & s2) > 65535 && h2 < 1114112 && (f2 = h2);
                    }
                  null === f2 ? (f2 = 65533, u2 = 1) : f2 > 65535 && (f2 -= 65536, i2.push(f2 >>> 10 & 1023 | 55296), f2 = 56320 | 1023 & f2), i2.push(f2), n2 += u2;
                }
                return function(t4) {
                  var e6 = t4.length;
                  if (e6 <= S)
                    return String.fromCharCode.apply(String, t4);
                  for (var r4 = "", i3 = 0; i3 < e6; )
                    r4 += String.fromCharCode.apply(String, t4.slice(i3, i3 += S));
                  return r4;
                }(i2);
              }
              r2.kMaxLength = n, o.TYPED_ARRAY_SUPPORT = function() {
                try {
                  var t3 = new Uint8Array(1);
                  return t3.__proto__ = { __proto__: Uint8Array.prototype, foo: function() {
                    return 42;
                  } }, 42 === t3.foo();
                } catch (t4) {
                  return false;
                }
              }(), o.TYPED_ARRAY_SUPPORT || "undefined" == typeof console || "function" != typeof console.error || console.error("This browser lacks typed array (Uint8Array) support which is required by `buffer` v5.x. Use `buffer` v4.x if you require old browser support."), Object.defineProperty(o.prototype, "parent", { enumerable: true, get: function() {
                if (o.isBuffer(this))
                  return this.buffer;
              } }), Object.defineProperty(o.prototype, "offset", { enumerable: true, get: function() {
                if (o.isBuffer(this))
                  return this.byteOffset;
              } }), "undefined" != typeof Symbol && null != Symbol.species && o[Symbol.species] === o && Object.defineProperty(o, Symbol.species, { value: null, configurable: true, enumerable: false, writable: false }), o.poolSize = 8192, o.from = function(t3, e5, r3) {
                return s(t3, e5, r3);
              }, o.prototype.__proto__ = Uint8Array.prototype, o.__proto__ = Uint8Array, o.alloc = function(t3, e5, r3) {
                return function(t4, e6, r4) {
                  return h(t4), t4 <= 0 ? a(t4) : void 0 !== e6 ? "string" == typeof r4 ? a(t4).fill(e6, r4) : a(t4).fill(e6) : a(t4);
                }(t3, e5, r3);
              }, o.allocUnsafe = function(t3) {
                return l(t3);
              }, o.allocUnsafeSlow = function(t3) {
                return l(t3);
              }, o.isBuffer = function(t3) {
                return null != t3 && true === t3._isBuffer && t3 !== o.prototype;
              }, o.compare = function(t3, e5) {
                if (N(t3, Uint8Array) && (t3 = o.from(t3, t3.offset, t3.byteLength)), N(e5, Uint8Array) && (e5 = o.from(e5, e5.offset, e5.byteLength)), !o.isBuffer(t3) || !o.isBuffer(e5))
                  throw new TypeError('The "buf1", "buf2" arguments must be one of type Buffer or Uint8Array');
                if (t3 === e5)
                  return 0;
                for (var r3 = t3.length, i2 = e5.length, n2 = 0, a2 = Math.min(r3, i2); n2 < a2; ++n2)
                  if (t3[n2] !== e5[n2]) {
                    r3 = t3[n2], i2 = e5[n2];
                    break;
                  }
                return r3 < i2 ? -1 : i2 < r3 ? 1 : 0;
              }, o.isEncoding = function(t3) {
                switch (String(t3).toLowerCase()) {
                  case "hex":
                  case "utf8":
                  case "utf-8":
                  case "ascii":
                  case "latin1":
                  case "binary":
                  case "base64":
                  case "ucs2":
                  case "ucs-2":
                  case "utf16le":
                  case "utf-16le":
                    return true;
                  default:
                    return false;
                }
              }, o.concat = function(t3, e5) {
                if (!Array.isArray(t3))
                  throw new TypeError('"list" argument must be an Array of Buffers');
                if (0 === t3.length)
                  return o.alloc(0);
                var r3;
                if (void 0 === e5)
                  for (e5 = 0, r3 = 0; r3 < t3.length; ++r3)
                    e5 += t3[r3].length;
                var i2 = o.allocUnsafe(e5), n2 = 0;
                for (r3 = 0; r3 < t3.length; ++r3) {
                  var a2 = t3[r3];
                  if (N(a2, Uint8Array) && (a2 = o.from(a2)), !o.isBuffer(a2))
                    throw new TypeError('"list" argument must be an Array of Buffers');
                  a2.copy(i2, n2), n2 += a2.length;
                }
                return i2;
              }, o.byteLength = c, o.prototype._isBuffer = true, o.prototype.swap16 = function() {
                var t3 = this.length;
                if (t3 % 2 != 0)
                  throw new RangeError("Buffer size must be a multiple of 16-bits");
                for (var e5 = 0; e5 < t3; e5 += 2)
                  p(this, e5, e5 + 1);
                return this;
              }, o.prototype.swap32 = function() {
                var t3 = this.length;
                if (t3 % 4 != 0)
                  throw new RangeError("Buffer size must be a multiple of 32-bits");
                for (var e5 = 0; e5 < t3; e5 += 4)
                  p(this, e5, e5 + 3), p(this, e5 + 1, e5 + 2);
                return this;
              }, o.prototype.swap64 = function() {
                var t3 = this.length;
                if (t3 % 8 != 0)
                  throw new RangeError("Buffer size must be a multiple of 64-bits");
                for (var e5 = 0; e5 < t3; e5 += 8)
                  p(this, e5, e5 + 7), p(this, e5 + 1, e5 + 6), p(this, e5 + 2, e5 + 5), p(this, e5 + 3, e5 + 4);
                return this;
              }, o.prototype.toString = function() {
                var t3 = this.length;
                return 0 === t3 ? "" : 0 === arguments.length ? k(this, 0, t3) : d.apply(this, arguments);
              }, o.prototype.toLocaleString = o.prototype.toString, o.prototype.equals = function(t3) {
                if (!o.isBuffer(t3))
                  throw new TypeError("Argument must be a Buffer");
                return this === t3 || 0 === o.compare(this, t3);
              }, o.prototype.inspect = function() {
                var t3 = "", e5 = r2.INSPECT_MAX_BYTES;
                return t3 = this.toString("hex", 0, e5).replace(/(.{2})/g, "$1 ").trim(), this.length > e5 && (t3 += " ... "), "<Buffer " + t3 + ">";
              }, o.prototype.compare = function(t3, e5, r3, i2, n2) {
                if (N(t3, Uint8Array) && (t3 = o.from(t3, t3.offset, t3.byteLength)), !o.isBuffer(t3))
                  throw new TypeError('The "target" argument must be one of type Buffer or Uint8Array. Received type ' + typeof t3);
                if (void 0 === e5 && (e5 = 0), void 0 === r3 && (r3 = t3 ? t3.length : 0), void 0 === i2 && (i2 = 0), void 0 === n2 && (n2 = this.length), e5 < 0 || r3 > t3.length || i2 < 0 || n2 > this.length)
                  throw new RangeError("out of range index");
                if (i2 >= n2 && e5 >= r3)
                  return 0;
                if (i2 >= n2)
                  return -1;
                if (e5 >= r3)
                  return 1;
                if (this === t3)
                  return 0;
                for (var a2 = (n2 >>>= 0) - (i2 >>>= 0), s2 = (r3 >>>= 0) - (e5 >>>= 0), h2 = Math.min(a2, s2), l2 = this.slice(i2, n2), f2 = t3.slice(e5, r3), u2 = 0; u2 < h2; ++u2)
                  if (l2[u2] !== f2[u2]) {
                    a2 = l2[u2], s2 = f2[u2];
                    break;
                  }
                return a2 < s2 ? -1 : s2 < a2 ? 1 : 0;
              }, o.prototype.includes = function(t3, e5, r3) {
                return -1 !== this.indexOf(t3, e5, r3);
              }, o.prototype.indexOf = function(t3, e5, r3) {
                return m(this, t3, e5, r3, true);
              }, o.prototype.lastIndexOf = function(t3, e5, r3) {
                return m(this, t3, e5, r3, false);
              }, o.prototype.write = function(t3, e5, r3, i2) {
                if (void 0 === e5)
                  i2 = "utf8", r3 = this.length, e5 = 0;
                else if (void 0 === r3 && "string" == typeof e5)
                  i2 = e5, r3 = this.length, e5 = 0;
                else {
                  if (!isFinite(e5))
                    throw new Error("Buffer.write(string, encoding, offset[, length]) is no longer supported");
                  e5 >>>= 0, isFinite(r3) ? (r3 >>>= 0, void 0 === i2 && (i2 = "utf8")) : (i2 = r3, r3 = void 0);
                }
                var n2 = this.length - e5;
                if ((void 0 === r3 || r3 > n2) && (r3 = n2), t3.length > 0 && (r3 < 0 || e5 < 0) || e5 > this.length)
                  throw new RangeError("Attempt to write outside buffer bounds");
                i2 || (i2 = "utf8");
                for (var a2 = false; ; )
                  switch (i2) {
                    case "hex":
                      return b(this, t3, e5, r3);
                    case "utf8":
                    case "utf-8":
                      return _(this, t3, e5, r3);
                    case "ascii":
                      return y(this, t3, e5, r3);
                    case "latin1":
                    case "binary":
                      return w(this, t3, e5, r3);
                    case "base64":
                      return v(this, t3, e5, r3);
                    case "ucs2":
                    case "ucs-2":
                    case "utf16le":
                    case "utf-16le":
                      return x(this, t3, e5, r3);
                    default:
                      if (a2)
                        throw new TypeError("Unknown encoding: " + i2);
                      i2 = ("" + i2).toLowerCase(), a2 = true;
                  }
              }, o.prototype.toJSON = function() {
                return { type: "Buffer", data: Array.prototype.slice.call(this._arr || this, 0) };
              };
              var S = 4096;
              function M(t3, e5, r3) {
                var i2 = "";
                r3 = Math.min(t3.length, r3);
                for (var n2 = e5; n2 < r3; ++n2)
                  i2 += String.fromCharCode(127 & t3[n2]);
                return i2;
              }
              function A(t3, e5, r3) {
                var i2 = "";
                r3 = Math.min(t3.length, r3);
                for (var n2 = e5; n2 < r3; ++n2)
                  i2 += String.fromCharCode(t3[n2]);
                return i2;
              }
              function I(t3, e5, r3) {
                var i2, n2 = t3.length;
                (!e5 || e5 < 0) && (e5 = 0), (!r3 || r3 < 0 || r3 > n2) && (r3 = n2);
                for (var a2 = "", o2 = e5; o2 < r3; ++o2)
                  a2 += (i2 = t3[o2]) < 16 ? "0" + i2.toString(16) : i2.toString(16);
                return a2;
              }
              function B(t3, e5, r3) {
                for (var i2 = t3.slice(e5, r3), n2 = "", a2 = 0; a2 < i2.length; a2 += 2)
                  n2 += String.fromCharCode(i2[a2] + 256 * i2[a2 + 1]);
                return n2;
              }
              function T(t3, e5, r3) {
                if (t3 % 1 != 0 || t3 < 0)
                  throw new RangeError("offset is not uint");
                if (t3 + e5 > r3)
                  throw new RangeError("Trying to access beyond buffer length");
              }
              function R(t3, e5, r3, i2, n2, a2) {
                if (!o.isBuffer(t3))
                  throw new TypeError('"buffer" argument must be a Buffer instance');
                if (e5 > n2 || e5 < a2)
                  throw new RangeError('"value" argument is out of bounds');
                if (r3 + i2 > t3.length)
                  throw new RangeError("Index out of range");
              }
              function P(t3, e5, r3, i2, n2, a2) {
                if (r3 + i2 > t3.length)
                  throw new RangeError("Index out of range");
                if (r3 < 0)
                  throw new RangeError("Index out of range");
              }
              function O(t3, e5, r3, n2, a2) {
                return e5 = +e5, r3 >>>= 0, a2 || P(t3, 0, r3, 4), i.write(t3, e5, r3, n2, 23, 4), r3 + 4;
              }
              function L(t3, e5, r3, n2, a2) {
                return e5 = +e5, r3 >>>= 0, a2 || P(t3, 0, r3, 8), i.write(t3, e5, r3, n2, 52, 8), r3 + 8;
              }
              o.prototype.slice = function(t3, e5) {
                var r3 = this.length;
                (t3 = ~~t3) < 0 ? (t3 += r3) < 0 && (t3 = 0) : t3 > r3 && (t3 = r3), (e5 = void 0 === e5 ? r3 : ~~e5) < 0 ? (e5 += r3) < 0 && (e5 = 0) : e5 > r3 && (e5 = r3), e5 < t3 && (e5 = t3);
                var i2 = this.subarray(t3, e5);
                return i2.__proto__ = o.prototype, i2;
              }, o.prototype.readUIntLE = function(t3, e5, r3) {
                t3 >>>= 0, e5 >>>= 0, r3 || T(t3, e5, this.length);
                for (var i2 = this[t3], n2 = 1, a2 = 0; ++a2 < e5 && (n2 *= 256); )
                  i2 += this[t3 + a2] * n2;
                return i2;
              }, o.prototype.readUIntBE = function(t3, e5, r3) {
                t3 >>>= 0, e5 >>>= 0, r3 || T(t3, e5, this.length);
                for (var i2 = this[t3 + --e5], n2 = 1; e5 > 0 && (n2 *= 256); )
                  i2 += this[t3 + --e5] * n2;
                return i2;
              }, o.prototype.readUInt8 = function(t3, e5) {
                return t3 >>>= 0, e5 || T(t3, 1, this.length), this[t3];
              }, o.prototype.readUInt16LE = function(t3, e5) {
                return t3 >>>= 0, e5 || T(t3, 2, this.length), this[t3] | this[t3 + 1] << 8;
              }, o.prototype.readUInt16BE = function(t3, e5) {
                return t3 >>>= 0, e5 || T(t3, 2, this.length), this[t3] << 8 | this[t3 + 1];
              }, o.prototype.readUInt32LE = function(t3, e5) {
                return t3 >>>= 0, e5 || T(t3, 4, this.length), (this[t3] | this[t3 + 1] << 8 | this[t3 + 2] << 16) + 16777216 * this[t3 + 3];
              }, o.prototype.readUInt32BE = function(t3, e5) {
                return t3 >>>= 0, e5 || T(t3, 4, this.length), 16777216 * this[t3] + (this[t3 + 1] << 16 | this[t3 + 2] << 8 | this[t3 + 3]);
              }, o.prototype.readIntLE = function(t3, e5, r3) {
                t3 >>>= 0, e5 >>>= 0, r3 || T(t3, e5, this.length);
                for (var i2 = this[t3], n2 = 1, a2 = 0; ++a2 < e5 && (n2 *= 256); )
                  i2 += this[t3 + a2] * n2;
                return i2 >= (n2 *= 128) && (i2 -= Math.pow(2, 8 * e5)), i2;
              }, o.prototype.readIntBE = function(t3, e5, r3) {
                t3 >>>= 0, e5 >>>= 0, r3 || T(t3, e5, this.length);
                for (var i2 = e5, n2 = 1, a2 = this[t3 + --i2]; i2 > 0 && (n2 *= 256); )
                  a2 += this[t3 + --i2] * n2;
                return a2 >= (n2 *= 128) && (a2 -= Math.pow(2, 8 * e5)), a2;
              }, o.prototype.readInt8 = function(t3, e5) {
                return t3 >>>= 0, e5 || T(t3, 1, this.length), 128 & this[t3] ? -1 * (255 - this[t3] + 1) : this[t3];
              }, o.prototype.readInt16LE = function(t3, e5) {
                t3 >>>= 0, e5 || T(t3, 2, this.length);
                var r3 = this[t3] | this[t3 + 1] << 8;
                return 32768 & r3 ? 4294901760 | r3 : r3;
              }, o.prototype.readInt16BE = function(t3, e5) {
                t3 >>>= 0, e5 || T(t3, 2, this.length);
                var r3 = this[t3 + 1] | this[t3] << 8;
                return 32768 & r3 ? 4294901760 | r3 : r3;
              }, o.prototype.readInt32LE = function(t3, e5) {
                return t3 >>>= 0, e5 || T(t3, 4, this.length), this[t3] | this[t3 + 1] << 8 | this[t3 + 2] << 16 | this[t3 + 3] << 24;
              }, o.prototype.readInt32BE = function(t3, e5) {
                return t3 >>>= 0, e5 || T(t3, 4, this.length), this[t3] << 24 | this[t3 + 1] << 16 | this[t3 + 2] << 8 | this[t3 + 3];
              }, o.prototype.readFloatLE = function(t3, e5) {
                return t3 >>>= 0, e5 || T(t3, 4, this.length), i.read(this, t3, true, 23, 4);
              }, o.prototype.readFloatBE = function(t3, e5) {
                return t3 >>>= 0, e5 || T(t3, 4, this.length), i.read(this, t3, false, 23, 4);
              }, o.prototype.readDoubleLE = function(t3, e5) {
                return t3 >>>= 0, e5 || T(t3, 8, this.length), i.read(this, t3, true, 52, 8);
              }, o.prototype.readDoubleBE = function(t3, e5) {
                return t3 >>>= 0, e5 || T(t3, 8, this.length), i.read(this, t3, false, 52, 8);
              }, o.prototype.writeUIntLE = function(t3, e5, r3, i2) {
                t3 = +t3, e5 >>>= 0, r3 >>>= 0, i2 || R(this, t3, e5, r3, Math.pow(2, 8 * r3) - 1, 0);
                var n2 = 1, a2 = 0;
                for (this[e5] = 255 & t3; ++a2 < r3 && (n2 *= 256); )
                  this[e5 + a2] = t3 / n2 & 255;
                return e5 + r3;
              }, o.prototype.writeUIntBE = function(t3, e5, r3, i2) {
                t3 = +t3, e5 >>>= 0, r3 >>>= 0, i2 || R(this, t3, e5, r3, Math.pow(2, 8 * r3) - 1, 0);
                var n2 = r3 - 1, a2 = 1;
                for (this[e5 + n2] = 255 & t3; --n2 >= 0 && (a2 *= 256); )
                  this[e5 + n2] = t3 / a2 & 255;
                return e5 + r3;
              }, o.prototype.writeUInt8 = function(t3, e5, r3) {
                return t3 = +t3, e5 >>>= 0, r3 || R(this, t3, e5, 1, 255, 0), this[e5] = 255 & t3, e5 + 1;
              }, o.prototype.writeUInt16LE = function(t3, e5, r3) {
                return t3 = +t3, e5 >>>= 0, r3 || R(this, t3, e5, 2, 65535, 0), this[e5] = 255 & t3, this[e5 + 1] = t3 >>> 8, e5 + 2;
              }, o.prototype.writeUInt16BE = function(t3, e5, r3) {
                return t3 = +t3, e5 >>>= 0, r3 || R(this, t3, e5, 2, 65535, 0), this[e5] = t3 >>> 8, this[e5 + 1] = 255 & t3, e5 + 2;
              }, o.prototype.writeUInt32LE = function(t3, e5, r3) {
                return t3 = +t3, e5 >>>= 0, r3 || R(this, t3, e5, 4, 4294967295, 0), this[e5 + 3] = t3 >>> 24, this[e5 + 2] = t3 >>> 16, this[e5 + 1] = t3 >>> 8, this[e5] = 255 & t3, e5 + 4;
              }, o.prototype.writeUInt32BE = function(t3, e5, r3) {
                return t3 = +t3, e5 >>>= 0, r3 || R(this, t3, e5, 4, 4294967295, 0), this[e5] = t3 >>> 24, this[e5 + 1] = t3 >>> 16, this[e5 + 2] = t3 >>> 8, this[e5 + 3] = 255 & t3, e5 + 4;
              }, o.prototype.writeIntLE = function(t3, e5, r3, i2) {
                if (t3 = +t3, e5 >>>= 0, !i2) {
                  var n2 = Math.pow(2, 8 * r3 - 1);
                  R(this, t3, e5, r3, n2 - 1, -n2);
                }
                var a2 = 0, o2 = 1, s2 = 0;
                for (this[e5] = 255 & t3; ++a2 < r3 && (o2 *= 256); )
                  t3 < 0 && 0 === s2 && 0 !== this[e5 + a2 - 1] && (s2 = 1), this[e5 + a2] = (t3 / o2 >> 0) - s2 & 255;
                return e5 + r3;
              }, o.prototype.writeIntBE = function(t3, e5, r3, i2) {
                if (t3 = +t3, e5 >>>= 0, !i2) {
                  var n2 = Math.pow(2, 8 * r3 - 1);
                  R(this, t3, e5, r3, n2 - 1, -n2);
                }
                var a2 = r3 - 1, o2 = 1, s2 = 0;
                for (this[e5 + a2] = 255 & t3; --a2 >= 0 && (o2 *= 256); )
                  t3 < 0 && 0 === s2 && 0 !== this[e5 + a2 + 1] && (s2 = 1), this[e5 + a2] = (t3 / o2 >> 0) - s2 & 255;
                return e5 + r3;
              }, o.prototype.writeInt8 = function(t3, e5, r3) {
                return t3 = +t3, e5 >>>= 0, r3 || R(this, t3, e5, 1, 127, -128), t3 < 0 && (t3 = 255 + t3 + 1), this[e5] = 255 & t3, e5 + 1;
              }, o.prototype.writeInt16LE = function(t3, e5, r3) {
                return t3 = +t3, e5 >>>= 0, r3 || R(this, t3, e5, 2, 32767, -32768), this[e5] = 255 & t3, this[e5 + 1] = t3 >>> 8, e5 + 2;
              }, o.prototype.writeInt16BE = function(t3, e5, r3) {
                return t3 = +t3, e5 >>>= 0, r3 || R(this, t3, e5, 2, 32767, -32768), this[e5] = t3 >>> 8, this[e5 + 1] = 255 & t3, e5 + 2;
              }, o.prototype.writeInt32LE = function(t3, e5, r3) {
                return t3 = +t3, e5 >>>= 0, r3 || R(this, t3, e5, 4, 2147483647, -2147483648), this[e5] = 255 & t3, this[e5 + 1] = t3 >>> 8, this[e5 + 2] = t3 >>> 16, this[e5 + 3] = t3 >>> 24, e5 + 4;
              }, o.prototype.writeInt32BE = function(t3, e5, r3) {
                return t3 = +t3, e5 >>>= 0, r3 || R(this, t3, e5, 4, 2147483647, -2147483648), t3 < 0 && (t3 = 4294967295 + t3 + 1), this[e5] = t3 >>> 24, this[e5 + 1] = t3 >>> 16, this[e5 + 2] = t3 >>> 8, this[e5 + 3] = 255 & t3, e5 + 4;
              }, o.prototype.writeFloatLE = function(t3, e5, r3) {
                return O(this, t3, e5, true, r3);
              }, o.prototype.writeFloatBE = function(t3, e5, r3) {
                return O(this, t3, e5, false, r3);
              }, o.prototype.writeDoubleLE = function(t3, e5, r3) {
                return L(this, t3, e5, true, r3);
              }, o.prototype.writeDoubleBE = function(t3, e5, r3) {
                return L(this, t3, e5, false, r3);
              }, o.prototype.copy = function(t3, e5, r3, i2) {
                if (!o.isBuffer(t3))
                  throw new TypeError("argument should be a Buffer");
                if (r3 || (r3 = 0), i2 || 0 === i2 || (i2 = this.length), e5 >= t3.length && (e5 = t3.length), e5 || (e5 = 0), i2 > 0 && i2 < r3 && (i2 = r3), i2 === r3)
                  return 0;
                if (0 === t3.length || 0 === this.length)
                  return 0;
                if (e5 < 0)
                  throw new RangeError("targetStart out of bounds");
                if (r3 < 0 || r3 >= this.length)
                  throw new RangeError("Index out of range");
                if (i2 < 0)
                  throw new RangeError("sourceEnd out of bounds");
                i2 > this.length && (i2 = this.length), t3.length - e5 < i2 - r3 && (i2 = t3.length - e5 + r3);
                var n2 = i2 - r3;
                if (this === t3 && "function" == typeof Uint8Array.prototype.copyWithin)
                  this.copyWithin(e5, r3, i2);
                else if (this === t3 && r3 < e5 && e5 < i2)
                  for (var a2 = n2 - 1; a2 >= 0; --a2)
                    t3[a2 + e5] = this[a2 + r3];
                else
                  Uint8Array.prototype.set.call(t3, this.subarray(r3, i2), e5);
                return n2;
              }, o.prototype.fill = function(t3, e5, r3, i2) {
                if ("string" == typeof t3) {
                  if ("string" == typeof e5 ? (i2 = e5, e5 = 0, r3 = this.length) : "string" == typeof r3 && (i2 = r3, r3 = this.length), void 0 !== i2 && "string" != typeof i2)
                    throw new TypeError("encoding must be a string");
                  if ("string" == typeof i2 && !o.isEncoding(i2))
                    throw new TypeError("Unknown encoding: " + i2);
                  if (1 === t3.length) {
                    var n2 = t3.charCodeAt(0);
                    ("utf8" === i2 && n2 < 128 || "latin1" === i2) && (t3 = n2);
                  }
                } else
                  "number" == typeof t3 && (t3 &= 255);
                if (e5 < 0 || this.length < e5 || this.length < r3)
                  throw new RangeError("Out of range index");
                if (r3 <= e5)
                  return this;
                var a2;
                if (e5 >>>= 0, r3 = void 0 === r3 ? this.length : r3 >>> 0, t3 || (t3 = 0), "number" == typeof t3)
                  for (a2 = e5; a2 < r3; ++a2)
                    this[a2] = t3;
                else {
                  var s2 = o.isBuffer(t3) ? t3 : o.from(t3, i2), h2 = s2.length;
                  if (0 === h2)
                    throw new TypeError('The value "' + t3 + '" is invalid for argument "value"');
                  for (a2 = 0; a2 < r3 - e5; ++a2)
                    this[a2 + e5] = s2[a2 % h2];
                }
                return this;
              };
              var C = /[^+/0-9A-Za-z-_]/g;
              function U(t3, e5) {
                var r3;
                e5 = e5 || 1 / 0;
                for (var i2 = t3.length, n2 = null, a2 = [], o2 = 0; o2 < i2; ++o2) {
                  if ((r3 = t3.charCodeAt(o2)) > 55295 && r3 < 57344) {
                    if (!n2) {
                      if (r3 > 56319) {
                        (e5 -= 3) > -1 && a2.push(239, 191, 189);
                        continue;
                      }
                      if (o2 + 1 === i2) {
                        (e5 -= 3) > -1 && a2.push(239, 191, 189);
                        continue;
                      }
                      n2 = r3;
                      continue;
                    }
                    if (r3 < 56320) {
                      (e5 -= 3) > -1 && a2.push(239, 191, 189), n2 = r3;
                      continue;
                    }
                    r3 = 65536 + (n2 - 55296 << 10 | r3 - 56320);
                  } else
                    n2 && (e5 -= 3) > -1 && a2.push(239, 191, 189);
                  if (n2 = null, r3 < 128) {
                    if ((e5 -= 1) < 0)
                      break;
                    a2.push(r3);
                  } else if (r3 < 2048) {
                    if ((e5 -= 2) < 0)
                      break;
                    a2.push(r3 >> 6 | 192, 63 & r3 | 128);
                  } else if (r3 < 65536) {
                    if ((e5 -= 3) < 0)
                      break;
                    a2.push(r3 >> 12 | 224, r3 >> 6 & 63 | 128, 63 & r3 | 128);
                  } else {
                    if (!(r3 < 1114112))
                      throw new Error("Invalid code point");
                    if ((e5 -= 4) < 0)
                      break;
                    a2.push(r3 >> 18 | 240, r3 >> 12 & 63 | 128, r3 >> 6 & 63 | 128, 63 & r3 | 128);
                  }
                }
                return a2;
              }
              function z(t3) {
                return e4.toByteArray(function(t4) {
                  if ((t4 = (t4 = t4.split("=")[0]).trim().replace(C, "")).length < 2)
                    return "";
                  for (; t4.length % 4 != 0; )
                    t4 += "=";
                  return t4;
                }(t3));
              }
              function D(t3, e5, r3, i2) {
                for (var n2 = 0; n2 < i2 && !(n2 + r3 >= e5.length || n2 >= t3.length); ++n2)
                  e5[n2 + r3] = t3[n2];
                return n2;
              }
              function N(t3, e5) {
                return t3 instanceof e5 || null != t3 && null != t3.constructor && null != t3.constructor.name && t3.constructor.name === e5.name;
              }
              function F(t3) {
                return t3 != t3;
              }
            }).call(this);
          }).call(this, t2("buffer").Buffer);
        }, { "base64-js": 29, buffer: 33, ieee754: 44 }], 34: [function(t2, e2, r2) {
          "use strict";
          var i, n = TypeError, a = Object.getOwnPropertyDescriptor;
          if (a)
            try {
              a({}, "");
            } catch (t3) {
              a = null;
            }
          var o = function() {
            throw new n();
          }, s = a ? function() {
            try {
              return o;
            } catch (t3) {
              try {
                return a(arguments, "callee").get;
              } catch (t4) {
                return o;
              }
            }
          }() : o, h = t2("has-symbols")(), l = Object.getPrototypeOf || function(t3) {
            return t3.__proto__;
          }, f = i, u = i, c = i, d = i, p = "undefined" == typeof Uint8Array ? i : l(Uint8Array), m = { "%Array%": Array, "%ArrayBuffer%": "undefined" == typeof ArrayBuffer ? i : ArrayBuffer, "%ArrayBufferPrototype%": "undefined" == typeof ArrayBuffer ? i : ArrayBuffer.prototype, "%ArrayIteratorPrototype%": h ? l([][Symbol.iterator]()) : i, "%ArrayPrototype%": Array.prototype, "%ArrayProto_entries%": Array.prototype.entries, "%ArrayProto_forEach%": Array.prototype.forEach, "%ArrayProto_keys%": Array.prototype.keys, "%ArrayProto_values%": Array.prototype.values, "%AsyncFromSyncIteratorPrototype%": i, "%AsyncFunction%": u, "%AsyncFunctionPrototype%": i, "%AsyncGenerator%": i, "%AsyncGeneratorFunction%": c, "%AsyncGeneratorPrototype%": i, "%AsyncIteratorPrototype%": d && h && Symbol.asyncIterator ? d[Symbol.asyncIterator]() : i, "%Atomics%": "undefined" == typeof Atomics ? i : Atomics, "%Boolean%": Boolean, "%BooleanPrototype%": Boolean.prototype, "%DataView%": "undefined" == typeof DataView ? i : DataView, "%DataViewPrototype%": "undefined" == typeof DataView ? i : DataView.prototype, "%Date%": Date, "%DatePrototype%": Date.prototype, "%decodeURI%": decodeURI, "%decodeURIComponent%": decodeURIComponent, "%encodeURI%": encodeURI, "%encodeURIComponent%": encodeURIComponent, "%Error%": Error, "%ErrorPrototype%": Error.prototype, "%eval%": eval, "%EvalError%": EvalError, "%EvalErrorPrototype%": EvalError.prototype, "%Float32Array%": "undefined" == typeof Float32Array ? i : Float32Array, "%Float32ArrayPrototype%": "undefined" == typeof Float32Array ? i : Float32Array.prototype, "%Float64Array%": "undefined" == typeof Float64Array ? i : Float64Array, "%Float64ArrayPrototype%": "undefined" == typeof Float64Array ? i : Float64Array.prototype, "%Function%": Function, "%FunctionPrototype%": Function.prototype, "%Generator%": i, "%GeneratorFunction%": f, "%GeneratorPrototype%": i, "%Int8Array%": "undefined" == typeof Int8Array ? i : Int8Array, "%Int8ArrayPrototype%": "undefined" == typeof Int8Array ? i : Int8Array.prototype, "%Int16Array%": "undefined" == typeof Int16Array ? i : Int16Array, "%Int16ArrayPrototype%": "undefined" == typeof Int16Array ? i : Int8Array.prototype, "%Int32Array%": "undefined" == typeof Int32Array ? i : Int32Array, "%Int32ArrayPrototype%": "undefined" == typeof Int32Array ? i : Int32Array.prototype, "%isFinite%": isFinite, "%isNaN%": isNaN, "%IteratorPrototype%": h ? l(l([][Symbol.iterator]())) : i, "%JSON%": "object" == typeof JSON ? JSON : i, "%JSONParse%": "object" == typeof JSON ? JSON.parse : i, "%Map%": "undefined" == typeof Map ? i : Map, "%MapIteratorPrototype%": "undefined" != typeof Map && h ? l((/* @__PURE__ */ new Map())[Symbol.iterator]()) : i, "%MapPrototype%": "undefined" == typeof Map ? i : Map.prototype, "%Math%": Math, "%Number%": Number, "%NumberPrototype%": Number.prototype, "%Object%": Object, "%ObjectPrototype%": Object.prototype, "%ObjProto_toString%": Object.prototype.toString, "%ObjProto_valueOf%": Object.prototype.valueOf, "%parseFloat%": parseFloat, "%parseInt%": parseInt, "%Promise%": "undefined" == typeof Promise ? i : Promise, "%PromisePrototype%": "undefined" == typeof Promise ? i : Promise.prototype, "%PromiseProto_then%": "undefined" == typeof Promise ? i : Promise.prototype.then, "%Promise_all%": "undefined" == typeof Promise ? i : Promise.all, "%Promise_reject%": "undefined" == typeof Promise ? i : Promise.reject, "%Promise_resolve%": "undefined" == typeof Promise ? i : Promise.resolve, "%Proxy%": "undefined" == typeof Proxy ? i : Proxy, "%RangeError%": RangeError, "%RangeErrorPrototype%": RangeError.prototype, "%ReferenceError%": ReferenceError, "%ReferenceErrorPrototype%": ReferenceError.prototype, "%Reflect%": "undefined" == typeof Reflect ? i : Reflect, "%RegExp%": RegExp, "%RegExpPrototype%": RegExp.prototype, "%Set%": "undefined" == typeof Set ? i : Set, "%SetIteratorPrototype%": "undefined" != typeof Set && h ? l((/* @__PURE__ */ new Set())[Symbol.iterator]()) : i, "%SetPrototype%": "undefined" == typeof Set ? i : Set.prototype, "%SharedArrayBuffer%": "undefined" == typeof SharedArrayBuffer ? i : SharedArrayBuffer, "%SharedArrayBufferPrototype%": "undefined" == typeof SharedArrayBuffer ? i : SharedArrayBuffer.prototype, "%String%": String, "%StringIteratorPrototype%": h ? l(""[Symbol.iterator]()) : i, "%StringPrototype%": String.prototype, "%Symbol%": h ? Symbol : i, "%SymbolPrototype%": h ? Symbol.prototype : i, "%SyntaxError%": SyntaxError, "%SyntaxErrorPrototype%": SyntaxError.prototype, "%ThrowTypeError%": s, "%TypedArray%": p, "%TypedArrayPrototype%": p ? p.prototype : i, "%TypeError%": n, "%TypeErrorPrototype%": n.prototype, "%Uint8Array%": "undefined" == typeof Uint8Array ? i : Uint8Array, "%Uint8ArrayPrototype%": "undefined" == typeof Uint8Array ? i : Uint8Array.prototype, "%Uint8ClampedArray%": "undefined" == typeof Uint8ClampedArray ? i : Uint8ClampedArray, "%Uint8ClampedArrayPrototype%": "undefined" == typeof Uint8ClampedArray ? i : Uint8ClampedArray.prototype, "%Uint16Array%": "undefined" == typeof Uint16Array ? i : Uint16Array, "%Uint16ArrayPrototype%": "undefined" == typeof Uint16Array ? i : Uint16Array.prototype, "%Uint32Array%": "undefined" == typeof Uint32Array ? i : Uint32Array, "%Uint32ArrayPrototype%": "undefined" == typeof Uint32Array ? i : Uint32Array.prototype, "%URIError%": URIError, "%URIErrorPrototype%": URIError.prototype, "%WeakMap%": "undefined" == typeof WeakMap ? i : WeakMap, "%WeakMapPrototype%": "undefined" == typeof WeakMap ? i : WeakMap.prototype, "%WeakSet%": "undefined" == typeof WeakSet ? i : WeakSet, "%WeakSetPrototype%": "undefined" == typeof WeakSet ? i : WeakSet.prototype }, g = t2("function-bind").call(Function.call, String.prototype.replace), b = /[^%.[\]]+|\[(?:(-?\d+(?:\.\d+)?)|(["'])((?:(?!\2)[^\\]|\\.)*?)\2)\]|(?=(?:\.|\[\])(?:\.|\[\]|%$))/g, _ = /\\(\\)?/g, y = function(t3) {
            var e3 = [];
            return g(t3, b, function(t4, r3, i2, n2) {
              e3[e3.length] = i2 ? g(n2, _, "$1") : r3 || t4;
            }), e3;
          }, w = function(t3, e3) {
            if (!(t3 in m))
              throw new SyntaxError("intrinsic " + t3 + " does not exist!");
            if (void 0 === m[t3] && !e3)
              throw new n("intrinsic " + t3 + " exists, but is not available. Please file an issue!");
            return m[t3];
          };
          e2.exports = function(t3, e3) {
            if ("string" != typeof t3 || 0 === t3.length)
              throw new TypeError("intrinsic name must be a non-empty string");
            if (arguments.length > 1 && "boolean" != typeof e3)
              throw new TypeError('"allowMissing" argument must be a boolean');
            for (var r3 = y(t3), i2 = w("%" + (r3.length > 0 ? r3[0] : "") + "%", e3), o2 = 1; o2 < r3.length; o2 += 1)
              if (null != i2)
                if (a && o2 + 1 >= r3.length) {
                  var s2 = a(i2, r3[o2]);
                  if (!e3 && !(r3[o2] in i2))
                    throw new n("base intrinsic for " + t3 + " exists, but the property is not available.");
                  i2 = s2 ? s2.get || s2.value : i2[r3[o2]];
                } else
                  i2 = i2[r3[o2]];
            return i2;
          };
        }, { "function-bind": 41, "has-symbols": 42 }], 35: [function(t2, e2, r2) {
          "use strict";
          var i = t2("function-bind"), n = t2("../GetIntrinsic")("%Function%"), a = n.apply, o = n.call;
          e2.exports = function() {
            return i.apply(o, arguments);
          }, e2.exports.apply = function() {
            return i.apply(a, arguments);
          };
        }, { "../GetIntrinsic": 34, "function-bind": 41 }], 36: [function(t2, e2, r2) {
          "use strict";
          var i = t2("../GetIntrinsic"), n = t2("./callBind"), a = n(i("String.prototype.indexOf"));
          e2.exports = function(t3, e3) {
            var r3 = i(t3, !!e3);
            return "function" == typeof r3 && a(t3, ".prototype.") ? n(r3) : r3;
          };
        }, { "../GetIntrinsic": 34, "./callBind": 35 }], 37: [function(t2, e2, r2) {
          "use strict";
          var i = t2("../GetIntrinsic")("%Object.getOwnPropertyDescriptor%");
          if (i)
            try {
              i([], "length");
            } catch (t3) {
              i = null;
            }
          e2.exports = i;
        }, { "../GetIntrinsic": 34 }], 38: [function(t2, e2, r2) {
          "use strict";
          var i, n = "object" == typeof Reflect ? Reflect : null, a = n && "function" == typeof n.apply ? n.apply : function(t3, e3, r3) {
            return Function.prototype.apply.call(t3, e3, r3);
          };
          i = n && "function" == typeof n.ownKeys ? n.ownKeys : Object.getOwnPropertySymbols ? function(t3) {
            return Object.getOwnPropertyNames(t3).concat(Object.getOwnPropertySymbols(t3));
          } : function(t3) {
            return Object.getOwnPropertyNames(t3);
          };
          var o = Number.isNaN || function(t3) {
            return t3 != t3;
          };
          function s() {
            s.init.call(this);
          }
          e2.exports = s, e2.exports.once = function(t3, e3) {
            return new Promise(function(r3, i2) {
              function n2() {
                void 0 !== a2 && t3.removeListener("error", a2), r3([].slice.call(arguments));
              }
              var a2;
              "error" !== e3 && (a2 = function(r4) {
                t3.removeListener(e3, n2), i2(r4);
              }, t3.once("error", a2)), t3.once(e3, n2);
            });
          }, s.EventEmitter = s, s.prototype._events = void 0, s.prototype._eventsCount = 0, s.prototype._maxListeners = void 0;
          var h = 10;
          function l(t3) {
            if ("function" != typeof t3)
              throw new TypeError('The "listener" argument must be of type Function. Received type ' + typeof t3);
          }
          function f(t3) {
            return void 0 === t3._maxListeners ? s.defaultMaxListeners : t3._maxListeners;
          }
          function u(t3, e3, r3, i2) {
            var n2, a2, o2, s2;
            if (l(r3), void 0 === (a2 = t3._events) ? (a2 = t3._events = /* @__PURE__ */ Object.create(null), t3._eventsCount = 0) : (void 0 !== a2.newListener && (t3.emit("newListener", e3, r3.listener ? r3.listener : r3), a2 = t3._events), o2 = a2[e3]), void 0 === o2)
              o2 = a2[e3] = r3, ++t3._eventsCount;
            else if ("function" == typeof o2 ? o2 = a2[e3] = i2 ? [r3, o2] : [o2, r3] : i2 ? o2.unshift(r3) : o2.push(r3), (n2 = f(t3)) > 0 && o2.length > n2 && !o2.warned) {
              o2.warned = true;
              var h2 = new Error("Possible EventEmitter memory leak detected. " + o2.length + " " + String(e3) + " listeners added. Use emitter.setMaxListeners() to increase limit");
              h2.name = "MaxListenersExceededWarning", h2.emitter = t3, h2.type = e3, h2.count = o2.length, s2 = h2, console && console.warn && console.warn(s2);
            }
            return t3;
          }
          function c() {
            if (!this.fired)
              return this.target.removeListener(this.type, this.wrapFn), this.fired = true, 0 === arguments.length ? this.listener.call(this.target) : this.listener.apply(this.target, arguments);
          }
          function d(t3, e3, r3) {
            var i2 = { fired: false, wrapFn: void 0, target: t3, type: e3, listener: r3 }, n2 = c.bind(i2);
            return n2.listener = r3, i2.wrapFn = n2, n2;
          }
          function p(t3, e3, r3) {
            var i2 = t3._events;
            if (void 0 === i2)
              return [];
            var n2 = i2[e3];
            return void 0 === n2 ? [] : "function" == typeof n2 ? r3 ? [n2.listener || n2] : [n2] : r3 ? function(t4) {
              for (var e4 = new Array(t4.length), r4 = 0; r4 < e4.length; ++r4)
                e4[r4] = t4[r4].listener || t4[r4];
              return e4;
            }(n2) : g(n2, n2.length);
          }
          function m(t3) {
            var e3 = this._events;
            if (void 0 !== e3) {
              var r3 = e3[t3];
              if ("function" == typeof r3)
                return 1;
              if (void 0 !== r3)
                return r3.length;
            }
            return 0;
          }
          function g(t3, e3) {
            for (var r3 = new Array(e3), i2 = 0; i2 < e3; ++i2)
              r3[i2] = t3[i2];
            return r3;
          }
          Object.defineProperty(s, "defaultMaxListeners", { enumerable: true, get: function() {
            return h;
          }, set: function(t3) {
            if ("number" != typeof t3 || t3 < 0 || o(t3))
              throw new RangeError('The value of "defaultMaxListeners" is out of range. It must be a non-negative number. Received ' + t3 + ".");
            h = t3;
          } }), s.init = function() {
            void 0 !== this._events && this._events !== Object.getPrototypeOf(this)._events || (this._events = /* @__PURE__ */ Object.create(null), this._eventsCount = 0), this._maxListeners = this._maxListeners || void 0;
          }, s.prototype.setMaxListeners = function(t3) {
            if ("number" != typeof t3 || t3 < 0 || o(t3))
              throw new RangeError('The value of "n" is out of range. It must be a non-negative number. Received ' + t3 + ".");
            return this._maxListeners = t3, this;
          }, s.prototype.getMaxListeners = function() {
            return f(this);
          }, s.prototype.emit = function(t3) {
            for (var e3 = [], r3 = 1; r3 < arguments.length; r3++)
              e3.push(arguments[r3]);
            var i2 = "error" === t3, n2 = this._events;
            if (void 0 !== n2)
              i2 = i2 && void 0 === n2.error;
            else if (!i2)
              return false;
            if (i2) {
              var o2;
              if (e3.length > 0 && (o2 = e3[0]), o2 instanceof Error)
                throw o2;
              var s2 = new Error("Unhandled error." + (o2 ? " (" + o2.message + ")" : ""));
              throw s2.context = o2, s2;
            }
            var h2 = n2[t3];
            if (void 0 === h2)
              return false;
            if ("function" == typeof h2)
              a(h2, this, e3);
            else {
              var l2 = h2.length, f2 = g(h2, l2);
              for (r3 = 0; r3 < l2; ++r3)
                a(f2[r3], this, e3);
            }
            return true;
          }, s.prototype.addListener = function(t3, e3) {
            return u(this, t3, e3, false);
          }, s.prototype.on = s.prototype.addListener, s.prototype.prependListener = function(t3, e3) {
            return u(this, t3, e3, true);
          }, s.prototype.once = function(t3, e3) {
            return l(e3), this.on(t3, d(this, t3, e3)), this;
          }, s.prototype.prependOnceListener = function(t3, e3) {
            return l(e3), this.prependListener(t3, d(this, t3, e3)), this;
          }, s.prototype.removeListener = function(t3, e3) {
            var r3, i2, n2, a2, o2;
            if (l(e3), void 0 === (i2 = this._events))
              return this;
            if (void 0 === (r3 = i2[t3]))
              return this;
            if (r3 === e3 || r3.listener === e3)
              0 == --this._eventsCount ? this._events = /* @__PURE__ */ Object.create(null) : (delete i2[t3], i2.removeListener && this.emit("removeListener", t3, r3.listener || e3));
            else if ("function" != typeof r3) {
              for (n2 = -1, a2 = r3.length - 1; a2 >= 0; a2--)
                if (r3[a2] === e3 || r3[a2].listener === e3) {
                  o2 = r3[a2].listener, n2 = a2;
                  break;
                }
              if (n2 < 0)
                return this;
              0 === n2 ? r3.shift() : function(t4, e4) {
                for (; e4 + 1 < t4.length; e4++)
                  t4[e4] = t4[e4 + 1];
                t4.pop();
              }(r3, n2), 1 === r3.length && (i2[t3] = r3[0]), void 0 !== i2.removeListener && this.emit("removeListener", t3, o2 || e3);
            }
            return this;
          }, s.prototype.off = s.prototype.removeListener, s.prototype.removeAllListeners = function(t3) {
            var e3, r3, i2;
            if (void 0 === (r3 = this._events))
              return this;
            if (void 0 === r3.removeListener)
              return 0 === arguments.length ? (this._events = /* @__PURE__ */ Object.create(null), this._eventsCount = 0) : void 0 !== r3[t3] && (0 == --this._eventsCount ? this._events = /* @__PURE__ */ Object.create(null) : delete r3[t3]), this;
            if (0 === arguments.length) {
              var n2, a2 = Object.keys(r3);
              for (i2 = 0; i2 < a2.length; ++i2)
                "removeListener" !== (n2 = a2[i2]) && this.removeAllListeners(n2);
              return this.removeAllListeners("removeListener"), this._events = /* @__PURE__ */ Object.create(null), this._eventsCount = 0, this;
            }
            if ("function" == typeof (e3 = r3[t3]))
              this.removeListener(t3, e3);
            else if (void 0 !== e3)
              for (i2 = e3.length - 1; i2 >= 0; i2--)
                this.removeListener(t3, e3[i2]);
            return this;
          }, s.prototype.listeners = function(t3) {
            return p(this, t3, true);
          }, s.prototype.rawListeners = function(t3) {
            return p(this, t3, false);
          }, s.listenerCount = function(t3, e3) {
            return "function" == typeof t3.listenerCount ? t3.listenerCount(e3) : m.call(t3, e3);
          }, s.prototype.listenerCount = m, s.prototype.eventNames = function() {
            return this._eventsCount > 0 ? i(this._events) : [];
          };
        }, {}], 39: [function(t2, e2, r2) {
          var i = Object.prototype.hasOwnProperty, n = Object.prototype.toString;
          e2.exports = function(t3, e3, r3) {
            if ("[object Function]" !== n.call(e3))
              throw new TypeError("iterator must be a function");
            var a = t3.length;
            if (a === +a)
              for (var o = 0; o < a; o++)
                e3.call(r3, t3[o], o, t3);
            else
              for (var s in t3)
                i.call(t3, s) && e3.call(r3, t3[s], s, t3);
          };
        }, {}], 40: [function(t2, e2, r2) {
          "use strict";
          var i = "Function.prototype.bind called on incompatible ", n = Array.prototype.slice, a = Object.prototype.toString, o = "[object Function]";
          e2.exports = function(t3) {
            var e3 = this;
            if ("function" != typeof e3 || a.call(e3) !== o)
              throw new TypeError(i + e3);
            for (var r3, s = n.call(arguments, 1), h = Math.max(0, e3.length - s.length), l = [], f = 0; f < h; f++)
              l.push("$" + f);
            if (r3 = Function("binder", "return function (" + l.join(",") + "){ return binder.apply(this,arguments); }")(function() {
              if (this instanceof r3) {
                var i2 = e3.apply(this, s.concat(n.call(arguments)));
                return Object(i2) === i2 ? i2 : this;
              }
              return e3.apply(t3, s.concat(n.call(arguments)));
            }), e3.prototype) {
              var u = function() {
              };
              u.prototype = e3.prototype, r3.prototype = new u(), u.prototype = null;
            }
            return r3;
          };
        }, {}], 41: [function(t2, e2, r2) {
          "use strict";
          var i = t2("./implementation");
          e2.exports = Function.prototype.bind || i;
        }, { "./implementation": 40 }], 42: [function(t2, e2, i) {
          (function(r2) {
            (function() {
              "use strict";
              var i2 = r2.Symbol, n = t2("./shams");
              e2.exports = function() {
                return "function" == typeof i2 && "function" == typeof Symbol && "symbol" == typeof i2("foo") && "symbol" == typeof Symbol("bar") && n();
              };
            }).call(this);
          }).call(this, void 0 !== r.g ? r.g : "undefined" != typeof self ? self : "undefined" != typeof window ? window : {});
        }, { "./shams": 43 }], 43: [function(t2, e2, r2) {
          "use strict";
          e2.exports = function() {
            if ("function" != typeof Symbol || "function" != typeof Object.getOwnPropertySymbols)
              return false;
            if ("symbol" == typeof Symbol.iterator)
              return true;
            var t3 = {}, e3 = Symbol("test"), r3 = Object(e3);
            if ("string" == typeof e3)
              return false;
            if ("[object Symbol]" !== Object.prototype.toString.call(e3))
              return false;
            if ("[object Symbol]" !== Object.prototype.toString.call(r3))
              return false;
            for (e3 in t3[e3] = 42, t3)
              return false;
            if ("function" == typeof Object.keys && 0 !== Object.keys(t3).length)
              return false;
            if ("function" == typeof Object.getOwnPropertyNames && 0 !== Object.getOwnPropertyNames(t3).length)
              return false;
            var i = Object.getOwnPropertySymbols(t3);
            if (1 !== i.length || i[0] !== e3)
              return false;
            if (!Object.prototype.propertyIsEnumerable.call(t3, e3))
              return false;
            if ("function" == typeof Object.getOwnPropertyDescriptor) {
              var n = Object.getOwnPropertyDescriptor(t3, e3);
              if (42 !== n.value || true !== n.enumerable)
                return false;
            }
            return true;
          };
        }, {}], 44: [function(t2, e2, r2) {
          r2.read = function(t3, e3, r3, i, n) {
            var a, o, s = 8 * n - i - 1, h = (1 << s) - 1, l = h >> 1, f = -7, u = r3 ? n - 1 : 0, c = r3 ? -1 : 1, d = t3[e3 + u];
            for (u += c, a = d & (1 << -f) - 1, d >>= -f, f += s; f > 0; a = 256 * a + t3[e3 + u], u += c, f -= 8)
              ;
            for (o = a & (1 << -f) - 1, a >>= -f, f += i; f > 0; o = 256 * o + t3[e3 + u], u += c, f -= 8)
              ;
            if (0 === a)
              a = 1 - l;
            else {
              if (a === h)
                return o ? NaN : 1 / 0 * (d ? -1 : 1);
              o += Math.pow(2, i), a -= l;
            }
            return (d ? -1 : 1) * o * Math.pow(2, a - i);
          }, r2.write = function(t3, e3, r3, i, n, a) {
            var o, s, h, l = 8 * a - n - 1, f = (1 << l) - 1, u = f >> 1, c = 23 === n ? Math.pow(2, -24) - Math.pow(2, -77) : 0, d = i ? 0 : a - 1, p = i ? 1 : -1, m = e3 < 0 || 0 === e3 && 1 / e3 < 0 ? 1 : 0;
            for (e3 = Math.abs(e3), isNaN(e3) || e3 === 1 / 0 ? (s = isNaN(e3) ? 1 : 0, o = f) : (o = Math.floor(Math.log(e3) / Math.LN2), e3 * (h = Math.pow(2, -o)) < 1 && (o--, h *= 2), (e3 += o + u >= 1 ? c / h : c * Math.pow(2, 1 - u)) * h >= 2 && (o++, h /= 2), o + u >= f ? (s = 0, o = f) : o + u >= 1 ? (s = (e3 * h - 1) * Math.pow(2, n), o += u) : (s = e3 * Math.pow(2, u - 1) * Math.pow(2, n), o = 0)); n >= 8; t3[r3 + d] = 255 & s, d += p, s /= 256, n -= 8)
              ;
            for (o = o << n | s, l += n; l > 0; t3[r3 + d] = 255 & o, d += p, o /= 256, l -= 8)
              ;
            t3[r3 + d - p] |= 128 * m;
          };
        }, {}], 45: [function(t2, e2, r2) {
          "function" == typeof Object.create ? e2.exports = function(t3, e3) {
            e3 && (t3.super_ = e3, t3.prototype = Object.create(e3.prototype, { constructor: { value: t3, enumerable: false, writable: true, configurable: true } }));
          } : e2.exports = function(t3, e3) {
            if (e3) {
              t3.super_ = e3;
              var r3 = function() {
              };
              r3.prototype = e3.prototype, t3.prototype = new r3(), t3.prototype.constructor = t3;
            }
          };
        }, {}], 46: [function(t2, e2, r2) {
          "use strict";
          var i = "function" == typeof Symbol && "symbol" == typeof Symbol.toStringTag, n = Object.prototype.toString, a = function(t3) {
            return !(i && t3 && "object" == typeof t3 && Symbol.toStringTag in t3) && "[object Arguments]" === n.call(t3);
          }, o = function(t3) {
            return !!a(t3) || null !== t3 && "object" == typeof t3 && "number" == typeof t3.length && t3.length >= 0 && "[object Array]" !== n.call(t3) && "[object Function]" === n.call(t3.callee);
          }, s = function() {
            return a(arguments);
          }();
          a.isLegacyArguments = o, e2.exports = s ? a : o;
        }, {}], 47: [function(t2, e2, r2) {
          "use strict";
          var i = Object.prototype.toString, n = Function.prototype.toString, a = /^\s*(?:function)?\*/, o = "function" == typeof Symbol && "symbol" == typeof Symbol.toStringTag, s = Object.getPrototypeOf, h = function() {
            if (!o)
              return false;
            try {
              return Function("return function*() {}")();
            } catch (t3) {
            }
          }(), l = h ? s(h) : {};
          e2.exports = function(t3) {
            return "function" == typeof t3 && (!!a.test(n.call(t3)) || (o ? s(t3) === l : "[object GeneratorFunction]" === i.call(t3)));
          };
        }, {}], 48: [function(t2, e2, i) {
          (function(r2) {
            (function() {
              "use strict";
              var i2 = t2("foreach"), n = t2("available-typed-arrays"), a = t2("es-abstract/helpers/callBound"), o = a("Object.prototype.toString"), s = t2("has-symbols")() && "symbol" == typeof Symbol.toStringTag, h = n(), l = a("Array.prototype.indexOf", true) || function(t3, e3) {
                for (var r3 = 0; r3 < t3.length; r3 += 1)
                  if (t3[r3] === e3)
                    return r3;
                return -1;
              }, f = a("String.prototype.slice"), u = {}, c = t2("es-abstract/helpers/getOwnPropertyDescriptor"), d = Object.getPrototypeOf;
              s && c && d && i2(h, function(t3) {
                var e3 = new r2[t3]();
                if (!(Symbol.toStringTag in e3))
                  throw new EvalError("this engine has support for Symbol.toStringTag, but " + t3 + " does not have the property! Please report this.");
                var i3 = d(e3), n2 = c(i3, Symbol.toStringTag);
                if (!n2) {
                  var a2 = d(i3);
                  n2 = c(a2, Symbol.toStringTag);
                }
                u[t3] = n2.get;
              });
              e2.exports = function(t3) {
                if (!t3 || "object" != typeof t3)
                  return false;
                if (!s) {
                  var e3 = f(o(t3), 8, -1);
                  return l(h, e3) > -1;
                }
                return !!c && function(t4) {
                  var e4 = false;
                  return i2(u, function(r3, i3) {
                    if (!e4)
                      try {
                        e4 = r3.call(t4) === i3;
                      } catch (t5) {
                      }
                  }), e4;
                }(t3);
              };
            }).call(this);
          }).call(this, void 0 !== r.g ? r.g : "undefined" != typeof self ? self : "undefined" != typeof window ? window : {});
        }, { "available-typed-arrays": 27, "es-abstract/helpers/callBound": 36, "es-abstract/helpers/getOwnPropertyDescriptor": 37, foreach: 39, "has-symbols": 42 }], 49: [function(t2, e2, r2) {
          "use strict";
          var i = "undefined" != typeof Uint8Array && "undefined" != typeof Uint16Array && "undefined" != typeof Int32Array;
          function n(t3, e3) {
            return Object.prototype.hasOwnProperty.call(t3, e3);
          }
          r2.assign = function(t3) {
            for (var e3 = Array.prototype.slice.call(arguments, 1); e3.length; ) {
              var r3 = e3.shift();
              if (r3) {
                if ("object" != typeof r3)
                  throw new TypeError(r3 + "must be non-object");
                for (var i2 in r3)
                  n(r3, i2) && (t3[i2] = r3[i2]);
              }
            }
            return t3;
          }, r2.shrinkBuf = function(t3, e3) {
            return t3.length === e3 ? t3 : t3.subarray ? t3.subarray(0, e3) : (t3.length = e3, t3);
          };
          var a = { arraySet: function(t3, e3, r3, i2, n2) {
            if (e3.subarray && t3.subarray)
              t3.set(e3.subarray(r3, r3 + i2), n2);
            else
              for (var a2 = 0; a2 < i2; a2++)
                t3[n2 + a2] = e3[r3 + a2];
          }, flattenChunks: function(t3) {
            var e3, r3, i2, n2, a2, o2;
            for (i2 = 0, e3 = 0, r3 = t3.length; e3 < r3; e3++)
              i2 += t3[e3].length;
            for (o2 = new Uint8Array(i2), n2 = 0, e3 = 0, r3 = t3.length; e3 < r3; e3++)
              a2 = t3[e3], o2.set(a2, n2), n2 += a2.length;
            return o2;
          } }, o = { arraySet: function(t3, e3, r3, i2, n2) {
            for (var a2 = 0; a2 < i2; a2++)
              t3[n2 + a2] = e3[r3 + a2];
          }, flattenChunks: function(t3) {
            return [].concat.apply([], t3);
          } };
          r2.setTyped = function(t3) {
            t3 ? (r2.Buf8 = Uint8Array, r2.Buf16 = Uint16Array, r2.Buf32 = Int32Array, r2.assign(r2, a)) : (r2.Buf8 = Array, r2.Buf16 = Array, r2.Buf32 = Array, r2.assign(r2, o));
          }, r2.setTyped(i);
        }, {}], 50: [function(t2, e2, r2) {
          "use strict";
          e2.exports = function(t3, e3, r3, i) {
            for (var n = 65535 & t3 | 0, a = t3 >>> 16 & 65535 | 0, o = 0; 0 !== r3; ) {
              r3 -= o = r3 > 2e3 ? 2e3 : r3;
              do {
                a = a + (n = n + e3[i++] | 0) | 0;
              } while (--o);
              n %= 65521, a %= 65521;
            }
            return n | a << 16 | 0;
          };
        }, {}], 51: [function(t2, e2, r2) {
          "use strict";
          e2.exports = { Z_NO_FLUSH: 0, Z_PARTIAL_FLUSH: 1, Z_SYNC_FLUSH: 2, Z_FULL_FLUSH: 3, Z_FINISH: 4, Z_BLOCK: 5, Z_TREES: 6, Z_OK: 0, Z_STREAM_END: 1, Z_NEED_DICT: 2, Z_ERRNO: -1, Z_STREAM_ERROR: -2, Z_DATA_ERROR: -3, Z_BUF_ERROR: -5, Z_NO_COMPRESSION: 0, Z_BEST_SPEED: 1, Z_BEST_COMPRESSION: 9, Z_DEFAULT_COMPRESSION: -1, Z_FILTERED: 1, Z_HUFFMAN_ONLY: 2, Z_RLE: 3, Z_FIXED: 4, Z_DEFAULT_STRATEGY: 0, Z_BINARY: 0, Z_TEXT: 1, Z_UNKNOWN: 2, Z_DEFLATED: 8 };
        }, {}], 52: [function(t2, e2, r2) {
          "use strict";
          var i = function() {
            for (var t3, e3 = [], r3 = 0; r3 < 256; r3++) {
              t3 = r3;
              for (var i2 = 0; i2 < 8; i2++)
                t3 = 1 & t3 ? 3988292384 ^ t3 >>> 1 : t3 >>> 1;
              e3[r3] = t3;
            }
            return e3;
          }();
          e2.exports = function(t3, e3, r3, n) {
            var a = i, o = n + r3;
            t3 ^= -1;
            for (var s = n; s < o; s++)
              t3 = t3 >>> 8 ^ a[255 & (t3 ^ e3[s])];
            return -1 ^ t3;
          };
        }, {}], 53: [function(t2, e2, r2) {
          "use strict";
          var i, n = t2("../utils/common"), a = t2("./trees"), o = t2("./adler32"), s = t2("./crc32"), h = t2("./messages"), l = 0, f = 1, u = 3, c = 4, d = 5, p = 0, m = 1, g = -2, b = -3, _ = -5, y = -1, w = 1, v = 2, x = 3, E = 4, k = 0, S = 2, M = 8, A = 9, I = 15, B = 8, T = 286, R = 30, P = 19, O = 2 * T + 1, L = 15, C = 3, U = 258, z = U + C + 1, D = 32, N = 42, F = 69, j = 73, G = 91, H = 103, W = 113, q = 666, Z = 1, Y = 2, V = 3, X = 4, J = 3;
          function Q(t3, e3) {
            return t3.msg = h[e3], e3;
          }
          function K(t3) {
            return (t3 << 1) - (t3 > 4 ? 9 : 0);
          }
          function $(t3) {
            for (var e3 = t3.length; --e3 >= 0; )
              t3[e3] = 0;
          }
          function tt(t3) {
            var e3 = t3.state, r3 = e3.pending;
            r3 > t3.avail_out && (r3 = t3.avail_out), 0 !== r3 && (n.arraySet(t3.output, e3.pending_buf, e3.pending_out, r3, t3.next_out), t3.next_out += r3, e3.pending_out += r3, t3.total_out += r3, t3.avail_out -= r3, e3.pending -= r3, 0 === e3.pending && (e3.pending_out = 0));
          }
          function et(t3, e3) {
            a._tr_flush_block(t3, t3.block_start >= 0 ? t3.block_start : -1, t3.strstart - t3.block_start, e3), t3.block_start = t3.strstart, tt(t3.strm);
          }
          function rt(t3, e3) {
            t3.pending_buf[t3.pending++] = e3;
          }
          function it(t3, e3) {
            t3.pending_buf[t3.pending++] = e3 >>> 8 & 255, t3.pending_buf[t3.pending++] = 255 & e3;
          }
          function nt(t3, e3) {
            var r3, i2, n2 = t3.max_chain_length, a2 = t3.strstart, o2 = t3.prev_length, s2 = t3.nice_match, h2 = t3.strstart > t3.w_size - z ? t3.strstart - (t3.w_size - z) : 0, l2 = t3.window, f2 = t3.w_mask, u2 = t3.prev, c2 = t3.strstart + U, d2 = l2[a2 + o2 - 1], p2 = l2[a2 + o2];
            t3.prev_length >= t3.good_match && (n2 >>= 2), s2 > t3.lookahead && (s2 = t3.lookahead);
            do {
              if (l2[(r3 = e3) + o2] === p2 && l2[r3 + o2 - 1] === d2 && l2[r3] === l2[a2] && l2[++r3] === l2[a2 + 1]) {
                a2 += 2, r3++;
                do {
                } while (l2[++a2] === l2[++r3] && l2[++a2] === l2[++r3] && l2[++a2] === l2[++r3] && l2[++a2] === l2[++r3] && l2[++a2] === l2[++r3] && l2[++a2] === l2[++r3] && l2[++a2] === l2[++r3] && l2[++a2] === l2[++r3] && a2 < c2);
                if (i2 = U - (c2 - a2), a2 = c2 - U, i2 > o2) {
                  if (t3.match_start = e3, o2 = i2, i2 >= s2)
                    break;
                  d2 = l2[a2 + o2 - 1], p2 = l2[a2 + o2];
                }
              }
            } while ((e3 = u2[e3 & f2]) > h2 && 0 != --n2);
            return o2 <= t3.lookahead ? o2 : t3.lookahead;
          }
          function at(t3) {
            var e3, r3, i2, a2, h2, l2, f2, u2, c2, d2, p2 = t3.w_size;
            do {
              if (a2 = t3.window_size - t3.lookahead - t3.strstart, t3.strstart >= p2 + (p2 - z)) {
                n.arraySet(t3.window, t3.window, p2, p2, 0), t3.match_start -= p2, t3.strstart -= p2, t3.block_start -= p2, e3 = r3 = t3.hash_size;
                do {
                  i2 = t3.head[--e3], t3.head[e3] = i2 >= p2 ? i2 - p2 : 0;
                } while (--r3);
                e3 = r3 = p2;
                do {
                  i2 = t3.prev[--e3], t3.prev[e3] = i2 >= p2 ? i2 - p2 : 0;
                } while (--r3);
                a2 += p2;
              }
              if (0 === t3.strm.avail_in)
                break;
              if (l2 = t3.strm, f2 = t3.window, u2 = t3.strstart + t3.lookahead, c2 = a2, d2 = void 0, (d2 = l2.avail_in) > c2 && (d2 = c2), r3 = 0 === d2 ? 0 : (l2.avail_in -= d2, n.arraySet(f2, l2.input, l2.next_in, d2, u2), 1 === l2.state.wrap ? l2.adler = o(l2.adler, f2, d2, u2) : 2 === l2.state.wrap && (l2.adler = s(l2.adler, f2, d2, u2)), l2.next_in += d2, l2.total_in += d2, d2), t3.lookahead += r3, t3.lookahead + t3.insert >= C)
                for (h2 = t3.strstart - t3.insert, t3.ins_h = t3.window[h2], t3.ins_h = (t3.ins_h << t3.hash_shift ^ t3.window[h2 + 1]) & t3.hash_mask; t3.insert && (t3.ins_h = (t3.ins_h << t3.hash_shift ^ t3.window[h2 + C - 1]) & t3.hash_mask, t3.prev[h2 & t3.w_mask] = t3.head[t3.ins_h], t3.head[t3.ins_h] = h2, h2++, t3.insert--, !(t3.lookahead + t3.insert < C)); )
                  ;
            } while (t3.lookahead < z && 0 !== t3.strm.avail_in);
          }
          function ot(t3, e3) {
            for (var r3, i2; ; ) {
              if (t3.lookahead < z) {
                if (at(t3), t3.lookahead < z && e3 === l)
                  return Z;
                if (0 === t3.lookahead)
                  break;
              }
              if (r3 = 0, t3.lookahead >= C && (t3.ins_h = (t3.ins_h << t3.hash_shift ^ t3.window[t3.strstart + C - 1]) & t3.hash_mask, r3 = t3.prev[t3.strstart & t3.w_mask] = t3.head[t3.ins_h], t3.head[t3.ins_h] = t3.strstart), 0 !== r3 && t3.strstart - r3 <= t3.w_size - z && (t3.match_length = nt(t3, r3)), t3.match_length >= C)
                if (i2 = a._tr_tally(t3, t3.strstart - t3.match_start, t3.match_length - C), t3.lookahead -= t3.match_length, t3.match_length <= t3.max_lazy_match && t3.lookahead >= C) {
                  t3.match_length--;
                  do {
                    t3.strstart++, t3.ins_h = (t3.ins_h << t3.hash_shift ^ t3.window[t3.strstart + C - 1]) & t3.hash_mask, r3 = t3.prev[t3.strstart & t3.w_mask] = t3.head[t3.ins_h], t3.head[t3.ins_h] = t3.strstart;
                  } while (0 != --t3.match_length);
                  t3.strstart++;
                } else
                  t3.strstart += t3.match_length, t3.match_length = 0, t3.ins_h = t3.window[t3.strstart], t3.ins_h = (t3.ins_h << t3.hash_shift ^ t3.window[t3.strstart + 1]) & t3.hash_mask;
              else
                i2 = a._tr_tally(t3, 0, t3.window[t3.strstart]), t3.lookahead--, t3.strstart++;
              if (i2 && (et(t3, false), 0 === t3.strm.avail_out))
                return Z;
            }
            return t3.insert = t3.strstart < C - 1 ? t3.strstart : C - 1, e3 === c ? (et(t3, true), 0 === t3.strm.avail_out ? V : X) : t3.last_lit && (et(t3, false), 0 === t3.strm.avail_out) ? Z : Y;
          }
          function st(t3, e3) {
            for (var r3, i2, n2; ; ) {
              if (t3.lookahead < z) {
                if (at(t3), t3.lookahead < z && e3 === l)
                  return Z;
                if (0 === t3.lookahead)
                  break;
              }
              if (r3 = 0, t3.lookahead >= C && (t3.ins_h = (t3.ins_h << t3.hash_shift ^ t3.window[t3.strstart + C - 1]) & t3.hash_mask, r3 = t3.prev[t3.strstart & t3.w_mask] = t3.head[t3.ins_h], t3.head[t3.ins_h] = t3.strstart), t3.prev_length = t3.match_length, t3.prev_match = t3.match_start, t3.match_length = C - 1, 0 !== r3 && t3.prev_length < t3.max_lazy_match && t3.strstart - r3 <= t3.w_size - z && (t3.match_length = nt(t3, r3), t3.match_length <= 5 && (t3.strategy === w || t3.match_length === C && t3.strstart - t3.match_start > 4096) && (t3.match_length = C - 1)), t3.prev_length >= C && t3.match_length <= t3.prev_length) {
                n2 = t3.strstart + t3.lookahead - C, i2 = a._tr_tally(t3, t3.strstart - 1 - t3.prev_match, t3.prev_length - C), t3.lookahead -= t3.prev_length - 1, t3.prev_length -= 2;
                do {
                  ++t3.strstart <= n2 && (t3.ins_h = (t3.ins_h << t3.hash_shift ^ t3.window[t3.strstart + C - 1]) & t3.hash_mask, r3 = t3.prev[t3.strstart & t3.w_mask] = t3.head[t3.ins_h], t3.head[t3.ins_h] = t3.strstart);
                } while (0 != --t3.prev_length);
                if (t3.match_available = 0, t3.match_length = C - 1, t3.strstart++, i2 && (et(t3, false), 0 === t3.strm.avail_out))
                  return Z;
              } else if (t3.match_available) {
                if ((i2 = a._tr_tally(t3, 0, t3.window[t3.strstart - 1])) && et(t3, false), t3.strstart++, t3.lookahead--, 0 === t3.strm.avail_out)
                  return Z;
              } else
                t3.match_available = 1, t3.strstart++, t3.lookahead--;
            }
            return t3.match_available && (i2 = a._tr_tally(t3, 0, t3.window[t3.strstart - 1]), t3.match_available = 0), t3.insert = t3.strstart < C - 1 ? t3.strstart : C - 1, e3 === c ? (et(t3, true), 0 === t3.strm.avail_out ? V : X) : t3.last_lit && (et(t3, false), 0 === t3.strm.avail_out) ? Z : Y;
          }
          function ht(t3, e3, r3, i2, n2) {
            this.good_length = t3, this.max_lazy = e3, this.nice_length = r3, this.max_chain = i2, this.func = n2;
          }
          function lt() {
            this.strm = null, this.status = 0, this.pending_buf = null, this.pending_buf_size = 0, this.pending_out = 0, this.pending = 0, this.wrap = 0, this.gzhead = null, this.gzindex = 0, this.method = M, this.last_flush = -1, this.w_size = 0, this.w_bits = 0, this.w_mask = 0, this.window = null, this.window_size = 0, this.prev = null, this.head = null, this.ins_h = 0, this.hash_size = 0, this.hash_bits = 0, this.hash_mask = 0, this.hash_shift = 0, this.block_start = 0, this.match_length = 0, this.prev_match = 0, this.match_available = 0, this.strstart = 0, this.match_start = 0, this.lookahead = 0, this.prev_length = 0, this.max_chain_length = 0, this.max_lazy_match = 0, this.level = 0, this.strategy = 0, this.good_match = 0, this.nice_match = 0, this.dyn_ltree = new n.Buf16(2 * O), this.dyn_dtree = new n.Buf16(2 * (2 * R + 1)), this.bl_tree = new n.Buf16(2 * (2 * P + 1)), $(this.dyn_ltree), $(this.dyn_dtree), $(this.bl_tree), this.l_desc = null, this.d_desc = null, this.bl_desc = null, this.bl_count = new n.Buf16(L + 1), this.heap = new n.Buf16(2 * T + 1), $(this.heap), this.heap_len = 0, this.heap_max = 0, this.depth = new n.Buf16(2 * T + 1), $(this.depth), this.l_buf = 0, this.lit_bufsize = 0, this.last_lit = 0, this.d_buf = 0, this.opt_len = 0, this.static_len = 0, this.matches = 0, this.insert = 0, this.bi_buf = 0, this.bi_valid = 0;
          }
          function ft(t3) {
            var e3;
            return t3 && t3.state ? (t3.total_in = t3.total_out = 0, t3.data_type = S, (e3 = t3.state).pending = 0, e3.pending_out = 0, e3.wrap < 0 && (e3.wrap = -e3.wrap), e3.status = e3.wrap ? N : W, t3.adler = 2 === e3.wrap ? 0 : 1, e3.last_flush = l, a._tr_init(e3), p) : Q(t3, g);
          }
          function ut(t3) {
            var e3, r3 = ft(t3);
            return r3 === p && ((e3 = t3.state).window_size = 2 * e3.w_size, $(e3.head), e3.max_lazy_match = i[e3.level].max_lazy, e3.good_match = i[e3.level].good_length, e3.nice_match = i[e3.level].nice_length, e3.max_chain_length = i[e3.level].max_chain, e3.strstart = 0, e3.block_start = 0, e3.lookahead = 0, e3.insert = 0, e3.match_length = e3.prev_length = C - 1, e3.match_available = 0, e3.ins_h = 0), r3;
          }
          function ct(t3, e3, r3, i2, a2, o2) {
            if (!t3)
              return g;
            var s2 = 1;
            if (e3 === y && (e3 = 6), i2 < 0 ? (s2 = 0, i2 = -i2) : i2 > 15 && (s2 = 2, i2 -= 16), a2 < 1 || a2 > A || r3 !== M || i2 < 8 || i2 > 15 || e3 < 0 || e3 > 9 || o2 < 0 || o2 > E)
              return Q(t3, g);
            8 === i2 && (i2 = 9);
            var h2 = new lt();
            return t3.state = h2, h2.strm = t3, h2.wrap = s2, h2.gzhead = null, h2.w_bits = i2, h2.w_size = 1 << h2.w_bits, h2.w_mask = h2.w_size - 1, h2.hash_bits = a2 + 7, h2.hash_size = 1 << h2.hash_bits, h2.hash_mask = h2.hash_size - 1, h2.hash_shift = ~~((h2.hash_bits + C - 1) / C), h2.window = new n.Buf8(2 * h2.w_size), h2.head = new n.Buf16(h2.hash_size), h2.prev = new n.Buf16(h2.w_size), h2.lit_bufsize = 1 << a2 + 6, h2.pending_buf_size = 4 * h2.lit_bufsize, h2.pending_buf = new n.Buf8(h2.pending_buf_size), h2.d_buf = 1 * h2.lit_bufsize, h2.l_buf = 3 * h2.lit_bufsize, h2.level = e3, h2.strategy = o2, h2.method = r3, ut(t3);
          }
          i = [new ht(0, 0, 0, 0, function(t3, e3) {
            var r3 = 65535;
            for (r3 > t3.pending_buf_size - 5 && (r3 = t3.pending_buf_size - 5); ; ) {
              if (t3.lookahead <= 1) {
                if (at(t3), 0 === t3.lookahead && e3 === l)
                  return Z;
                if (0 === t3.lookahead)
                  break;
              }
              t3.strstart += t3.lookahead, t3.lookahead = 0;
              var i2 = t3.block_start + r3;
              if ((0 === t3.strstart || t3.strstart >= i2) && (t3.lookahead = t3.strstart - i2, t3.strstart = i2, et(t3, false), 0 === t3.strm.avail_out))
                return Z;
              if (t3.strstart - t3.block_start >= t3.w_size - z && (et(t3, false), 0 === t3.strm.avail_out))
                return Z;
            }
            return t3.insert = 0, e3 === c ? (et(t3, true), 0 === t3.strm.avail_out ? V : X) : (t3.strstart > t3.block_start && (et(t3, false), t3.strm.avail_out), Z);
          }), new ht(4, 4, 8, 4, ot), new ht(4, 5, 16, 8, ot), new ht(4, 6, 32, 32, ot), new ht(4, 4, 16, 16, st), new ht(8, 16, 32, 32, st), new ht(8, 16, 128, 128, st), new ht(8, 32, 128, 256, st), new ht(32, 128, 258, 1024, st), new ht(32, 258, 258, 4096, st)], r2.deflateInit = function(t3, e3) {
            return ct(t3, e3, M, I, B, k);
          }, r2.deflateInit2 = ct, r2.deflateReset = ut, r2.deflateResetKeep = ft, r2.deflateSetHeader = function(t3, e3) {
            return t3 && t3.state ? 2 !== t3.state.wrap ? g : (t3.state.gzhead = e3, p) : g;
          }, r2.deflate = function(t3, e3) {
            var r3, n2, o2, h2;
            if (!t3 || !t3.state || e3 > d || e3 < 0)
              return t3 ? Q(t3, g) : g;
            if (n2 = t3.state, !t3.output || !t3.input && 0 !== t3.avail_in || n2.status === q && e3 !== c)
              return Q(t3, 0 === t3.avail_out ? _ : g);
            if (n2.strm = t3, r3 = n2.last_flush, n2.last_flush = e3, n2.status === N)
              if (2 === n2.wrap)
                t3.adler = 0, rt(n2, 31), rt(n2, 139), rt(n2, 8), n2.gzhead ? (rt(n2, (n2.gzhead.text ? 1 : 0) + (n2.gzhead.hcrc ? 2 : 0) + (n2.gzhead.extra ? 4 : 0) + (n2.gzhead.name ? 8 : 0) + (n2.gzhead.comment ? 16 : 0)), rt(n2, 255 & n2.gzhead.time), rt(n2, n2.gzhead.time >> 8 & 255), rt(n2, n2.gzhead.time >> 16 & 255), rt(n2, n2.gzhead.time >> 24 & 255), rt(n2, 9 === n2.level ? 2 : n2.strategy >= v || n2.level < 2 ? 4 : 0), rt(n2, 255 & n2.gzhead.os), n2.gzhead.extra && n2.gzhead.extra.length && (rt(n2, 255 & n2.gzhead.extra.length), rt(n2, n2.gzhead.extra.length >> 8 & 255)), n2.gzhead.hcrc && (t3.adler = s(t3.adler, n2.pending_buf, n2.pending, 0)), n2.gzindex = 0, n2.status = F) : (rt(n2, 0), rt(n2, 0), rt(n2, 0), rt(n2, 0), rt(n2, 0), rt(n2, 9 === n2.level ? 2 : n2.strategy >= v || n2.level < 2 ? 4 : 0), rt(n2, J), n2.status = W);
              else {
                var b2 = M + (n2.w_bits - 8 << 4) << 8;
                b2 |= (n2.strategy >= v || n2.level < 2 ? 0 : n2.level < 6 ? 1 : 6 === n2.level ? 2 : 3) << 6, 0 !== n2.strstart && (b2 |= D), b2 += 31 - b2 % 31, n2.status = W, it(n2, b2), 0 !== n2.strstart && (it(n2, t3.adler >>> 16), it(n2, 65535 & t3.adler)), t3.adler = 1;
              }
            if (n2.status === F)
              if (n2.gzhead.extra) {
                for (o2 = n2.pending; n2.gzindex < (65535 & n2.gzhead.extra.length) && (n2.pending !== n2.pending_buf_size || (n2.gzhead.hcrc && n2.pending > o2 && (t3.adler = s(t3.adler, n2.pending_buf, n2.pending - o2, o2)), tt(t3), o2 = n2.pending, n2.pending !== n2.pending_buf_size)); )
                  rt(n2, 255 & n2.gzhead.extra[n2.gzindex]), n2.gzindex++;
                n2.gzhead.hcrc && n2.pending > o2 && (t3.adler = s(t3.adler, n2.pending_buf, n2.pending - o2, o2)), n2.gzindex === n2.gzhead.extra.length && (n2.gzindex = 0, n2.status = j);
              } else
                n2.status = j;
            if (n2.status === j)
              if (n2.gzhead.name) {
                o2 = n2.pending;
                do {
                  if (n2.pending === n2.pending_buf_size && (n2.gzhead.hcrc && n2.pending > o2 && (t3.adler = s(t3.adler, n2.pending_buf, n2.pending - o2, o2)), tt(t3), o2 = n2.pending, n2.pending === n2.pending_buf_size)) {
                    h2 = 1;
                    break;
                  }
                  h2 = n2.gzindex < n2.gzhead.name.length ? 255 & n2.gzhead.name.charCodeAt(n2.gzindex++) : 0, rt(n2, h2);
                } while (0 !== h2);
                n2.gzhead.hcrc && n2.pending > o2 && (t3.adler = s(t3.adler, n2.pending_buf, n2.pending - o2, o2)), 0 === h2 && (n2.gzindex = 0, n2.status = G);
              } else
                n2.status = G;
            if (n2.status === G)
              if (n2.gzhead.comment) {
                o2 = n2.pending;
                do {
                  if (n2.pending === n2.pending_buf_size && (n2.gzhead.hcrc && n2.pending > o2 && (t3.adler = s(t3.adler, n2.pending_buf, n2.pending - o2, o2)), tt(t3), o2 = n2.pending, n2.pending === n2.pending_buf_size)) {
                    h2 = 1;
                    break;
                  }
                  h2 = n2.gzindex < n2.gzhead.comment.length ? 255 & n2.gzhead.comment.charCodeAt(n2.gzindex++) : 0, rt(n2, h2);
                } while (0 !== h2);
                n2.gzhead.hcrc && n2.pending > o2 && (t3.adler = s(t3.adler, n2.pending_buf, n2.pending - o2, o2)), 0 === h2 && (n2.status = H);
              } else
                n2.status = H;
            if (n2.status === H && (n2.gzhead.hcrc ? (n2.pending + 2 > n2.pending_buf_size && tt(t3), n2.pending + 2 <= n2.pending_buf_size && (rt(n2, 255 & t3.adler), rt(n2, t3.adler >> 8 & 255), t3.adler = 0, n2.status = W)) : n2.status = W), 0 !== n2.pending) {
              if (tt(t3), 0 === t3.avail_out)
                return n2.last_flush = -1, p;
            } else if (0 === t3.avail_in && K(e3) <= K(r3) && e3 !== c)
              return Q(t3, _);
            if (n2.status === q && 0 !== t3.avail_in)
              return Q(t3, _);
            if (0 !== t3.avail_in || 0 !== n2.lookahead || e3 !== l && n2.status !== q) {
              var y2 = n2.strategy === v ? function(t4, e4) {
                for (var r4; ; ) {
                  if (0 === t4.lookahead && (at(t4), 0 === t4.lookahead)) {
                    if (e4 === l)
                      return Z;
                    break;
                  }
                  if (t4.match_length = 0, r4 = a._tr_tally(t4, 0, t4.window[t4.strstart]), t4.lookahead--, t4.strstart++, r4 && (et(t4, false), 0 === t4.strm.avail_out))
                    return Z;
                }
                return t4.insert = 0, e4 === c ? (et(t4, true), 0 === t4.strm.avail_out ? V : X) : t4.last_lit && (et(t4, false), 0 === t4.strm.avail_out) ? Z : Y;
              }(n2, e3) : n2.strategy === x ? function(t4, e4) {
                for (var r4, i2, n3, o3, s2 = t4.window; ; ) {
                  if (t4.lookahead <= U) {
                    if (at(t4), t4.lookahead <= U && e4 === l)
                      return Z;
                    if (0 === t4.lookahead)
                      break;
                  }
                  if (t4.match_length = 0, t4.lookahead >= C && t4.strstart > 0 && (i2 = s2[n3 = t4.strstart - 1]) === s2[++n3] && i2 === s2[++n3] && i2 === s2[++n3]) {
                    o3 = t4.strstart + U;
                    do {
                    } while (i2 === s2[++n3] && i2 === s2[++n3] && i2 === s2[++n3] && i2 === s2[++n3] && i2 === s2[++n3] && i2 === s2[++n3] && i2 === s2[++n3] && i2 === s2[++n3] && n3 < o3);
                    t4.match_length = U - (o3 - n3), t4.match_length > t4.lookahead && (t4.match_length = t4.lookahead);
                  }
                  if (t4.match_length >= C ? (r4 = a._tr_tally(t4, 1, t4.match_length - C), t4.lookahead -= t4.match_length, t4.strstart += t4.match_length, t4.match_length = 0) : (r4 = a._tr_tally(t4, 0, t4.window[t4.strstart]), t4.lookahead--, t4.strstart++), r4 && (et(t4, false), 0 === t4.strm.avail_out))
                    return Z;
                }
                return t4.insert = 0, e4 === c ? (et(t4, true), 0 === t4.strm.avail_out ? V : X) : t4.last_lit && (et(t4, false), 0 === t4.strm.avail_out) ? Z : Y;
              }(n2, e3) : i[n2.level].func(n2, e3);
              if (y2 !== V && y2 !== X || (n2.status = q), y2 === Z || y2 === V)
                return 0 === t3.avail_out && (n2.last_flush = -1), p;
              if (y2 === Y && (e3 === f ? a._tr_align(n2) : e3 !== d && (a._tr_stored_block(n2, 0, 0, false), e3 === u && ($(n2.head), 0 === n2.lookahead && (n2.strstart = 0, n2.block_start = 0, n2.insert = 0))), tt(t3), 0 === t3.avail_out))
                return n2.last_flush = -1, p;
            }
            return e3 !== c ? p : n2.wrap <= 0 ? m : (2 === n2.wrap ? (rt(n2, 255 & t3.adler), rt(n2, t3.adler >> 8 & 255), rt(n2, t3.adler >> 16 & 255), rt(n2, t3.adler >> 24 & 255), rt(n2, 255 & t3.total_in), rt(n2, t3.total_in >> 8 & 255), rt(n2, t3.total_in >> 16 & 255), rt(n2, t3.total_in >> 24 & 255)) : (it(n2, t3.adler >>> 16), it(n2, 65535 & t3.adler)), tt(t3), n2.wrap > 0 && (n2.wrap = -n2.wrap), 0 !== n2.pending ? p : m);
          }, r2.deflateEnd = function(t3) {
            var e3;
            return t3 && t3.state ? (e3 = t3.state.status) !== N && e3 !== F && e3 !== j && e3 !== G && e3 !== H && e3 !== W && e3 !== q ? Q(t3, g) : (t3.state = null, e3 === W ? Q(t3, b) : p) : g;
          }, r2.deflateSetDictionary = function(t3, e3) {
            var r3, i2, a2, s2, h2, l2, f2, u2, c2 = e3.length;
            if (!t3 || !t3.state)
              return g;
            if (2 === (s2 = (r3 = t3.state).wrap) || 1 === s2 && r3.status !== N || r3.lookahead)
              return g;
            for (1 === s2 && (t3.adler = o(t3.adler, e3, c2, 0)), r3.wrap = 0, c2 >= r3.w_size && (0 === s2 && ($(r3.head), r3.strstart = 0, r3.block_start = 0, r3.insert = 0), u2 = new n.Buf8(r3.w_size), n.arraySet(u2, e3, c2 - r3.w_size, r3.w_size, 0), e3 = u2, c2 = r3.w_size), h2 = t3.avail_in, l2 = t3.next_in, f2 = t3.input, t3.avail_in = c2, t3.next_in = 0, t3.input = e3, at(r3); r3.lookahead >= C; ) {
              i2 = r3.strstart, a2 = r3.lookahead - (C - 1);
              do {
                r3.ins_h = (r3.ins_h << r3.hash_shift ^ r3.window[i2 + C - 1]) & r3.hash_mask, r3.prev[i2 & r3.w_mask] = r3.head[r3.ins_h], r3.head[r3.ins_h] = i2, i2++;
              } while (--a2);
              r3.strstart = i2, r3.lookahead = C - 1, at(r3);
            }
            return r3.strstart += r3.lookahead, r3.block_start = r3.strstart, r3.insert = r3.lookahead, r3.lookahead = 0, r3.match_length = r3.prev_length = C - 1, r3.match_available = 0, t3.next_in = l2, t3.input = f2, t3.avail_in = h2, r3.wrap = s2, p;
          }, r2.deflateInfo = "pako deflate (from Nodeca project)";
        }, { "../utils/common": 49, "./adler32": 50, "./crc32": 52, "./messages": 57, "./trees": 58 }], 54: [function(t2, e2, r2) {
          "use strict";
          e2.exports = function(t3, e3) {
            var r3, i, n, a, o, s, h, l, f, u, c, d, p, m, g, b, _, y, w, v, x, E, k, S, M;
            r3 = t3.state, i = t3.next_in, S = t3.input, n = i + (t3.avail_in - 5), a = t3.next_out, M = t3.output, o = a - (e3 - t3.avail_out), s = a + (t3.avail_out - 257), h = r3.dmax, l = r3.wsize, f = r3.whave, u = r3.wnext, c = r3.window, d = r3.hold, p = r3.bits, m = r3.lencode, g = r3.distcode, b = (1 << r3.lenbits) - 1, _ = (1 << r3.distbits) - 1;
            t:
              do {
                p < 15 && (d += S[i++] << p, p += 8, d += S[i++] << p, p += 8), y = m[d & b];
                e:
                  for (; ; ) {
                    if (d >>>= w = y >>> 24, p -= w, 0 == (w = y >>> 16 & 255))
                      M[a++] = 65535 & y;
                    else {
                      if (!(16 & w)) {
                        if (0 == (64 & w)) {
                          y = m[(65535 & y) + (d & (1 << w) - 1)];
                          continue e;
                        }
                        if (32 & w) {
                          r3.mode = 12;
                          break t;
                        }
                        t3.msg = "invalid literal/length code", r3.mode = 30;
                        break t;
                      }
                      v = 65535 & y, (w &= 15) && (p < w && (d += S[i++] << p, p += 8), v += d & (1 << w) - 1, d >>>= w, p -= w), p < 15 && (d += S[i++] << p, p += 8, d += S[i++] << p, p += 8), y = g[d & _];
                      r:
                        for (; ; ) {
                          if (d >>>= w = y >>> 24, p -= w, !(16 & (w = y >>> 16 & 255))) {
                            if (0 == (64 & w)) {
                              y = g[(65535 & y) + (d & (1 << w) - 1)];
                              continue r;
                            }
                            t3.msg = "invalid distance code", r3.mode = 30;
                            break t;
                          }
                          if (x = 65535 & y, p < (w &= 15) && (d += S[i++] << p, (p += 8) < w && (d += S[i++] << p, p += 8)), (x += d & (1 << w) - 1) > h) {
                            t3.msg = "invalid distance too far back", r3.mode = 30;
                            break t;
                          }
                          if (d >>>= w, p -= w, x > (w = a - o)) {
                            if ((w = x - w) > f && r3.sane) {
                              t3.msg = "invalid distance too far back", r3.mode = 30;
                              break t;
                            }
                            if (E = 0, k = c, 0 === u) {
                              if (E += l - w, w < v) {
                                v -= w;
                                do {
                                  M[a++] = c[E++];
                                } while (--w);
                                E = a - x, k = M;
                              }
                            } else if (u < w) {
                              if (E += l + u - w, (w -= u) < v) {
                                v -= w;
                                do {
                                  M[a++] = c[E++];
                                } while (--w);
                                if (E = 0, u < v) {
                                  v -= w = u;
                                  do {
                                    M[a++] = c[E++];
                                  } while (--w);
                                  E = a - x, k = M;
                                }
                              }
                            } else if (E += u - w, w < v) {
                              v -= w;
                              do {
                                M[a++] = c[E++];
                              } while (--w);
                              E = a - x, k = M;
                            }
                            for (; v > 2; )
                              M[a++] = k[E++], M[a++] = k[E++], M[a++] = k[E++], v -= 3;
                            v && (M[a++] = k[E++], v > 1 && (M[a++] = k[E++]));
                          } else {
                            E = a - x;
                            do {
                              M[a++] = M[E++], M[a++] = M[E++], M[a++] = M[E++], v -= 3;
                            } while (v > 2);
                            v && (M[a++] = M[E++], v > 1 && (M[a++] = M[E++]));
                          }
                          break;
                        }
                    }
                    break;
                  }
              } while (i < n && a < s);
            i -= v = p >> 3, d &= (1 << (p -= v << 3)) - 1, t3.next_in = i, t3.next_out = a, t3.avail_in = i < n ? n - i + 5 : 5 - (i - n), t3.avail_out = a < s ? s - a + 257 : 257 - (a - s), r3.hold = d, r3.bits = p;
          };
        }, {}], 55: [function(t2, e2, r2) {
          "use strict";
          var i = t2("../utils/common"), n = t2("./adler32"), a = t2("./crc32"), o = t2("./inffast"), s = t2("./inftrees"), h = 0, l = 1, f = 2, u = 4, c = 5, d = 6, p = 0, m = 1, g = 2, b = -2, _ = -3, y = -4, w = -5, v = 8, x = 1, E = 2, k = 3, S = 4, M = 5, A = 6, I = 7, B = 8, T = 9, R = 10, P = 11, O = 12, L = 13, C = 14, U = 15, z = 16, D = 17, N = 18, F = 19, j = 20, G = 21, H = 22, W = 23, q = 24, Z = 25, Y = 26, V = 27, X = 28, J = 29, Q = 30, K = 31, $ = 852, tt = 592, et = 15;
          function rt(t3) {
            return (t3 >>> 24 & 255) + (t3 >>> 8 & 65280) + ((65280 & t3) << 8) + ((255 & t3) << 24);
          }
          function it() {
            this.mode = 0, this.last = false, this.wrap = 0, this.havedict = false, this.flags = 0, this.dmax = 0, this.check = 0, this.total = 0, this.head = null, this.wbits = 0, this.wsize = 0, this.whave = 0, this.wnext = 0, this.window = null, this.hold = 0, this.bits = 0, this.length = 0, this.offset = 0, this.extra = 0, this.lencode = null, this.distcode = null, this.lenbits = 0, this.distbits = 0, this.ncode = 0, this.nlen = 0, this.ndist = 0, this.have = 0, this.next = null, this.lens = new i.Buf16(320), this.work = new i.Buf16(288), this.lendyn = null, this.distdyn = null, this.sane = 0, this.back = 0, this.was = 0;
          }
          function nt(t3) {
            var e3;
            return t3 && t3.state ? (e3 = t3.state, t3.total_in = t3.total_out = e3.total = 0, t3.msg = "", e3.wrap && (t3.adler = 1 & e3.wrap), e3.mode = x, e3.last = 0, e3.havedict = 0, e3.dmax = 32768, e3.head = null, e3.hold = 0, e3.bits = 0, e3.lencode = e3.lendyn = new i.Buf32($), e3.distcode = e3.distdyn = new i.Buf32(tt), e3.sane = 1, e3.back = -1, p) : b;
          }
          function at(t3) {
            var e3;
            return t3 && t3.state ? ((e3 = t3.state).wsize = 0, e3.whave = 0, e3.wnext = 0, nt(t3)) : b;
          }
          function ot(t3, e3) {
            var r3, i2;
            return t3 && t3.state ? (i2 = t3.state, e3 < 0 ? (r3 = 0, e3 = -e3) : (r3 = 1 + (e3 >> 4), e3 < 48 && (e3 &= 15)), e3 && (e3 < 8 || e3 > 15) ? b : (null !== i2.window && i2.wbits !== e3 && (i2.window = null), i2.wrap = r3, i2.wbits = e3, at(t3))) : b;
          }
          function st(t3, e3) {
            var r3, i2;
            return t3 ? (i2 = new it(), t3.state = i2, i2.window = null, (r3 = ot(t3, e3)) !== p && (t3.state = null), r3) : b;
          }
          var ht, lt, ft = true;
          function ut(t3) {
            if (ft) {
              var e3;
              for (ht = new i.Buf32(512), lt = new i.Buf32(32), e3 = 0; e3 < 144; )
                t3.lens[e3++] = 8;
              for (; e3 < 256; )
                t3.lens[e3++] = 9;
              for (; e3 < 280; )
                t3.lens[e3++] = 7;
              for (; e3 < 288; )
                t3.lens[e3++] = 8;
              for (s(l, t3.lens, 0, 288, ht, 0, t3.work, { bits: 9 }), e3 = 0; e3 < 32; )
                t3.lens[e3++] = 5;
              s(f, t3.lens, 0, 32, lt, 0, t3.work, { bits: 5 }), ft = false;
            }
            t3.lencode = ht, t3.lenbits = 9, t3.distcode = lt, t3.distbits = 5;
          }
          function ct(t3, e3, r3, n2) {
            var a2, o2 = t3.state;
            return null === o2.window && (o2.wsize = 1 << o2.wbits, o2.wnext = 0, o2.whave = 0, o2.window = new i.Buf8(o2.wsize)), n2 >= o2.wsize ? (i.arraySet(o2.window, e3, r3 - o2.wsize, o2.wsize, 0), o2.wnext = 0, o2.whave = o2.wsize) : ((a2 = o2.wsize - o2.wnext) > n2 && (a2 = n2), i.arraySet(o2.window, e3, r3 - n2, a2, o2.wnext), (n2 -= a2) ? (i.arraySet(o2.window, e3, r3 - n2, n2, 0), o2.wnext = n2, o2.whave = o2.wsize) : (o2.wnext += a2, o2.wnext === o2.wsize && (o2.wnext = 0), o2.whave < o2.wsize && (o2.whave += a2))), 0;
          }
          r2.inflateReset = at, r2.inflateReset2 = ot, r2.inflateResetKeep = nt, r2.inflateInit = function(t3) {
            return st(t3, et);
          }, r2.inflateInit2 = st, r2.inflate = function(t3, e3) {
            var r3, $2, tt2, et2, it2, nt2, at2, ot2, st2, ht2, lt2, ft2, dt, pt, mt, gt, bt, _t, yt, wt, vt, xt, Et, kt, St = 0, Mt = new i.Buf8(4), At = [16, 17, 18, 0, 8, 7, 9, 6, 10, 5, 11, 4, 12, 3, 13, 2, 14, 1, 15];
            if (!t3 || !t3.state || !t3.output || !t3.input && 0 !== t3.avail_in)
              return b;
            (r3 = t3.state).mode === O && (r3.mode = L), it2 = t3.next_out, tt2 = t3.output, at2 = t3.avail_out, et2 = t3.next_in, $2 = t3.input, nt2 = t3.avail_in, ot2 = r3.hold, st2 = r3.bits, ht2 = nt2, lt2 = at2, xt = p;
            t:
              for (; ; )
                switch (r3.mode) {
                  case x:
                    if (0 === r3.wrap) {
                      r3.mode = L;
                      break;
                    }
                    for (; st2 < 16; ) {
                      if (0 === nt2)
                        break t;
                      nt2--, ot2 += $2[et2++] << st2, st2 += 8;
                    }
                    if (2 & r3.wrap && 35615 === ot2) {
                      r3.check = 0, Mt[0] = 255 & ot2, Mt[1] = ot2 >>> 8 & 255, r3.check = a(r3.check, Mt, 2, 0), ot2 = 0, st2 = 0, r3.mode = E;
                      break;
                    }
                    if (r3.flags = 0, r3.head && (r3.head.done = false), !(1 & r3.wrap) || (((255 & ot2) << 8) + (ot2 >> 8)) % 31) {
                      t3.msg = "incorrect header check", r3.mode = Q;
                      break;
                    }
                    if ((15 & ot2) !== v) {
                      t3.msg = "unknown compression method", r3.mode = Q;
                      break;
                    }
                    if (st2 -= 4, vt = 8 + (15 & (ot2 >>>= 4)), 0 === r3.wbits)
                      r3.wbits = vt;
                    else if (vt > r3.wbits) {
                      t3.msg = "invalid window size", r3.mode = Q;
                      break;
                    }
                    r3.dmax = 1 << vt, t3.adler = r3.check = 1, r3.mode = 512 & ot2 ? R : O, ot2 = 0, st2 = 0;
                    break;
                  case E:
                    for (; st2 < 16; ) {
                      if (0 === nt2)
                        break t;
                      nt2--, ot2 += $2[et2++] << st2, st2 += 8;
                    }
                    if (r3.flags = ot2, (255 & r3.flags) !== v) {
                      t3.msg = "unknown compression method", r3.mode = Q;
                      break;
                    }
                    if (57344 & r3.flags) {
                      t3.msg = "unknown header flags set", r3.mode = Q;
                      break;
                    }
                    r3.head && (r3.head.text = ot2 >> 8 & 1), 512 & r3.flags && (Mt[0] = 255 & ot2, Mt[1] = ot2 >>> 8 & 255, r3.check = a(r3.check, Mt, 2, 0)), ot2 = 0, st2 = 0, r3.mode = k;
                  case k:
                    for (; st2 < 32; ) {
                      if (0 === nt2)
                        break t;
                      nt2--, ot2 += $2[et2++] << st2, st2 += 8;
                    }
                    r3.head && (r3.head.time = ot2), 512 & r3.flags && (Mt[0] = 255 & ot2, Mt[1] = ot2 >>> 8 & 255, Mt[2] = ot2 >>> 16 & 255, Mt[3] = ot2 >>> 24 & 255, r3.check = a(r3.check, Mt, 4, 0)), ot2 = 0, st2 = 0, r3.mode = S;
                  case S:
                    for (; st2 < 16; ) {
                      if (0 === nt2)
                        break t;
                      nt2--, ot2 += $2[et2++] << st2, st2 += 8;
                    }
                    r3.head && (r3.head.xflags = 255 & ot2, r3.head.os = ot2 >> 8), 512 & r3.flags && (Mt[0] = 255 & ot2, Mt[1] = ot2 >>> 8 & 255, r3.check = a(r3.check, Mt, 2, 0)), ot2 = 0, st2 = 0, r3.mode = M;
                  case M:
                    if (1024 & r3.flags) {
                      for (; st2 < 16; ) {
                        if (0 === nt2)
                          break t;
                        nt2--, ot2 += $2[et2++] << st2, st2 += 8;
                      }
                      r3.length = ot2, r3.head && (r3.head.extra_len = ot2), 512 & r3.flags && (Mt[0] = 255 & ot2, Mt[1] = ot2 >>> 8 & 255, r3.check = a(r3.check, Mt, 2, 0)), ot2 = 0, st2 = 0;
                    } else
                      r3.head && (r3.head.extra = null);
                    r3.mode = A;
                  case A:
                    if (1024 & r3.flags && ((ft2 = r3.length) > nt2 && (ft2 = nt2), ft2 && (r3.head && (vt = r3.head.extra_len - r3.length, r3.head.extra || (r3.head.extra = new Array(r3.head.extra_len)), i.arraySet(r3.head.extra, $2, et2, ft2, vt)), 512 & r3.flags && (r3.check = a(r3.check, $2, ft2, et2)), nt2 -= ft2, et2 += ft2, r3.length -= ft2), r3.length))
                      break t;
                    r3.length = 0, r3.mode = I;
                  case I:
                    if (2048 & r3.flags) {
                      if (0 === nt2)
                        break t;
                      ft2 = 0;
                      do {
                        vt = $2[et2 + ft2++], r3.head && vt && r3.length < 65536 && (r3.head.name += String.fromCharCode(vt));
                      } while (vt && ft2 < nt2);
                      if (512 & r3.flags && (r3.check = a(r3.check, $2, ft2, et2)), nt2 -= ft2, et2 += ft2, vt)
                        break t;
                    } else
                      r3.head && (r3.head.name = null);
                    r3.length = 0, r3.mode = B;
                  case B:
                    if (4096 & r3.flags) {
                      if (0 === nt2)
                        break t;
                      ft2 = 0;
                      do {
                        vt = $2[et2 + ft2++], r3.head && vt && r3.length < 65536 && (r3.head.comment += String.fromCharCode(vt));
                      } while (vt && ft2 < nt2);
                      if (512 & r3.flags && (r3.check = a(r3.check, $2, ft2, et2)), nt2 -= ft2, et2 += ft2, vt)
                        break t;
                    } else
                      r3.head && (r3.head.comment = null);
                    r3.mode = T;
                  case T:
                    if (512 & r3.flags) {
                      for (; st2 < 16; ) {
                        if (0 === nt2)
                          break t;
                        nt2--, ot2 += $2[et2++] << st2, st2 += 8;
                      }
                      if (ot2 !== (65535 & r3.check)) {
                        t3.msg = "header crc mismatch", r3.mode = Q;
                        break;
                      }
                      ot2 = 0, st2 = 0;
                    }
                    r3.head && (r3.head.hcrc = r3.flags >> 9 & 1, r3.head.done = true), t3.adler = r3.check = 0, r3.mode = O;
                    break;
                  case R:
                    for (; st2 < 32; ) {
                      if (0 === nt2)
                        break t;
                      nt2--, ot2 += $2[et2++] << st2, st2 += 8;
                    }
                    t3.adler = r3.check = rt(ot2), ot2 = 0, st2 = 0, r3.mode = P;
                  case P:
                    if (0 === r3.havedict)
                      return t3.next_out = it2, t3.avail_out = at2, t3.next_in = et2, t3.avail_in = nt2, r3.hold = ot2, r3.bits = st2, g;
                    t3.adler = r3.check = 1, r3.mode = O;
                  case O:
                    if (e3 === c || e3 === d)
                      break t;
                  case L:
                    if (r3.last) {
                      ot2 >>>= 7 & st2, st2 -= 7 & st2, r3.mode = V;
                      break;
                    }
                    for (; st2 < 3; ) {
                      if (0 === nt2)
                        break t;
                      nt2--, ot2 += $2[et2++] << st2, st2 += 8;
                    }
                    switch (r3.last = 1 & ot2, st2 -= 1, 3 & (ot2 >>>= 1)) {
                      case 0:
                        r3.mode = C;
                        break;
                      case 1:
                        if (ut(r3), r3.mode = j, e3 === d) {
                          ot2 >>>= 2, st2 -= 2;
                          break t;
                        }
                        break;
                      case 2:
                        r3.mode = D;
                        break;
                      case 3:
                        t3.msg = "invalid block type", r3.mode = Q;
                    }
                    ot2 >>>= 2, st2 -= 2;
                    break;
                  case C:
                    for (ot2 >>>= 7 & st2, st2 -= 7 & st2; st2 < 32; ) {
                      if (0 === nt2)
                        break t;
                      nt2--, ot2 += $2[et2++] << st2, st2 += 8;
                    }
                    if ((65535 & ot2) != (ot2 >>> 16 ^ 65535)) {
                      t3.msg = "invalid stored block lengths", r3.mode = Q;
                      break;
                    }
                    if (r3.length = 65535 & ot2, ot2 = 0, st2 = 0, r3.mode = U, e3 === d)
                      break t;
                  case U:
                    r3.mode = z;
                  case z:
                    if (ft2 = r3.length) {
                      if (ft2 > nt2 && (ft2 = nt2), ft2 > at2 && (ft2 = at2), 0 === ft2)
                        break t;
                      i.arraySet(tt2, $2, et2, ft2, it2), nt2 -= ft2, et2 += ft2, at2 -= ft2, it2 += ft2, r3.length -= ft2;
                      break;
                    }
                    r3.mode = O;
                    break;
                  case D:
                    for (; st2 < 14; ) {
                      if (0 === nt2)
                        break t;
                      nt2--, ot2 += $2[et2++] << st2, st2 += 8;
                    }
                    if (r3.nlen = 257 + (31 & ot2), ot2 >>>= 5, st2 -= 5, r3.ndist = 1 + (31 & ot2), ot2 >>>= 5, st2 -= 5, r3.ncode = 4 + (15 & ot2), ot2 >>>= 4, st2 -= 4, r3.nlen > 286 || r3.ndist > 30) {
                      t3.msg = "too many length or distance symbols", r3.mode = Q;
                      break;
                    }
                    r3.have = 0, r3.mode = N;
                  case N:
                    for (; r3.have < r3.ncode; ) {
                      for (; st2 < 3; ) {
                        if (0 === nt2)
                          break t;
                        nt2--, ot2 += $2[et2++] << st2, st2 += 8;
                      }
                      r3.lens[At[r3.have++]] = 7 & ot2, ot2 >>>= 3, st2 -= 3;
                    }
                    for (; r3.have < 19; )
                      r3.lens[At[r3.have++]] = 0;
                    if (r3.lencode = r3.lendyn, r3.lenbits = 7, Et = { bits: r3.lenbits }, xt = s(h, r3.lens, 0, 19, r3.lencode, 0, r3.work, Et), r3.lenbits = Et.bits, xt) {
                      t3.msg = "invalid code lengths set", r3.mode = Q;
                      break;
                    }
                    r3.have = 0, r3.mode = F;
                  case F:
                    for (; r3.have < r3.nlen + r3.ndist; ) {
                      for (; gt = (St = r3.lencode[ot2 & (1 << r3.lenbits) - 1]) >>> 16 & 255, bt = 65535 & St, !((mt = St >>> 24) <= st2); ) {
                        if (0 === nt2)
                          break t;
                        nt2--, ot2 += $2[et2++] << st2, st2 += 8;
                      }
                      if (bt < 16)
                        ot2 >>>= mt, st2 -= mt, r3.lens[r3.have++] = bt;
                      else {
                        if (16 === bt) {
                          for (kt = mt + 2; st2 < kt; ) {
                            if (0 === nt2)
                              break t;
                            nt2--, ot2 += $2[et2++] << st2, st2 += 8;
                          }
                          if (ot2 >>>= mt, st2 -= mt, 0 === r3.have) {
                            t3.msg = "invalid bit length repeat", r3.mode = Q;
                            break;
                          }
                          vt = r3.lens[r3.have - 1], ft2 = 3 + (3 & ot2), ot2 >>>= 2, st2 -= 2;
                        } else if (17 === bt) {
                          for (kt = mt + 3; st2 < kt; ) {
                            if (0 === nt2)
                              break t;
                            nt2--, ot2 += $2[et2++] << st2, st2 += 8;
                          }
                          st2 -= mt, vt = 0, ft2 = 3 + (7 & (ot2 >>>= mt)), ot2 >>>= 3, st2 -= 3;
                        } else {
                          for (kt = mt + 7; st2 < kt; ) {
                            if (0 === nt2)
                              break t;
                            nt2--, ot2 += $2[et2++] << st2, st2 += 8;
                          }
                          st2 -= mt, vt = 0, ft2 = 11 + (127 & (ot2 >>>= mt)), ot2 >>>= 7, st2 -= 7;
                        }
                        if (r3.have + ft2 > r3.nlen + r3.ndist) {
                          t3.msg = "invalid bit length repeat", r3.mode = Q;
                          break;
                        }
                        for (; ft2--; )
                          r3.lens[r3.have++] = vt;
                      }
                    }
                    if (r3.mode === Q)
                      break;
                    if (0 === r3.lens[256]) {
                      t3.msg = "invalid code -- missing end-of-block", r3.mode = Q;
                      break;
                    }
                    if (r3.lenbits = 9, Et = { bits: r3.lenbits }, xt = s(l, r3.lens, 0, r3.nlen, r3.lencode, 0, r3.work, Et), r3.lenbits = Et.bits, xt) {
                      t3.msg = "invalid literal/lengths set", r3.mode = Q;
                      break;
                    }
                    if (r3.distbits = 6, r3.distcode = r3.distdyn, Et = { bits: r3.distbits }, xt = s(f, r3.lens, r3.nlen, r3.ndist, r3.distcode, 0, r3.work, Et), r3.distbits = Et.bits, xt) {
                      t3.msg = "invalid distances set", r3.mode = Q;
                      break;
                    }
                    if (r3.mode = j, e3 === d)
                      break t;
                  case j:
                    r3.mode = G;
                  case G:
                    if (nt2 >= 6 && at2 >= 258) {
                      t3.next_out = it2, t3.avail_out = at2, t3.next_in = et2, t3.avail_in = nt2, r3.hold = ot2, r3.bits = st2, o(t3, lt2), it2 = t3.next_out, tt2 = t3.output, at2 = t3.avail_out, et2 = t3.next_in, $2 = t3.input, nt2 = t3.avail_in, ot2 = r3.hold, st2 = r3.bits, r3.mode === O && (r3.back = -1);
                      break;
                    }
                    for (r3.back = 0; gt = (St = r3.lencode[ot2 & (1 << r3.lenbits) - 1]) >>> 16 & 255, bt = 65535 & St, !((mt = St >>> 24) <= st2); ) {
                      if (0 === nt2)
                        break t;
                      nt2--, ot2 += $2[et2++] << st2, st2 += 8;
                    }
                    if (gt && 0 == (240 & gt)) {
                      for (_t = mt, yt = gt, wt = bt; gt = (St = r3.lencode[wt + ((ot2 & (1 << _t + yt) - 1) >> _t)]) >>> 16 & 255, bt = 65535 & St, !(_t + (mt = St >>> 24) <= st2); ) {
                        if (0 === nt2)
                          break t;
                        nt2--, ot2 += $2[et2++] << st2, st2 += 8;
                      }
                      ot2 >>>= _t, st2 -= _t, r3.back += _t;
                    }
                    if (ot2 >>>= mt, st2 -= mt, r3.back += mt, r3.length = bt, 0 === gt) {
                      r3.mode = Y;
                      break;
                    }
                    if (32 & gt) {
                      r3.back = -1, r3.mode = O;
                      break;
                    }
                    if (64 & gt) {
                      t3.msg = "invalid literal/length code", r3.mode = Q;
                      break;
                    }
                    r3.extra = 15 & gt, r3.mode = H;
                  case H:
                    if (r3.extra) {
                      for (kt = r3.extra; st2 < kt; ) {
                        if (0 === nt2)
                          break t;
                        nt2--, ot2 += $2[et2++] << st2, st2 += 8;
                      }
                      r3.length += ot2 & (1 << r3.extra) - 1, ot2 >>>= r3.extra, st2 -= r3.extra, r3.back += r3.extra;
                    }
                    r3.was = r3.length, r3.mode = W;
                  case W:
                    for (; gt = (St = r3.distcode[ot2 & (1 << r3.distbits) - 1]) >>> 16 & 255, bt = 65535 & St, !((mt = St >>> 24) <= st2); ) {
                      if (0 === nt2)
                        break t;
                      nt2--, ot2 += $2[et2++] << st2, st2 += 8;
                    }
                    if (0 == (240 & gt)) {
                      for (_t = mt, yt = gt, wt = bt; gt = (St = r3.distcode[wt + ((ot2 & (1 << _t + yt) - 1) >> _t)]) >>> 16 & 255, bt = 65535 & St, !(_t + (mt = St >>> 24) <= st2); ) {
                        if (0 === nt2)
                          break t;
                        nt2--, ot2 += $2[et2++] << st2, st2 += 8;
                      }
                      ot2 >>>= _t, st2 -= _t, r3.back += _t;
                    }
                    if (ot2 >>>= mt, st2 -= mt, r3.back += mt, 64 & gt) {
                      t3.msg = "invalid distance code", r3.mode = Q;
                      break;
                    }
                    r3.offset = bt, r3.extra = 15 & gt, r3.mode = q;
                  case q:
                    if (r3.extra) {
                      for (kt = r3.extra; st2 < kt; ) {
                        if (0 === nt2)
                          break t;
                        nt2--, ot2 += $2[et2++] << st2, st2 += 8;
                      }
                      r3.offset += ot2 & (1 << r3.extra) - 1, ot2 >>>= r3.extra, st2 -= r3.extra, r3.back += r3.extra;
                    }
                    if (r3.offset > r3.dmax) {
                      t3.msg = "invalid distance too far back", r3.mode = Q;
                      break;
                    }
                    r3.mode = Z;
                  case Z:
                    if (0 === at2)
                      break t;
                    if (ft2 = lt2 - at2, r3.offset > ft2) {
                      if ((ft2 = r3.offset - ft2) > r3.whave && r3.sane) {
                        t3.msg = "invalid distance too far back", r3.mode = Q;
                        break;
                      }
                      ft2 > r3.wnext ? (ft2 -= r3.wnext, dt = r3.wsize - ft2) : dt = r3.wnext - ft2, ft2 > r3.length && (ft2 = r3.length), pt = r3.window;
                    } else
                      pt = tt2, dt = it2 - r3.offset, ft2 = r3.length;
                    ft2 > at2 && (ft2 = at2), at2 -= ft2, r3.length -= ft2;
                    do {
                      tt2[it2++] = pt[dt++];
                    } while (--ft2);
                    0 === r3.length && (r3.mode = G);
                    break;
                  case Y:
                    if (0 === at2)
                      break t;
                    tt2[it2++] = r3.length, at2--, r3.mode = G;
                    break;
                  case V:
                    if (r3.wrap) {
                      for (; st2 < 32; ) {
                        if (0 === nt2)
                          break t;
                        nt2--, ot2 |= $2[et2++] << st2, st2 += 8;
                      }
                      if (lt2 -= at2, t3.total_out += lt2, r3.total += lt2, lt2 && (t3.adler = r3.check = r3.flags ? a(r3.check, tt2, lt2, it2 - lt2) : n(r3.check, tt2, lt2, it2 - lt2)), lt2 = at2, (r3.flags ? ot2 : rt(ot2)) !== r3.check) {
                        t3.msg = "incorrect data check", r3.mode = Q;
                        break;
                      }
                      ot2 = 0, st2 = 0;
                    }
                    r3.mode = X;
                  case X:
                    if (r3.wrap && r3.flags) {
                      for (; st2 < 32; ) {
                        if (0 === nt2)
                          break t;
                        nt2--, ot2 += $2[et2++] << st2, st2 += 8;
                      }
                      if (ot2 !== (4294967295 & r3.total)) {
                        t3.msg = "incorrect length check", r3.mode = Q;
                        break;
                      }
                      ot2 = 0, st2 = 0;
                    }
                    r3.mode = J;
                  case J:
                    xt = m;
                    break t;
                  case Q:
                    xt = _;
                    break t;
                  case K:
                    return y;
                  default:
                    return b;
                }
            return t3.next_out = it2, t3.avail_out = at2, t3.next_in = et2, t3.avail_in = nt2, r3.hold = ot2, r3.bits = st2, (r3.wsize || lt2 !== t3.avail_out && r3.mode < Q && (r3.mode < V || e3 !== u)) && ct(t3, t3.output, t3.next_out, lt2 - t3.avail_out) ? (r3.mode = K, y) : (ht2 -= t3.avail_in, lt2 -= t3.avail_out, t3.total_in += ht2, t3.total_out += lt2, r3.total += lt2, r3.wrap && lt2 && (t3.adler = r3.check = r3.flags ? a(r3.check, tt2, lt2, t3.next_out - lt2) : n(r3.check, tt2, lt2, t3.next_out - lt2)), t3.data_type = r3.bits + (r3.last ? 64 : 0) + (r3.mode === O ? 128 : 0) + (r3.mode === j || r3.mode === U ? 256 : 0), (0 === ht2 && 0 === lt2 || e3 === u) && xt === p && (xt = w), xt);
          }, r2.inflateEnd = function(t3) {
            if (!t3 || !t3.state)
              return b;
            var e3 = t3.state;
            return e3.window && (e3.window = null), t3.state = null, p;
          }, r2.inflateGetHeader = function(t3, e3) {
            var r3;
            return t3 && t3.state ? 0 == (2 & (r3 = t3.state).wrap) ? b : (r3.head = e3, e3.done = false, p) : b;
          }, r2.inflateSetDictionary = function(t3, e3) {
            var r3, i2 = e3.length;
            return t3 && t3.state ? 0 !== (r3 = t3.state).wrap && r3.mode !== P ? b : r3.mode === P && n(1, e3, i2, 0) !== r3.check ? _ : ct(t3, e3, i2, i2) ? (r3.mode = K, y) : (r3.havedict = 1, p) : b;
          }, r2.inflateInfo = "pako inflate (from Nodeca project)";
        }, { "../utils/common": 49, "./adler32": 50, "./crc32": 52, "./inffast": 54, "./inftrees": 56 }], 56: [function(t2, e2, r2) {
          "use strict";
          var i = t2("../utils/common"), n = 15, a = [3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 15, 17, 19, 23, 27, 31, 35, 43, 51, 59, 67, 83, 99, 115, 131, 163, 195, 227, 258, 0, 0], o = [16, 16, 16, 16, 16, 16, 16, 16, 17, 17, 17, 17, 18, 18, 18, 18, 19, 19, 19, 19, 20, 20, 20, 20, 21, 21, 21, 21, 16, 72, 78], s = [1, 2, 3, 4, 5, 7, 9, 13, 17, 25, 33, 49, 65, 97, 129, 193, 257, 385, 513, 769, 1025, 1537, 2049, 3073, 4097, 6145, 8193, 12289, 16385, 24577, 0, 0], h = [16, 16, 16, 16, 17, 17, 18, 18, 19, 19, 20, 20, 21, 21, 22, 22, 23, 23, 24, 24, 25, 25, 26, 26, 27, 27, 28, 28, 29, 29, 64, 64];
          e2.exports = function(t3, e3, r3, l, f, u, c, d) {
            var p, m, g, b, _, y, w, v, x, E = d.bits, k = 0, S = 0, M = 0, A = 0, I = 0, B = 0, T = 0, R = 0, P = 0, O = 0, L = null, C = 0, U = new i.Buf16(16), z = new i.Buf16(16), D = null, N = 0;
            for (k = 0; k <= n; k++)
              U[k] = 0;
            for (S = 0; S < l; S++)
              U[e3[r3 + S]]++;
            for (I = E, A = n; A >= 1 && 0 === U[A]; A--)
              ;
            if (I > A && (I = A), 0 === A)
              return f[u++] = 20971520, f[u++] = 20971520, d.bits = 1, 0;
            for (M = 1; M < A && 0 === U[M]; M++)
              ;
            for (I < M && (I = M), R = 1, k = 1; k <= n; k++)
              if (R <<= 1, (R -= U[k]) < 0)
                return -1;
            if (R > 0 && (0 === t3 || 1 !== A))
              return -1;
            for (z[1] = 0, k = 1; k < n; k++)
              z[k + 1] = z[k] + U[k];
            for (S = 0; S < l; S++)
              0 !== e3[r3 + S] && (c[z[e3[r3 + S]]++] = S);
            if (0 === t3 ? (L = D = c, y = 19) : 1 === t3 ? (L = a, C -= 257, D = o, N -= 257, y = 256) : (L = s, D = h, y = -1), O = 0, S = 0, k = M, _ = u, B = I, T = 0, g = -1, b = (P = 1 << I) - 1, 1 === t3 && P > 852 || 2 === t3 && P > 592)
              return 1;
            for (; ; ) {
              w = k - T, c[S] < y ? (v = 0, x = c[S]) : c[S] > y ? (v = D[N + c[S]], x = L[C + c[S]]) : (v = 96, x = 0), p = 1 << k - T, M = m = 1 << B;
              do {
                f[_ + (O >> T) + (m -= p)] = w << 24 | v << 16 | x | 0;
              } while (0 !== m);
              for (p = 1 << k - 1; O & p; )
                p >>= 1;
              if (0 !== p ? (O &= p - 1, O += p) : O = 0, S++, 0 == --U[k]) {
                if (k === A)
                  break;
                k = e3[r3 + c[S]];
              }
              if (k > I && (O & b) !== g) {
                for (0 === T && (T = I), _ += M, R = 1 << (B = k - T); B + T < A && !((R -= U[B + T]) <= 0); )
                  B++, R <<= 1;
                if (P += 1 << B, 1 === t3 && P > 852 || 2 === t3 && P > 592)
                  return 1;
                f[g = O & b] = I << 24 | B << 16 | _ - u | 0;
              }
            }
            return 0 !== O && (f[_ + O] = k - T << 24 | 64 << 16 | 0), d.bits = I, 0;
          };
        }, { "../utils/common": 49 }], 57: [function(t2, e2, r2) {
          "use strict";
          e2.exports = { 2: "need dictionary", 1: "stream end", 0: "", "-1": "file error", "-2": "stream error", "-3": "data error", "-4": "insufficient memory", "-5": "buffer error", "-6": "incompatible version" };
        }, {}], 58: [function(t2, e2, r2) {
          "use strict";
          var i = t2("../utils/common"), n = 4, a = 0, o = 1, s = 2;
          function h(t3) {
            for (var e3 = t3.length; --e3 >= 0; )
              t3[e3] = 0;
          }
          var l = 0, f = 1, u = 2, c = 29, d = 256, p = d + 1 + c, m = 30, g = 19, b = 2 * p + 1, _ = 15, y = 16, w = 7, v = 256, x = 16, E = 17, k = 18, S = [0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 2, 2, 3, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5, 0], M = [0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 4, 4, 5, 5, 6, 6, 7, 7, 8, 8, 9, 9, 10, 10, 11, 11, 12, 12, 13, 13], A = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 3, 7], I = [16, 17, 18, 0, 8, 7, 9, 6, 10, 5, 11, 4, 12, 3, 13, 2, 14, 1, 15], B = new Array(2 * (p + 2));
          h(B);
          var T = new Array(2 * m);
          h(T);
          var R = new Array(512);
          h(R);
          var P = new Array(256);
          h(P);
          var O = new Array(c);
          h(O);
          var L, C, U, z = new Array(m);
          function D(t3, e3, r3, i2, n2) {
            this.static_tree = t3, this.extra_bits = e3, this.extra_base = r3, this.elems = i2, this.max_length = n2, this.has_stree = t3 && t3.length;
          }
          function N(t3, e3) {
            this.dyn_tree = t3, this.max_code = 0, this.stat_desc = e3;
          }
          function F(t3) {
            return t3 < 256 ? R[t3] : R[256 + (t3 >>> 7)];
          }
          function j(t3, e3) {
            t3.pending_buf[t3.pending++] = 255 & e3, t3.pending_buf[t3.pending++] = e3 >>> 8 & 255;
          }
          function G(t3, e3, r3) {
            t3.bi_valid > y - r3 ? (t3.bi_buf |= e3 << t3.bi_valid & 65535, j(t3, t3.bi_buf), t3.bi_buf = e3 >> y - t3.bi_valid, t3.bi_valid += r3 - y) : (t3.bi_buf |= e3 << t3.bi_valid & 65535, t3.bi_valid += r3);
          }
          function H(t3, e3, r3) {
            G(t3, r3[2 * e3], r3[2 * e3 + 1]);
          }
          function W(t3, e3) {
            var r3 = 0;
            do {
              r3 |= 1 & t3, t3 >>>= 1, r3 <<= 1;
            } while (--e3 > 0);
            return r3 >>> 1;
          }
          function q(t3, e3, r3) {
            var i2, n2, a2 = new Array(_ + 1), o2 = 0;
            for (i2 = 1; i2 <= _; i2++)
              a2[i2] = o2 = o2 + r3[i2 - 1] << 1;
            for (n2 = 0; n2 <= e3; n2++) {
              var s2 = t3[2 * n2 + 1];
              0 !== s2 && (t3[2 * n2] = W(a2[s2]++, s2));
            }
          }
          function Z(t3) {
            var e3;
            for (e3 = 0; e3 < p; e3++)
              t3.dyn_ltree[2 * e3] = 0;
            for (e3 = 0; e3 < m; e3++)
              t3.dyn_dtree[2 * e3] = 0;
            for (e3 = 0; e3 < g; e3++)
              t3.bl_tree[2 * e3] = 0;
            t3.dyn_ltree[2 * v] = 1, t3.opt_len = t3.static_len = 0, t3.last_lit = t3.matches = 0;
          }
          function Y(t3) {
            t3.bi_valid > 8 ? j(t3, t3.bi_buf) : t3.bi_valid > 0 && (t3.pending_buf[t3.pending++] = t3.bi_buf), t3.bi_buf = 0, t3.bi_valid = 0;
          }
          function V(t3, e3, r3, i2) {
            var n2 = 2 * e3, a2 = 2 * r3;
            return t3[n2] < t3[a2] || t3[n2] === t3[a2] && i2[e3] <= i2[r3];
          }
          function X(t3, e3, r3) {
            for (var i2 = t3.heap[r3], n2 = r3 << 1; n2 <= t3.heap_len && (n2 < t3.heap_len && V(e3, t3.heap[n2 + 1], t3.heap[n2], t3.depth) && n2++, !V(e3, i2, t3.heap[n2], t3.depth)); )
              t3.heap[r3] = t3.heap[n2], r3 = n2, n2 <<= 1;
            t3.heap[r3] = i2;
          }
          function J(t3, e3, r3) {
            var i2, n2, a2, o2, s2 = 0;
            if (0 !== t3.last_lit)
              do {
                i2 = t3.pending_buf[t3.d_buf + 2 * s2] << 8 | t3.pending_buf[t3.d_buf + 2 * s2 + 1], n2 = t3.pending_buf[t3.l_buf + s2], s2++, 0 === i2 ? H(t3, n2, e3) : (H(t3, (a2 = P[n2]) + d + 1, e3), 0 !== (o2 = S[a2]) && G(t3, n2 -= O[a2], o2), H(t3, a2 = F(--i2), r3), 0 !== (o2 = M[a2]) && G(t3, i2 -= z[a2], o2));
              } while (s2 < t3.last_lit);
            H(t3, v, e3);
          }
          function Q(t3, e3) {
            var r3, i2, n2, a2 = e3.dyn_tree, o2 = e3.stat_desc.static_tree, s2 = e3.stat_desc.has_stree, h2 = e3.stat_desc.elems, l2 = -1;
            for (t3.heap_len = 0, t3.heap_max = b, r3 = 0; r3 < h2; r3++)
              0 !== a2[2 * r3] ? (t3.heap[++t3.heap_len] = l2 = r3, t3.depth[r3] = 0) : a2[2 * r3 + 1] = 0;
            for (; t3.heap_len < 2; )
              a2[2 * (n2 = t3.heap[++t3.heap_len] = l2 < 2 ? ++l2 : 0)] = 1, t3.depth[n2] = 0, t3.opt_len--, s2 && (t3.static_len -= o2[2 * n2 + 1]);
            for (e3.max_code = l2, r3 = t3.heap_len >> 1; r3 >= 1; r3--)
              X(t3, a2, r3);
            n2 = h2;
            do {
              r3 = t3.heap[1], t3.heap[1] = t3.heap[t3.heap_len--], X(t3, a2, 1), i2 = t3.heap[1], t3.heap[--t3.heap_max] = r3, t3.heap[--t3.heap_max] = i2, a2[2 * n2] = a2[2 * r3] + a2[2 * i2], t3.depth[n2] = (t3.depth[r3] >= t3.depth[i2] ? t3.depth[r3] : t3.depth[i2]) + 1, a2[2 * r3 + 1] = a2[2 * i2 + 1] = n2, t3.heap[1] = n2++, X(t3, a2, 1);
            } while (t3.heap_len >= 2);
            t3.heap[--t3.heap_max] = t3.heap[1], function(t4, e4) {
              var r4, i3, n3, a3, o3, s3, h3 = e4.dyn_tree, l3 = e4.max_code, f2 = e4.stat_desc.static_tree, u2 = e4.stat_desc.has_stree, c2 = e4.stat_desc.extra_bits, d2 = e4.stat_desc.extra_base, p2 = e4.stat_desc.max_length, m2 = 0;
              for (a3 = 0; a3 <= _; a3++)
                t4.bl_count[a3] = 0;
              for (h3[2 * t4.heap[t4.heap_max] + 1] = 0, r4 = t4.heap_max + 1; r4 < b; r4++)
                (a3 = h3[2 * h3[2 * (i3 = t4.heap[r4]) + 1] + 1] + 1) > p2 && (a3 = p2, m2++), h3[2 * i3 + 1] = a3, i3 > l3 || (t4.bl_count[a3]++, o3 = 0, i3 >= d2 && (o3 = c2[i3 - d2]), s3 = h3[2 * i3], t4.opt_len += s3 * (a3 + o3), u2 && (t4.static_len += s3 * (f2[2 * i3 + 1] + o3)));
              if (0 !== m2) {
                do {
                  for (a3 = p2 - 1; 0 === t4.bl_count[a3]; )
                    a3--;
                  t4.bl_count[a3]--, t4.bl_count[a3 + 1] += 2, t4.bl_count[p2]--, m2 -= 2;
                } while (m2 > 0);
                for (a3 = p2; 0 !== a3; a3--)
                  for (i3 = t4.bl_count[a3]; 0 !== i3; )
                    (n3 = t4.heap[--r4]) > l3 || (h3[2 * n3 + 1] !== a3 && (t4.opt_len += (a3 - h3[2 * n3 + 1]) * h3[2 * n3], h3[2 * n3 + 1] = a3), i3--);
              }
            }(t3, e3), q(a2, l2, t3.bl_count);
          }
          function K(t3, e3, r3) {
            var i2, n2, a2 = -1, o2 = e3[1], s2 = 0, h2 = 7, l2 = 4;
            for (0 === o2 && (h2 = 138, l2 = 3), e3[2 * (r3 + 1) + 1] = 65535, i2 = 0; i2 <= r3; i2++)
              n2 = o2, o2 = e3[2 * (i2 + 1) + 1], ++s2 < h2 && n2 === o2 || (s2 < l2 ? t3.bl_tree[2 * n2] += s2 : 0 !== n2 ? (n2 !== a2 && t3.bl_tree[2 * n2]++, t3.bl_tree[2 * x]++) : s2 <= 10 ? t3.bl_tree[2 * E]++ : t3.bl_tree[2 * k]++, s2 = 0, a2 = n2, 0 === o2 ? (h2 = 138, l2 = 3) : n2 === o2 ? (h2 = 6, l2 = 3) : (h2 = 7, l2 = 4));
          }
          function $(t3, e3, r3) {
            var i2, n2, a2 = -1, o2 = e3[1], s2 = 0, h2 = 7, l2 = 4;
            for (0 === o2 && (h2 = 138, l2 = 3), i2 = 0; i2 <= r3; i2++)
              if (n2 = o2, o2 = e3[2 * (i2 + 1) + 1], !(++s2 < h2 && n2 === o2)) {
                if (s2 < l2)
                  do {
                    H(t3, n2, t3.bl_tree);
                  } while (0 != --s2);
                else
                  0 !== n2 ? (n2 !== a2 && (H(t3, n2, t3.bl_tree), s2--), H(t3, x, t3.bl_tree), G(t3, s2 - 3, 2)) : s2 <= 10 ? (H(t3, E, t3.bl_tree), G(t3, s2 - 3, 3)) : (H(t3, k, t3.bl_tree), G(t3, s2 - 11, 7));
                s2 = 0, a2 = n2, 0 === o2 ? (h2 = 138, l2 = 3) : n2 === o2 ? (h2 = 6, l2 = 3) : (h2 = 7, l2 = 4);
              }
          }
          h(z);
          var tt = false;
          function et(t3, e3, r3, n2) {
            G(t3, (l << 1) + (n2 ? 1 : 0), 3), function(t4, e4, r4, n3) {
              Y(t4), n3 && (j(t4, r4), j(t4, ~r4)), i.arraySet(t4.pending_buf, t4.window, e4, r4, t4.pending), t4.pending += r4;
            }(t3, e3, r3, true);
          }
          r2._tr_init = function(t3) {
            tt || (function() {
              var t4, e3, r3, i2, n2, a2 = new Array(_ + 1);
              for (r3 = 0, i2 = 0; i2 < c - 1; i2++)
                for (O[i2] = r3, t4 = 0; t4 < 1 << S[i2]; t4++)
                  P[r3++] = i2;
              for (P[r3 - 1] = i2, n2 = 0, i2 = 0; i2 < 16; i2++)
                for (z[i2] = n2, t4 = 0; t4 < 1 << M[i2]; t4++)
                  R[n2++] = i2;
              for (n2 >>= 7; i2 < m; i2++)
                for (z[i2] = n2 << 7, t4 = 0; t4 < 1 << M[i2] - 7; t4++)
                  R[256 + n2++] = i2;
              for (e3 = 0; e3 <= _; e3++)
                a2[e3] = 0;
              for (t4 = 0; t4 <= 143; )
                B[2 * t4 + 1] = 8, t4++, a2[8]++;
              for (; t4 <= 255; )
                B[2 * t4 + 1] = 9, t4++, a2[9]++;
              for (; t4 <= 279; )
                B[2 * t4 + 1] = 7, t4++, a2[7]++;
              for (; t4 <= 287; )
                B[2 * t4 + 1] = 8, t4++, a2[8]++;
              for (q(B, p + 1, a2), t4 = 0; t4 < m; t4++)
                T[2 * t4 + 1] = 5, T[2 * t4] = W(t4, 5);
              L = new D(B, S, d + 1, p, _), C = new D(T, M, 0, m, _), U = new D(new Array(0), A, 0, g, w);
            }(), tt = true), t3.l_desc = new N(t3.dyn_ltree, L), t3.d_desc = new N(t3.dyn_dtree, C), t3.bl_desc = new N(t3.bl_tree, U), t3.bi_buf = 0, t3.bi_valid = 0, Z(t3);
          }, r2._tr_stored_block = et, r2._tr_flush_block = function(t3, e3, r3, i2) {
            var h2, l2, c2 = 0;
            t3.level > 0 ? (t3.strm.data_type === s && (t3.strm.data_type = function(t4) {
              var e4, r4 = 4093624447;
              for (e4 = 0; e4 <= 31; e4++, r4 >>>= 1)
                if (1 & r4 && 0 !== t4.dyn_ltree[2 * e4])
                  return a;
              if (0 !== t4.dyn_ltree[18] || 0 !== t4.dyn_ltree[20] || 0 !== t4.dyn_ltree[26])
                return o;
              for (e4 = 32; e4 < d; e4++)
                if (0 !== t4.dyn_ltree[2 * e4])
                  return o;
              return a;
            }(t3)), Q(t3, t3.l_desc), Q(t3, t3.d_desc), c2 = function(t4) {
              var e4;
              for (K(t4, t4.dyn_ltree, t4.l_desc.max_code), K(t4, t4.dyn_dtree, t4.d_desc.max_code), Q(t4, t4.bl_desc), e4 = g - 1; e4 >= 3 && 0 === t4.bl_tree[2 * I[e4] + 1]; e4--)
                ;
              return t4.opt_len += 3 * (e4 + 1) + 5 + 5 + 4, e4;
            }(t3), h2 = t3.opt_len + 3 + 7 >>> 3, (l2 = t3.static_len + 3 + 7 >>> 3) <= h2 && (h2 = l2)) : h2 = l2 = r3 + 5, r3 + 4 <= h2 && -1 !== e3 ? et(t3, e3, r3, i2) : t3.strategy === n || l2 === h2 ? (G(t3, (f << 1) + (i2 ? 1 : 0), 3), J(t3, B, T)) : (G(t3, (u << 1) + (i2 ? 1 : 0), 3), function(t4, e4, r4, i3) {
              var n2;
              for (G(t4, e4 - 257, 5), G(t4, r4 - 1, 5), G(t4, i3 - 4, 4), n2 = 0; n2 < i3; n2++)
                G(t4, t4.bl_tree[2 * I[n2] + 1], 3);
              $(t4, t4.dyn_ltree, e4 - 1), $(t4, t4.dyn_dtree, r4 - 1);
            }(t3, t3.l_desc.max_code + 1, t3.d_desc.max_code + 1, c2 + 1), J(t3, t3.dyn_ltree, t3.dyn_dtree)), Z(t3), i2 && Y(t3);
          }, r2._tr_tally = function(t3, e3, r3) {
            return t3.pending_buf[t3.d_buf + 2 * t3.last_lit] = e3 >>> 8 & 255, t3.pending_buf[t3.d_buf + 2 * t3.last_lit + 1] = 255 & e3, t3.pending_buf[t3.l_buf + t3.last_lit] = 255 & r3, t3.last_lit++, 0 === e3 ? t3.dyn_ltree[2 * r3]++ : (t3.matches++, e3--, t3.dyn_ltree[2 * (P[r3] + d + 1)]++, t3.dyn_dtree[2 * F(e3)]++), t3.last_lit === t3.lit_bufsize - 1;
          }, r2._tr_align = function(t3) {
            G(t3, f << 1, 3), H(t3, v, B), function(t4) {
              16 === t4.bi_valid ? (j(t4, t4.bi_buf), t4.bi_buf = 0, t4.bi_valid = 0) : t4.bi_valid >= 8 && (t4.pending_buf[t4.pending++] = 255 & t4.bi_buf, t4.bi_buf >>= 8, t4.bi_valid -= 8);
            }(t3);
          };
        }, { "../utils/common": 49 }], 59: [function(t2, e2, r2) {
          "use strict";
          e2.exports = function() {
            this.input = null, this.next_in = 0, this.avail_in = 0, this.total_in = 0, this.output = null, this.next_out = 0, this.avail_out = 0, this.total_out = 0, this.msg = "", this.state = null, this.data_type = 2, this.adler = 0;
          };
        }, {}], 60: [function(t2, e2, r2) {
          var i, n, a = e2.exports = {};
          function o() {
            throw new Error("setTimeout has not been defined");
          }
          function s() {
            throw new Error("clearTimeout has not been defined");
          }
          function h(t3) {
            if (i === setTimeout)
              return setTimeout(t3, 0);
            if ((i === o || !i) && setTimeout)
              return i = setTimeout, setTimeout(t3, 0);
            try {
              return i(t3, 0);
            } catch (e3) {
              try {
                return i.call(null, t3, 0);
              } catch (e4) {
                return i.call(this, t3, 0);
              }
            }
          }
          !function() {
            try {
              i = "function" == typeof setTimeout ? setTimeout : o;
            } catch (t3) {
              i = o;
            }
            try {
              n = "function" == typeof clearTimeout ? clearTimeout : s;
            } catch (t3) {
              n = s;
            }
          }();
          var l, f = [], u = false, c = -1;
          function d() {
            u && l && (u = false, l.length ? f = l.concat(f) : c = -1, f.length && p());
          }
          function p() {
            if (!u) {
              var t3 = h(d);
              u = true;
              for (var e3 = f.length; e3; ) {
                for (l = f, f = []; ++c < e3; )
                  l && l[c].run();
                c = -1, e3 = f.length;
              }
              l = null, u = false, function(t4) {
                if (n === clearTimeout)
                  return clearTimeout(t4);
                if ((n === s || !n) && clearTimeout)
                  return n = clearTimeout, clearTimeout(t4);
                try {
                  n(t4);
                } catch (e4) {
                  try {
                    return n.call(null, t4);
                  } catch (e5) {
                    return n.call(this, t4);
                  }
                }
              }(t3);
            }
          }
          function m(t3, e3) {
            this.fun = t3, this.array = e3;
          }
          function g() {
          }
          a.nextTick = function(t3) {
            var e3 = new Array(arguments.length - 1);
            if (arguments.length > 1)
              for (var r3 = 1; r3 < arguments.length; r3++)
                e3[r3 - 1] = arguments[r3];
            f.push(new m(t3, e3)), 1 !== f.length || u || h(p);
          }, m.prototype.run = function() {
            this.fun.apply(null, this.array);
          }, a.title = "browser", a.browser = true, a.env = {}, a.argv = [], a.version = "", a.versions = {}, a.on = g, a.addListener = g, a.once = g, a.off = g, a.removeListener = g, a.removeAllListeners = g, a.emit = g, a.prependListener = g, a.prependOnceListener = g, a.listeners = function(t3) {
            return [];
          }, a.binding = function(t3) {
            throw new Error("process.binding is not supported");
          }, a.cwd = function() {
            return "/";
          }, a.chdir = function(t3) {
            throw new Error("process.chdir is not supported");
          }, a.umask = function() {
            return 0;
          };
        }, {}], 61: [function(t2, e2, r2) {
          e2.exports = n;
          var i = t2("events").EventEmitter;
          function n() {
            i.call(this);
          }
          t2("inherits")(n, i), n.Readable = t2("readable-stream/lib/_stream_readable.js"), n.Writable = t2("readable-stream/lib/_stream_writable.js"), n.Duplex = t2("readable-stream/lib/_stream_duplex.js"), n.Transform = t2("readable-stream/lib/_stream_transform.js"), n.PassThrough = t2("readable-stream/lib/_stream_passthrough.js"), n.finished = t2("readable-stream/lib/internal/streams/end-of-stream.js"), n.pipeline = t2("readable-stream/lib/internal/streams/pipeline.js"), n.Stream = n, n.prototype.pipe = function(t3, e3) {
            var r3 = this;
            function n2(e4) {
              t3.writable && false === t3.write(e4) && r3.pause && r3.pause();
            }
            function a() {
              r3.readable && r3.resume && r3.resume();
            }
            r3.on("data", n2), t3.on("drain", a), t3._isStdio || e3 && false === e3.end || (r3.on("end", s), r3.on("close", h));
            var o = false;
            function s() {
              o || (o = true, t3.end());
            }
            function h() {
              o || (o = true, "function" == typeof t3.destroy && t3.destroy());
            }
            function l(t4) {
              if (f(), 0 === i.listenerCount(this, "error"))
                throw t4;
            }
            function f() {
              r3.removeListener("data", n2), t3.removeListener("drain", a), r3.removeListener("end", s), r3.removeListener("close", h), r3.removeListener("error", l), t3.removeListener("error", l), r3.removeListener("end", f), r3.removeListener("close", f), t3.removeListener("close", f);
            }
            return r3.on("error", l), t3.on("error", l), r3.on("end", f), r3.on("close", f), t3.on("close", f), t3.emit("pipe", r3), t3;
          };
        }, { events: 38, inherits: 45, "readable-stream/lib/_stream_duplex.js": 63, "readable-stream/lib/_stream_passthrough.js": 64, "readable-stream/lib/_stream_readable.js": 65, "readable-stream/lib/_stream_transform.js": 66, "readable-stream/lib/_stream_writable.js": 67, "readable-stream/lib/internal/streams/end-of-stream.js": 71, "readable-stream/lib/internal/streams/pipeline.js": 73 }], 62: [function(t2, e2, r2) {
          "use strict";
          var i = {};
          function n(t3, e3, r3) {
            r3 || (r3 = Error);
            var n2 = function(t4) {
              function r4(r5, i3, n4) {
                return t4.call(this, function(t5, r6, i4) {
                  return "string" == typeof e3 ? e3 : e3(t5, r6, i4);
                }(r5, i3, n4)) || this;
              }
              return n3 = t4, (i2 = r4).prototype = Object.create(n3.prototype), i2.prototype.constructor = i2, i2.__proto__ = n3, r4;
              var i2, n3;
            }(r3);
            n2.prototype.name = r3.name, n2.prototype.code = t3, i[t3] = n2;
          }
          function a(t3, e3) {
            if (Array.isArray(t3)) {
              var r3 = t3.length;
              return t3 = t3.map(function(t4) {
                return String(t4);
              }), r3 > 2 ? "one of ".concat(e3, " ").concat(t3.slice(0, r3 - 1).join(", "), ", or ") + t3[r3 - 1] : 2 === r3 ? "one of ".concat(e3, " ").concat(t3[0], " or ").concat(t3[1]) : "of ".concat(e3, " ").concat(t3[0]);
            }
            return "of ".concat(e3, " ").concat(String(t3));
          }
          n("ERR_INVALID_OPT_VALUE", function(t3, e3) {
            return 'The value "' + e3 + '" is invalid for option "' + t3 + '"';
          }, TypeError), n("ERR_INVALID_ARG_TYPE", function(t3, e3, r3) {
            var i2, n2, o, s;
            if ("string" == typeof e3 && (o = "not ", e3.substr(!s || s < 0 ? 0 : +s, o.length) === o) ? (i2 = "must not be", e3 = e3.replace(/^not /, "")) : i2 = "must be", function(t4, e4, r4) {
              return (void 0 === r4 || r4 > t4.length) && (r4 = t4.length), t4.substring(r4 - e4.length, r4) === e4;
            }(t3, " argument"))
              n2 = "The ".concat(t3, " ").concat(i2, " ").concat(a(e3, "type"));
            else {
              var h = function(t4, e4, r4) {
                return "number" != typeof r4 && (r4 = 0), !(r4 + e4.length > t4.length) && -1 !== t4.indexOf(e4, r4);
              }(t3, ".") ? "property" : "argument";
              n2 = 'The "'.concat(t3, '" ').concat(h, " ").concat(i2, " ").concat(a(e3, "type"));
            }
            return n2 + ". Received type ".concat(typeof r3);
          }, TypeError), n("ERR_STREAM_PUSH_AFTER_EOF", "stream.push() after EOF"), n("ERR_METHOD_NOT_IMPLEMENTED", function(t3) {
            return "The " + t3 + " method is not implemented";
          }), n("ERR_STREAM_PREMATURE_CLOSE", "Premature close"), n("ERR_STREAM_DESTROYED", function(t3) {
            return "Cannot call " + t3 + " after a stream was destroyed";
          }), n("ERR_MULTIPLE_CALLBACK", "Callback called multiple times"), n("ERR_STREAM_CANNOT_PIPE", "Cannot pipe, not readable"), n("ERR_STREAM_WRITE_AFTER_END", "write after end"), n("ERR_STREAM_NULL_VALUES", "May not write null values to stream", TypeError), n("ERR_UNKNOWN_ENCODING", function(t3) {
            return "Unknown encoding: " + t3;
          }, TypeError), n("ERR_STREAM_UNSHIFT_AFTER_END_EVENT", "stream.unshift() after end event"), e2.exports.codes = i;
        }, {}], 63: [function(t2, e2, r2) {
          (function(r3) {
            (function() {
              "use strict";
              var i = Object.keys || function(t3) {
                var e3 = [];
                for (var r4 in t3)
                  e3.push(r4);
                return e3;
              };
              e2.exports = l;
              var n = t2("./_stream_readable"), a = t2("./_stream_writable");
              t2("inherits")(l, n);
              for (var o = i(a.prototype), s = 0; s < o.length; s++) {
                var h = o[s];
                l.prototype[h] || (l.prototype[h] = a.prototype[h]);
              }
              function l(t3) {
                if (!(this instanceof l))
                  return new l(t3);
                n.call(this, t3), a.call(this, t3), this.allowHalfOpen = true, t3 && (false === t3.readable && (this.readable = false), false === t3.writable && (this.writable = false), false === t3.allowHalfOpen && (this.allowHalfOpen = false, this.once("end", f)));
              }
              function f() {
                this._writableState.ended || r3.nextTick(u, this);
              }
              function u(t3) {
                t3.end();
              }
              Object.defineProperty(l.prototype, "writableHighWaterMark", { enumerable: false, get: function() {
                return this._writableState.highWaterMark;
              } }), Object.defineProperty(l.prototype, "writableBuffer", { enumerable: false, get: function() {
                return this._writableState && this._writableState.getBuffer();
              } }), Object.defineProperty(l.prototype, "writableLength", { enumerable: false, get: function() {
                return this._writableState.length;
              } }), Object.defineProperty(l.prototype, "destroyed", { enumerable: false, get: function() {
                return void 0 !== this._readableState && void 0 !== this._writableState && this._readableState.destroyed && this._writableState.destroyed;
              }, set: function(t3) {
                void 0 !== this._readableState && void 0 !== this._writableState && (this._readableState.destroyed = t3, this._writableState.destroyed = t3);
              } });
            }).call(this);
          }).call(this, t2("_process"));
        }, { "./_stream_readable": 65, "./_stream_writable": 67, _process: 60, inherits: 45 }], 64: [function(t2, e2, r2) {
          "use strict";
          e2.exports = n;
          var i = t2("./_stream_transform");
          function n(t3) {
            if (!(this instanceof n))
              return new n(t3);
            i.call(this, t3);
          }
          t2("inherits")(n, i), n.prototype._transform = function(t3, e3, r3) {
            r3(null, t3);
          };
        }, { "./_stream_transform": 66, inherits: 45 }], 65: [function(t2, e2, i) {
          (function(r2, i2) {
            (function() {
              "use strict";
              var n;
              e2.exports = S, S.ReadableState = k, t2("events").EventEmitter;
              var a = function(t3, e3) {
                return t3.listeners(e3).length;
              }, o = t2("./internal/streams/stream"), s = t2("buffer").Buffer, h = i2.Uint8Array || function() {
              };
              var l, f = t2("util");
              l = f && f.debuglog ? f.debuglog("stream") : function() {
              };
              var u, c, d, p = t2("./internal/streams/buffer_list"), m = t2("./internal/streams/destroy"), g = t2("./internal/streams/state").getHighWaterMark, b = t2("../errors").codes, _ = b.ERR_INVALID_ARG_TYPE, y = b.ERR_STREAM_PUSH_AFTER_EOF, w = b.ERR_METHOD_NOT_IMPLEMENTED, v = b.ERR_STREAM_UNSHIFT_AFTER_END_EVENT;
              t2("inherits")(S, o);
              var x = m.errorOrDestroy, E = ["error", "close", "destroy", "pause", "resume"];
              function k(e3, r3, i3) {
                n = n || t2("./_stream_duplex"), e3 = e3 || {}, "boolean" != typeof i3 && (i3 = r3 instanceof n), this.objectMode = !!e3.objectMode, i3 && (this.objectMode = this.objectMode || !!e3.readableObjectMode), this.highWaterMark = g(this, e3, "readableHighWaterMark", i3), this.buffer = new p(), this.length = 0, this.pipes = null, this.pipesCount = 0, this.flowing = null, this.ended = false, this.endEmitted = false, this.reading = false, this.sync = true, this.needReadable = false, this.emittedReadable = false, this.readableListening = false, this.resumeScheduled = false, this.paused = true, this.emitClose = false !== e3.emitClose, this.autoDestroy = !!e3.autoDestroy, this.destroyed = false, this.defaultEncoding = e3.defaultEncoding || "utf8", this.awaitDrain = 0, this.readingMore = false, this.decoder = null, this.encoding = null, e3.encoding && (u || (u = t2("string_decoder/").StringDecoder), this.decoder = new u(e3.encoding), this.encoding = e3.encoding);
              }
              function S(e3) {
                if (n = n || t2("./_stream_duplex"), !(this instanceof S))
                  return new S(e3);
                var r3 = this instanceof n;
                this._readableState = new k(e3, this, r3), this.readable = true, e3 && ("function" == typeof e3.read && (this._read = e3.read), "function" == typeof e3.destroy && (this._destroy = e3.destroy)), o.call(this);
              }
              function M(t3, e3, r3, i3, n2) {
                l("readableAddChunk", e3);
                var a2, o2 = t3._readableState;
                if (null === e3)
                  o2.reading = false, function(t4, e4) {
                    if (l("onEofChunk"), !e4.ended) {
                      if (e4.decoder) {
                        var r4 = e4.decoder.end();
                        r4 && r4.length && (e4.buffer.push(r4), e4.length += e4.objectMode ? 1 : r4.length);
                      }
                      e4.ended = true, e4.sync ? T(t4) : (e4.needReadable = false, e4.emittedReadable || (e4.emittedReadable = true, R(t4)));
                    }
                  }(t3, o2);
                else if (n2 || (a2 = function(t4, e4) {
                  var r4;
                  return i4 = e4, s.isBuffer(i4) || i4 instanceof h || "string" == typeof e4 || void 0 === e4 || t4.objectMode || (r4 = new _("chunk", ["string", "Buffer", "Uint8Array"], e4)), r4;
                  var i4;
                }(o2, e3)), a2)
                  x(t3, a2);
                else if (o2.objectMode || e3 && e3.length > 0)
                  if ("string" == typeof e3 || o2.objectMode || Object.getPrototypeOf(e3) === s.prototype || (e3 = function(t4) {
                    return s.from(t4);
                  }(e3)), i3)
                    o2.endEmitted ? x(t3, new v()) : A(t3, o2, e3, true);
                  else if (o2.ended)
                    x(t3, new y());
                  else {
                    if (o2.destroyed)
                      return false;
                    o2.reading = false, o2.decoder && !r3 ? (e3 = o2.decoder.write(e3), o2.objectMode || 0 !== e3.length ? A(t3, o2, e3, false) : P(t3, o2)) : A(t3, o2, e3, false);
                  }
                else
                  i3 || (o2.reading = false, P(t3, o2));
                return !o2.ended && (o2.length < o2.highWaterMark || 0 === o2.length);
              }
              function A(t3, e3, r3, i3) {
                e3.flowing && 0 === e3.length && !e3.sync ? (e3.awaitDrain = 0, t3.emit("data", r3)) : (e3.length += e3.objectMode ? 1 : r3.length, i3 ? e3.buffer.unshift(r3) : e3.buffer.push(r3), e3.needReadable && T(t3)), P(t3, e3);
              }
              Object.defineProperty(S.prototype, "destroyed", { enumerable: false, get: function() {
                return void 0 !== this._readableState && this._readableState.destroyed;
              }, set: function(t3) {
                this._readableState && (this._readableState.destroyed = t3);
              } }), S.prototype.destroy = m.destroy, S.prototype._undestroy = m.undestroy, S.prototype._destroy = function(t3, e3) {
                e3(t3);
              }, S.prototype.push = function(t3, e3) {
                var r3, i3 = this._readableState;
                return i3.objectMode ? r3 = true : "string" == typeof t3 && ((e3 = e3 || i3.defaultEncoding) !== i3.encoding && (t3 = s.from(t3, e3), e3 = ""), r3 = true), M(this, t3, e3, false, r3);
              }, S.prototype.unshift = function(t3) {
                return M(this, t3, null, true, false);
              }, S.prototype.isPaused = function() {
                return false === this._readableState.flowing;
              }, S.prototype.setEncoding = function(e3) {
                u || (u = t2("string_decoder/").StringDecoder);
                var r3 = new u(e3);
                this._readableState.decoder = r3, this._readableState.encoding = this._readableState.decoder.encoding;
                for (var i3 = this._readableState.buffer.head, n2 = ""; null !== i3; )
                  n2 += r3.write(i3.data), i3 = i3.next;
                return this._readableState.buffer.clear(), "" !== n2 && this._readableState.buffer.push(n2), this._readableState.length = n2.length, this;
              };
              var I = 1073741824;
              function B(t3, e3) {
                return t3 <= 0 || 0 === e3.length && e3.ended ? 0 : e3.objectMode ? 1 : t3 != t3 ? e3.flowing && e3.length ? e3.buffer.head.data.length : e3.length : (t3 > e3.highWaterMark && (e3.highWaterMark = function(t4) {
                  return t4 >= I ? t4 = I : (t4--, t4 |= t4 >>> 1, t4 |= t4 >>> 2, t4 |= t4 >>> 4, t4 |= t4 >>> 8, t4 |= t4 >>> 16, t4++), t4;
                }(t3)), t3 <= e3.length ? t3 : e3.ended ? e3.length : (e3.needReadable = true, 0));
              }
              function T(t3) {
                var e3 = t3._readableState;
                l("emitReadable", e3.needReadable, e3.emittedReadable), e3.needReadable = false, e3.emittedReadable || (l("emitReadable", e3.flowing), e3.emittedReadable = true, r2.nextTick(R, t3));
              }
              function R(t3) {
                var e3 = t3._readableState;
                l("emitReadable_", e3.destroyed, e3.length, e3.ended), e3.destroyed || !e3.length && !e3.ended || (t3.emit("readable"), e3.emittedReadable = false), e3.needReadable = !e3.flowing && !e3.ended && e3.length <= e3.highWaterMark, z(t3);
              }
              function P(t3, e3) {
                e3.readingMore || (e3.readingMore = true, r2.nextTick(O, t3, e3));
              }
              function O(t3, e3) {
                for (; !e3.reading && !e3.ended && (e3.length < e3.highWaterMark || e3.flowing && 0 === e3.length); ) {
                  var r3 = e3.length;
                  if (l("maybeReadMore read 0"), t3.read(0), r3 === e3.length)
                    break;
                }
                e3.readingMore = false;
              }
              function L(t3) {
                var e3 = t3._readableState;
                e3.readableListening = t3.listenerCount("readable") > 0, e3.resumeScheduled && !e3.paused ? e3.flowing = true : t3.listenerCount("data") > 0 && t3.resume();
              }
              function C(t3) {
                l("readable nexttick read 0"), t3.read(0);
              }
              function U(t3, e3) {
                l("resume", e3.reading), e3.reading || t3.read(0), e3.resumeScheduled = false, t3.emit("resume"), z(t3), e3.flowing && !e3.reading && t3.read(0);
              }
              function z(t3) {
                var e3 = t3._readableState;
                for (l("flow", e3.flowing); e3.flowing && null !== t3.read(); )
                  ;
              }
              function D(t3, e3) {
                return 0 === e3.length ? null : (e3.objectMode ? r3 = e3.buffer.shift() : !t3 || t3 >= e3.length ? (r3 = e3.decoder ? e3.buffer.join("") : 1 === e3.buffer.length ? e3.buffer.first() : e3.buffer.concat(e3.length), e3.buffer.clear()) : r3 = e3.buffer.consume(t3, e3.decoder), r3);
                var r3;
              }
              function N(t3) {
                var e3 = t3._readableState;
                l("endReadable", e3.endEmitted), e3.endEmitted || (e3.ended = true, r2.nextTick(F, e3, t3));
              }
              function F(t3, e3) {
                if (l("endReadableNT", t3.endEmitted, t3.length), !t3.endEmitted && 0 === t3.length && (t3.endEmitted = true, e3.readable = false, e3.emit("end"), t3.autoDestroy)) {
                  var r3 = e3._writableState;
                  (!r3 || r3.autoDestroy && r3.finished) && e3.destroy();
                }
              }
              function j(t3, e3) {
                for (var r3 = 0, i3 = t3.length; r3 < i3; r3++)
                  if (t3[r3] === e3)
                    return r3;
                return -1;
              }
              S.prototype.read = function(t3) {
                l("read", t3), t3 = parseInt(t3, 10);
                var e3 = this._readableState, r3 = t3;
                if (0 !== t3 && (e3.emittedReadable = false), 0 === t3 && e3.needReadable && ((0 !== e3.highWaterMark ? e3.length >= e3.highWaterMark : e3.length > 0) || e3.ended))
                  return l("read: emitReadable", e3.length, e3.ended), 0 === e3.length && e3.ended ? N(this) : T(this), null;
                if (0 === (t3 = B(t3, e3)) && e3.ended)
                  return 0 === e3.length && N(this), null;
                var i3, n2 = e3.needReadable;
                return l("need readable", n2), (0 === e3.length || e3.length - t3 < e3.highWaterMark) && l("length less than watermark", n2 = true), e3.ended || e3.reading ? l("reading or ended", n2 = false) : n2 && (l("do read"), e3.reading = true, e3.sync = true, 0 === e3.length && (e3.needReadable = true), this._read(e3.highWaterMark), e3.sync = false, e3.reading || (t3 = B(r3, e3))), null === (i3 = t3 > 0 ? D(t3, e3) : null) ? (e3.needReadable = e3.length <= e3.highWaterMark, t3 = 0) : (e3.length -= t3, e3.awaitDrain = 0), 0 === e3.length && (e3.ended || (e3.needReadable = true), r3 !== t3 && e3.ended && N(this)), null !== i3 && this.emit("data", i3), i3;
              }, S.prototype._read = function(t3) {
                x(this, new w("_read()"));
              }, S.prototype.pipe = function(t3, e3) {
                var i3 = this, n2 = this._readableState;
                switch (n2.pipesCount) {
                  case 0:
                    n2.pipes = t3;
                    break;
                  case 1:
                    n2.pipes = [n2.pipes, t3];
                    break;
                  default:
                    n2.pipes.push(t3);
                }
                n2.pipesCount += 1, l("pipe count=%d opts=%j", n2.pipesCount, e3);
                var o2 = e3 && false === e3.end || t3 === r2.stdout || t3 === r2.stderr ? g2 : h2;
                function s2(e4, r3) {
                  l("onunpipe"), e4 === i3 && r3 && false === r3.hasUnpiped && (r3.hasUnpiped = true, l("cleanup"), t3.removeListener("close", p2), t3.removeListener("finish", m2), t3.removeListener("drain", f2), t3.removeListener("error", d2), t3.removeListener("unpipe", s2), i3.removeListener("end", h2), i3.removeListener("end", g2), i3.removeListener("data", c2), u2 = true, !n2.awaitDrain || t3._writableState && !t3._writableState.needDrain || f2());
                }
                function h2() {
                  l("onend"), t3.end();
                }
                n2.endEmitted ? r2.nextTick(o2) : i3.once("end", o2), t3.on("unpipe", s2);
                var f2 = /* @__PURE__ */ function(t4) {
                  return function() {
                    var e4 = t4._readableState;
                    l("pipeOnDrain", e4.awaitDrain), e4.awaitDrain && e4.awaitDrain--, 0 === e4.awaitDrain && a(t4, "data") && (e4.flowing = true, z(t4));
                  };
                }(i3);
                t3.on("drain", f2);
                var u2 = false;
                function c2(e4) {
                  l("ondata");
                  var r3 = t3.write(e4);
                  l("dest.write", r3), false === r3 && ((1 === n2.pipesCount && n2.pipes === t3 || n2.pipesCount > 1 && -1 !== j(n2.pipes, t3)) && !u2 && (l("false write response, pause", n2.awaitDrain), n2.awaitDrain++), i3.pause());
                }
                function d2(e4) {
                  l("onerror", e4), g2(), t3.removeListener("error", d2), 0 === a(t3, "error") && x(t3, e4);
                }
                function p2() {
                  t3.removeListener("finish", m2), g2();
                }
                function m2() {
                  l("onfinish"), t3.removeListener("close", p2), g2();
                }
                function g2() {
                  l("unpipe"), i3.unpipe(t3);
                }
                return i3.on("data", c2), function(t4, e4, r3) {
                  if ("function" == typeof t4.prependListener)
                    return t4.prependListener(e4, r3);
                  t4._events && t4._events[e4] ? Array.isArray(t4._events[e4]) ? t4._events[e4].unshift(r3) : t4._events[e4] = [r3, t4._events[e4]] : t4.on(e4, r3);
                }(t3, "error", d2), t3.once("close", p2), t3.once("finish", m2), t3.emit("pipe", i3), n2.flowing || (l("pipe resume"), i3.resume()), t3;
              }, S.prototype.unpipe = function(t3) {
                var e3 = this._readableState, r3 = { hasUnpiped: false };
                if (0 === e3.pipesCount)
                  return this;
                if (1 === e3.pipesCount)
                  return t3 && t3 !== e3.pipes || (t3 || (t3 = e3.pipes), e3.pipes = null, e3.pipesCount = 0, e3.flowing = false, t3 && t3.emit("unpipe", this, r3)), this;
                if (!t3) {
                  var i3 = e3.pipes, n2 = e3.pipesCount;
                  e3.pipes = null, e3.pipesCount = 0, e3.flowing = false;
                  for (var a2 = 0; a2 < n2; a2++)
                    i3[a2].emit("unpipe", this, { hasUnpiped: false });
                  return this;
                }
                var o2 = j(e3.pipes, t3);
                return -1 === o2 || (e3.pipes.splice(o2, 1), e3.pipesCount -= 1, 1 === e3.pipesCount && (e3.pipes = e3.pipes[0]), t3.emit("unpipe", this, r3)), this;
              }, S.prototype.on = function(t3, e3) {
                var i3 = o.prototype.on.call(this, t3, e3), n2 = this._readableState;
                return "data" === t3 ? (n2.readableListening = this.listenerCount("readable") > 0, false !== n2.flowing && this.resume()) : "readable" === t3 && (n2.endEmitted || n2.readableListening || (n2.readableListening = n2.needReadable = true, n2.flowing = false, n2.emittedReadable = false, l("on readable", n2.length, n2.reading), n2.length ? T(this) : n2.reading || r2.nextTick(C, this))), i3;
              }, S.prototype.addListener = S.prototype.on, S.prototype.removeListener = function(t3, e3) {
                var i3 = o.prototype.removeListener.call(this, t3, e3);
                return "readable" === t3 && r2.nextTick(L, this), i3;
              }, S.prototype.removeAllListeners = function(t3) {
                var e3 = o.prototype.removeAllListeners.apply(this, arguments);
                return "readable" !== t3 && void 0 !== t3 || r2.nextTick(L, this), e3;
              }, S.prototype.resume = function() {
                var t3 = this._readableState;
                return t3.flowing || (l("resume"), t3.flowing = !t3.readableListening, function(t4, e3) {
                  e3.resumeScheduled || (e3.resumeScheduled = true, r2.nextTick(U, t4, e3));
                }(this, t3)), t3.paused = false, this;
              }, S.prototype.pause = function() {
                return l("call pause flowing=%j", this._readableState.flowing), false !== this._readableState.flowing && (l("pause"), this._readableState.flowing = false, this.emit("pause")), this._readableState.paused = true, this;
              }, S.prototype.wrap = function(t3) {
                var e3 = this, r3 = this._readableState, i3 = false;
                for (var n2 in t3.on("end", function() {
                  if (l("wrapped end"), r3.decoder && !r3.ended) {
                    var t4 = r3.decoder.end();
                    t4 && t4.length && e3.push(t4);
                  }
                  e3.push(null);
                }), t3.on("data", function(n3) {
                  l("wrapped data"), r3.decoder && (n3 = r3.decoder.write(n3)), r3.objectMode && null == n3 || (r3.objectMode || n3 && n3.length) && (e3.push(n3) || (i3 = true, t3.pause()));
                }), t3)
                  void 0 === this[n2] && "function" == typeof t3[n2] && (this[n2] = /* @__PURE__ */ function(e4) {
                    return function() {
                      return t3[e4].apply(t3, arguments);
                    };
                  }(n2));
                for (var a2 = 0; a2 < E.length; a2++)
                  t3.on(E[a2], this.emit.bind(this, E[a2]));
                return this._read = function(e4) {
                  l("wrapped _read", e4), i3 && (i3 = false, t3.resume());
                }, this;
              }, "function" == typeof Symbol && (S.prototype[Symbol.asyncIterator] = function() {
                return void 0 === c && (c = t2("./internal/streams/async_iterator")), c(this);
              }), Object.defineProperty(S.prototype, "readableHighWaterMark", { enumerable: false, get: function() {
                return this._readableState.highWaterMark;
              } }), Object.defineProperty(S.prototype, "readableBuffer", { enumerable: false, get: function() {
                return this._readableState && this._readableState.buffer;
              } }), Object.defineProperty(S.prototype, "readableFlowing", { enumerable: false, get: function() {
                return this._readableState.flowing;
              }, set: function(t3) {
                this._readableState && (this._readableState.flowing = t3);
              } }), S._fromList = D, Object.defineProperty(S.prototype, "readableLength", { enumerable: false, get: function() {
                return this._readableState.length;
              } }), "function" == typeof Symbol && (S.from = function(e3, r3) {
                return void 0 === d && (d = t2("./internal/streams/from")), d(S, e3, r3);
              });
            }).call(this);
          }).call(this, t2("_process"), void 0 !== r.g ? r.g : "undefined" != typeof self ? self : "undefined" != typeof window ? window : {});
        }, { "../errors": 62, "./_stream_duplex": 63, "./internal/streams/async_iterator": 68, "./internal/streams/buffer_list": 69, "./internal/streams/destroy": 70, "./internal/streams/from": 72, "./internal/streams/state": 74, "./internal/streams/stream": 75, _process: 60, buffer: 33, events: 38, inherits: 45, "string_decoder/": 76, util: 30 }], 66: [function(t2, e2, r2) {
          "use strict";
          e2.exports = f;
          var i = t2("../errors").codes, n = i.ERR_METHOD_NOT_IMPLEMENTED, a = i.ERR_MULTIPLE_CALLBACK, o = i.ERR_TRANSFORM_ALREADY_TRANSFORMING, s = i.ERR_TRANSFORM_WITH_LENGTH_0, h = t2("./_stream_duplex");
          function l(t3, e3) {
            var r3 = this._transformState;
            r3.transforming = false;
            var i2 = r3.writecb;
            if (null === i2)
              return this.emit("error", new a());
            r3.writechunk = null, r3.writecb = null, null != e3 && this.push(e3), i2(t3);
            var n2 = this._readableState;
            n2.reading = false, (n2.needReadable || n2.length < n2.highWaterMark) && this._read(n2.highWaterMark);
          }
          function f(t3) {
            if (!(this instanceof f))
              return new f(t3);
            h.call(this, t3), this._transformState = { afterTransform: l.bind(this), needTransform: false, transforming: false, writecb: null, writechunk: null, writeencoding: null }, this._readableState.needReadable = true, this._readableState.sync = false, t3 && ("function" == typeof t3.transform && (this._transform = t3.transform), "function" == typeof t3.flush && (this._flush = t3.flush)), this.on("prefinish", u);
          }
          function u() {
            var t3 = this;
            "function" != typeof this._flush || this._readableState.destroyed ? c(this, null, null) : this._flush(function(e3, r3) {
              c(t3, e3, r3);
            });
          }
          function c(t3, e3, r3) {
            if (e3)
              return t3.emit("error", e3);
            if (null != r3 && t3.push(r3), t3._writableState.length)
              throw new s();
            if (t3._transformState.transforming)
              throw new o();
            return t3.push(null);
          }
          t2("inherits")(f, h), f.prototype.push = function(t3, e3) {
            return this._transformState.needTransform = false, h.prototype.push.call(this, t3, e3);
          }, f.prototype._transform = function(t3, e3, r3) {
            r3(new n("_transform()"));
          }, f.prototype._write = function(t3, e3, r3) {
            var i2 = this._transformState;
            if (i2.writecb = r3, i2.writechunk = t3, i2.writeencoding = e3, !i2.transforming) {
              var n2 = this._readableState;
              (i2.needTransform || n2.needReadable || n2.length < n2.highWaterMark) && this._read(n2.highWaterMark);
            }
          }, f.prototype._read = function(t3) {
            var e3 = this._transformState;
            null === e3.writechunk || e3.transforming ? e3.needTransform = true : (e3.transforming = true, this._transform(e3.writechunk, e3.writeencoding, e3.afterTransform));
          }, f.prototype._destroy = function(t3, e3) {
            h.prototype._destroy.call(this, t3, function(t4) {
              e3(t4);
            });
          };
        }, { "../errors": 62, "./_stream_duplex": 63, inherits: 45 }], 67: [function(t2, e2, i) {
          (function(r2, i2) {
            (function() {
              "use strict";
              function n(t3) {
                var e3 = this;
                this.next = null, this.entry = null, this.finish = function() {
                  !function(t4, e4, r3) {
                    var i3 = t4.entry;
                    for (t4.entry = null; i3; ) {
                      var n2 = i3.callback;
                      e4.pendingcb--, n2(r3), i3 = i3.next;
                    }
                    e4.corkedRequestsFree.next = t4;
                  }(e3, t3);
                };
              }
              var a;
              e2.exports = S, S.WritableState = k;
              var o = { deprecate: t2("util-deprecate") }, s = t2("./internal/streams/stream"), h = t2("buffer").Buffer, l = i2.Uint8Array || function() {
              };
              var f, u = t2("./internal/streams/destroy"), c = t2("./internal/streams/state").getHighWaterMark, d = t2("../errors").codes, p = d.ERR_INVALID_ARG_TYPE, m = d.ERR_METHOD_NOT_IMPLEMENTED, g = d.ERR_MULTIPLE_CALLBACK, b = d.ERR_STREAM_CANNOT_PIPE, _ = d.ERR_STREAM_DESTROYED, y = d.ERR_STREAM_NULL_VALUES, w = d.ERR_STREAM_WRITE_AFTER_END, v = d.ERR_UNKNOWN_ENCODING, x = u.errorOrDestroy;
              function E() {
              }
              function k(e3, i3, o2) {
                a = a || t2("./_stream_duplex"), e3 = e3 || {}, "boolean" != typeof o2 && (o2 = i3 instanceof a), this.objectMode = !!e3.objectMode, o2 && (this.objectMode = this.objectMode || !!e3.writableObjectMode), this.highWaterMark = c(this, e3, "writableHighWaterMark", o2), this.finalCalled = false, this.needDrain = false, this.ending = false, this.ended = false, this.finished = false, this.destroyed = false;
                var s2 = false === e3.decodeStrings;
                this.decodeStrings = !s2, this.defaultEncoding = e3.defaultEncoding || "utf8", this.length = 0, this.writing = false, this.corked = 0, this.sync = true, this.bufferProcessing = false, this.onwrite = function(t3) {
                  !function(t4, e4) {
                    var i4 = t4._writableState, n2 = i4.sync, a2 = i4.writecb;
                    if ("function" != typeof a2)
                      throw new g();
                    if (function(t5) {
                      t5.writing = false, t5.writecb = null, t5.length -= t5.writelen, t5.writelen = 0;
                    }(i4), e4)
                      !function(t5, e5, i5, n3, a3) {
                        --e5.pendingcb, i5 ? (r2.nextTick(a3, n3), r2.nextTick(P, t5, e5), t5._writableState.errorEmitted = true, x(t5, n3)) : (a3(n3), t5._writableState.errorEmitted = true, x(t5, n3), P(t5, e5));
                      }(t4, i4, n2, e4, a2);
                    else {
                      var o3 = T(i4) || t4.destroyed;
                      o3 || i4.corked || i4.bufferProcessing || !i4.bufferedRequest || B(t4, i4), n2 ? r2.nextTick(I, t4, i4, o3, a2) : I(t4, i4, o3, a2);
                    }
                  }(i3, t3);
                }, this.writecb = null, this.writelen = 0, this.bufferedRequest = null, this.lastBufferedRequest = null, this.pendingcb = 0, this.prefinished = false, this.errorEmitted = false, this.emitClose = false !== e3.emitClose, this.autoDestroy = !!e3.autoDestroy, this.bufferedRequestCount = 0, this.corkedRequestsFree = new n(this);
              }
              function S(e3) {
                var r3 = this instanceof (a = a || t2("./_stream_duplex"));
                if (!r3 && !f.call(S, this))
                  return new S(e3);
                this._writableState = new k(e3, this, r3), this.writable = true, e3 && ("function" == typeof e3.write && (this._write = e3.write), "function" == typeof e3.writev && (this._writev = e3.writev), "function" == typeof e3.destroy && (this._destroy = e3.destroy), "function" == typeof e3.final && (this._final = e3.final)), s.call(this);
              }
              function M(t3, e3, r3, i3, n2, a2) {
                if (!r3) {
                  var o2 = function(t4, e4, r4) {
                    return t4.objectMode || false === t4.decodeStrings || "string" != typeof e4 || (e4 = h.from(e4, r4)), e4;
                  }(e3, i3, n2);
                  i3 !== o2 && (r3 = true, n2 = "buffer", i3 = o2);
                }
                var s2 = e3.objectMode ? 1 : i3.length;
                e3.length += s2;
                var l2 = e3.length < e3.highWaterMark;
                if (l2 || (e3.needDrain = true), e3.writing || e3.corked) {
                  var f2 = e3.lastBufferedRequest;
                  e3.lastBufferedRequest = { chunk: i3, encoding: n2, isBuf: r3, callback: a2, next: null }, f2 ? f2.next = e3.lastBufferedRequest : e3.bufferedRequest = e3.lastBufferedRequest, e3.bufferedRequestCount += 1;
                } else
                  A(t3, e3, false, s2, i3, n2, a2);
                return l2;
              }
              function A(t3, e3, r3, i3, n2, a2, o2) {
                e3.writelen = i3, e3.writecb = o2, e3.writing = true, e3.sync = true, e3.destroyed ? e3.onwrite(new _("write")) : r3 ? t3._writev(n2, e3.onwrite) : t3._write(n2, a2, e3.onwrite), e3.sync = false;
              }
              function I(t3, e3, r3, i3) {
                r3 || function(t4, e4) {
                  0 === e4.length && e4.needDrain && (e4.needDrain = false, t4.emit("drain"));
                }(t3, e3), e3.pendingcb--, i3(), P(t3, e3);
              }
              function B(t3, e3) {
                e3.bufferProcessing = true;
                var r3 = e3.bufferedRequest;
                if (t3._writev && r3 && r3.next) {
                  var i3 = e3.bufferedRequestCount, a2 = new Array(i3), o2 = e3.corkedRequestsFree;
                  o2.entry = r3;
                  for (var s2 = 0, h2 = true; r3; )
                    a2[s2] = r3, r3.isBuf || (h2 = false), r3 = r3.next, s2 += 1;
                  a2.allBuffers = h2, A(t3, e3, true, e3.length, a2, "", o2.finish), e3.pendingcb++, e3.lastBufferedRequest = null, o2.next ? (e3.corkedRequestsFree = o2.next, o2.next = null) : e3.corkedRequestsFree = new n(e3), e3.bufferedRequestCount = 0;
                } else {
                  for (; r3; ) {
                    var l2 = r3.chunk, f2 = r3.encoding, u2 = r3.callback;
                    if (A(t3, e3, false, e3.objectMode ? 1 : l2.length, l2, f2, u2), r3 = r3.next, e3.bufferedRequestCount--, e3.writing)
                      break;
                  }
                  null === r3 && (e3.lastBufferedRequest = null);
                }
                e3.bufferedRequest = r3, e3.bufferProcessing = false;
              }
              function T(t3) {
                return t3.ending && 0 === t3.length && null === t3.bufferedRequest && !t3.finished && !t3.writing;
              }
              function R(t3, e3) {
                t3._final(function(r3) {
                  e3.pendingcb--, r3 && x(t3, r3), e3.prefinished = true, t3.emit("prefinish"), P(t3, e3);
                });
              }
              function P(t3, e3) {
                var i3 = T(e3);
                if (i3 && (function(t4, e4) {
                  e4.prefinished || e4.finalCalled || ("function" != typeof t4._final || e4.destroyed ? (e4.prefinished = true, t4.emit("prefinish")) : (e4.pendingcb++, e4.finalCalled = true, r2.nextTick(R, t4, e4)));
                }(t3, e3), 0 === e3.pendingcb && (e3.finished = true, t3.emit("finish"), e3.autoDestroy))) {
                  var n2 = t3._readableState;
                  (!n2 || n2.autoDestroy && n2.endEmitted) && t3.destroy();
                }
                return i3;
              }
              t2("inherits")(S, s), k.prototype.getBuffer = function() {
                for (var t3 = this.bufferedRequest, e3 = []; t3; )
                  e3.push(t3), t3 = t3.next;
                return e3;
              }, function() {
                try {
                  Object.defineProperty(k.prototype, "buffer", { get: o.deprecate(function() {
                    return this.getBuffer();
                  }, "_writableState.buffer is deprecated. Use _writableState.getBuffer instead.", "DEP0003") });
                } catch (t3) {
                }
              }(), "function" == typeof Symbol && Symbol.hasInstance && "function" == typeof Function.prototype[Symbol.hasInstance] ? (f = Function.prototype[Symbol.hasInstance], Object.defineProperty(S, Symbol.hasInstance, { value: function(t3) {
                return !!f.call(this, t3) || this === S && t3 && t3._writableState instanceof k;
              } })) : f = function(t3) {
                return t3 instanceof this;
              }, S.prototype.pipe = function() {
                x(this, new b());
              }, S.prototype.write = function(t3, e3, i3) {
                var n2, a2 = this._writableState, o2 = false, s2 = !a2.objectMode && (n2 = t3, h.isBuffer(n2) || n2 instanceof l);
                return s2 && !h.isBuffer(t3) && (t3 = function(t4) {
                  return h.from(t4);
                }(t3)), "function" == typeof e3 && (i3 = e3, e3 = null), s2 ? e3 = "buffer" : e3 || (e3 = a2.defaultEncoding), "function" != typeof i3 && (i3 = E), a2.ending ? function(t4, e4) {
                  var i4 = new w();
                  x(t4, i4), r2.nextTick(e4, i4);
                }(this, i3) : (s2 || function(t4, e4, i4, n3) {
                  var a3;
                  return null === i4 ? a3 = new y() : "string" == typeof i4 || e4.objectMode || (a3 = new p("chunk", ["string", "Buffer"], i4)), !a3 || (x(t4, a3), r2.nextTick(n3, a3), false);
                }(this, a2, t3, i3)) && (a2.pendingcb++, o2 = M(this, a2, s2, t3, e3, i3)), o2;
              }, S.prototype.cork = function() {
                this._writableState.corked++;
              }, S.prototype.uncork = function() {
                var t3 = this._writableState;
                t3.corked && (t3.corked--, t3.writing || t3.corked || t3.bufferProcessing || !t3.bufferedRequest || B(this, t3));
              }, S.prototype.setDefaultEncoding = function(t3) {
                if ("string" == typeof t3 && (t3 = t3.toLowerCase()), !(["hex", "utf8", "utf-8", "ascii", "binary", "base64", "ucs2", "ucs-2", "utf16le", "utf-16le", "raw"].indexOf((t3 + "").toLowerCase()) > -1))
                  throw new v(t3);
                return this._writableState.defaultEncoding = t3, this;
              }, Object.defineProperty(S.prototype, "writableBuffer", { enumerable: false, get: function() {
                return this._writableState && this._writableState.getBuffer();
              } }), Object.defineProperty(S.prototype, "writableHighWaterMark", { enumerable: false, get: function() {
                return this._writableState.highWaterMark;
              } }), S.prototype._write = function(t3, e3, r3) {
                r3(new m("_write()"));
              }, S.prototype._writev = null, S.prototype.end = function(t3, e3, i3) {
                var n2 = this._writableState;
                return "function" == typeof t3 ? (i3 = t3, t3 = null, e3 = null) : "function" == typeof e3 && (i3 = e3, e3 = null), null != t3 && this.write(t3, e3), n2.corked && (n2.corked = 1, this.uncork()), n2.ending || function(t4, e4, i4) {
                  e4.ending = true, P(t4, e4), i4 && (e4.finished ? r2.nextTick(i4) : t4.once("finish", i4)), e4.ended = true, t4.writable = false;
                }(this, n2, i3), this;
              }, Object.defineProperty(S.prototype, "writableLength", { enumerable: false, get: function() {
                return this._writableState.length;
              } }), Object.defineProperty(S.prototype, "destroyed", { enumerable: false, get: function() {
                return void 0 !== this._writableState && this._writableState.destroyed;
              }, set: function(t3) {
                this._writableState && (this._writableState.destroyed = t3);
              } }), S.prototype.destroy = u.destroy, S.prototype._undestroy = u.undestroy, S.prototype._destroy = function(t3, e3) {
                e3(t3);
              };
            }).call(this);
          }).call(this, t2("_process"), void 0 !== r.g ? r.g : "undefined" != typeof self ? self : "undefined" != typeof window ? window : {});
        }, { "../errors": 62, "./_stream_duplex": 63, "./internal/streams/destroy": 70, "./internal/streams/state": 74, "./internal/streams/stream": 75, _process: 60, buffer: 33, inherits: 45, "util-deprecate": 78 }], 68: [function(t2, e2, r2) {
          (function(r3) {
            (function() {
              "use strict";
              var i;
              function n(t3, e3, r4) {
                return e3 in t3 ? Object.defineProperty(t3, e3, { value: r4, enumerable: true, configurable: true, writable: true }) : t3[e3] = r4, t3;
              }
              var a = t2("./end-of-stream"), o = Symbol("lastResolve"), s = Symbol("lastReject"), h = Symbol("error"), l = Symbol("ended"), f = Symbol("lastPromise"), u = Symbol("handlePromise"), c = Symbol("stream");
              function d(t3, e3) {
                return { value: t3, done: e3 };
              }
              function p(t3) {
                var e3 = t3[o];
                if (null !== e3) {
                  var r4 = t3[c].read();
                  null !== r4 && (t3[f] = null, t3[o] = null, t3[s] = null, e3(d(r4, false)));
                }
              }
              function m(t3) {
                r3.nextTick(p, t3);
              }
              var g = Object.getPrototypeOf(function() {
              }), b = Object.setPrototypeOf((n(i = { get stream() {
                return this[c];
              }, next: function() {
                var t3 = this, e3 = this[h];
                if (null !== e3)
                  return Promise.reject(e3);
                if (this[l])
                  return Promise.resolve(d(void 0, true));
                if (this[c].destroyed)
                  return new Promise(function(e4, i3) {
                    r3.nextTick(function() {
                      t3[h] ? i3(t3[h]) : e4(d(void 0, true));
                    });
                  });
                var i2, n2 = this[f];
                if (n2)
                  i2 = new Promise(/* @__PURE__ */ function(t4, e4) {
                    return function(r4, i3) {
                      t4.then(function() {
                        e4[l] ? r4(d(void 0, true)) : e4[u](r4, i3);
                      }, i3);
                    };
                  }(n2, this));
                else {
                  var a2 = this[c].read();
                  if (null !== a2)
                    return Promise.resolve(d(a2, false));
                  i2 = new Promise(this[u]);
                }
                return this[f] = i2, i2;
              } }, Symbol.asyncIterator, function() {
                return this;
              }), n(i, "return", function() {
                var t3 = this;
                return new Promise(function(e3, r4) {
                  t3[c].destroy(null, function(t4) {
                    t4 ? r4(t4) : e3(d(void 0, true));
                  });
                });
              }), i), g);
              e2.exports = function(t3) {
                var e3, r4 = Object.create(b, (n(e3 = {}, c, { value: t3, writable: true }), n(e3, o, { value: null, writable: true }), n(e3, s, { value: null, writable: true }), n(e3, h, { value: null, writable: true }), n(e3, l, { value: t3._readableState.endEmitted, writable: true }), n(e3, u, { value: function(t4, e4) {
                  var i2 = r4[c].read();
                  i2 ? (r4[f] = null, r4[o] = null, r4[s] = null, t4(d(i2, false))) : (r4[o] = t4, r4[s] = e4);
                }, writable: true }), e3));
                return r4[f] = null, a(t3, function(t4) {
                  if (t4 && "ERR_STREAM_PREMATURE_CLOSE" !== t4.code) {
                    var e4 = r4[s];
                    return null !== e4 && (r4[f] = null, r4[o] = null, r4[s] = null, e4(t4)), void (r4[h] = t4);
                  }
                  var i2 = r4[o];
                  null !== i2 && (r4[f] = null, r4[o] = null, r4[s] = null, i2(d(void 0, true))), r4[l] = true;
                }), t3.on("readable", m.bind(null, r4)), r4;
              };
            }).call(this);
          }).call(this, t2("_process"));
        }, { "./end-of-stream": 71, _process: 60 }], 69: [function(t2, e2, r2) {
          "use strict";
          function i(t3, e3) {
            var r3 = Object.keys(t3);
            if (Object.getOwnPropertySymbols) {
              var i2 = Object.getOwnPropertySymbols(t3);
              e3 && (i2 = i2.filter(function(e4) {
                return Object.getOwnPropertyDescriptor(t3, e4).enumerable;
              })), r3.push.apply(r3, i2);
            }
            return r3;
          }
          function n(t3, e3, r3) {
            return e3 in t3 ? Object.defineProperty(t3, e3, { value: r3, enumerable: true, configurable: true, writable: true }) : t3[e3] = r3, t3;
          }
          function a(t3, e3) {
            for (var r3 = 0; r3 < e3.length; r3++) {
              var i2 = e3[r3];
              i2.enumerable = i2.enumerable || false, i2.configurable = true, "value" in i2 && (i2.writable = true), Object.defineProperty(t3, i2.key, i2);
            }
          }
          var o = t2("buffer").Buffer, s = t2("util").inspect, h = s && s.custom || "inspect";
          e2.exports = function() {
            function t3() {
              (function(t4, e4) {
                if (!(t4 instanceof e4))
                  throw new TypeError("Cannot call a class as a function");
              })(this, t3), this.head = null, this.tail = null, this.length = 0;
            }
            return e3 = t3, r3 = [{ key: "push", value: function(t4) {
              var e4 = { data: t4, next: null };
              this.length > 0 ? this.tail.next = e4 : this.head = e4, this.tail = e4, ++this.length;
            } }, { key: "unshift", value: function(t4) {
              var e4 = { data: t4, next: this.head };
              0 === this.length && (this.tail = e4), this.head = e4, ++this.length;
            } }, { key: "shift", value: function() {
              if (0 !== this.length) {
                var t4 = this.head.data;
                return 1 === this.length ? this.head = this.tail = null : this.head = this.head.next, --this.length, t4;
              }
            } }, { key: "clear", value: function() {
              this.head = this.tail = null, this.length = 0;
            } }, { key: "join", value: function(t4) {
              if (0 === this.length)
                return "";
              for (var e4 = this.head, r4 = "" + e4.data; e4 = e4.next; )
                r4 += t4 + e4.data;
              return r4;
            } }, { key: "concat", value: function(t4) {
              if (0 === this.length)
                return o.alloc(0);
              for (var e4 = o.allocUnsafe(t4 >>> 0), r4 = this.head, i2 = 0; r4; )
                n2 = r4.data, a2 = e4, s2 = i2, o.prototype.copy.call(n2, a2, s2), i2 += r4.data.length, r4 = r4.next;
              var n2, a2, s2;
              return e4;
            } }, { key: "consume", value: function(t4, e4) {
              var r4;
              return t4 < this.head.data.length ? (r4 = this.head.data.slice(0, t4), this.head.data = this.head.data.slice(t4)) : r4 = t4 === this.head.data.length ? this.shift() : e4 ? this._getString(t4) : this._getBuffer(t4), r4;
            } }, { key: "first", value: function() {
              return this.head.data;
            } }, { key: "_getString", value: function(t4) {
              var e4 = this.head, r4 = 1, i2 = e4.data;
              for (t4 -= i2.length; e4 = e4.next; ) {
                var n2 = e4.data, a2 = t4 > n2.length ? n2.length : t4;
                if (a2 === n2.length ? i2 += n2 : i2 += n2.slice(0, t4), 0 == (t4 -= a2)) {
                  a2 === n2.length ? (++r4, e4.next ? this.head = e4.next : this.head = this.tail = null) : (this.head = e4, e4.data = n2.slice(a2));
                  break;
                }
                ++r4;
              }
              return this.length -= r4, i2;
            } }, { key: "_getBuffer", value: function(t4) {
              var e4 = o.allocUnsafe(t4), r4 = this.head, i2 = 1;
              for (r4.data.copy(e4), t4 -= r4.data.length; r4 = r4.next; ) {
                var n2 = r4.data, a2 = t4 > n2.length ? n2.length : t4;
                if (n2.copy(e4, e4.length - t4, 0, a2), 0 == (t4 -= a2)) {
                  a2 === n2.length ? (++i2, r4.next ? this.head = r4.next : this.head = this.tail = null) : (this.head = r4, r4.data = n2.slice(a2));
                  break;
                }
                ++i2;
              }
              return this.length -= i2, e4;
            } }, { key: h, value: function(t4, e4) {
              return s(this, function(t5) {
                for (var e5 = 1; e5 < arguments.length; e5++) {
                  var r4 = null != arguments[e5] ? arguments[e5] : {};
                  e5 % 2 ? i(Object(r4), true).forEach(function(e6) {
                    n(t5, e6, r4[e6]);
                  }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(t5, Object.getOwnPropertyDescriptors(r4)) : i(Object(r4)).forEach(function(e6) {
                    Object.defineProperty(t5, e6, Object.getOwnPropertyDescriptor(r4, e6));
                  });
                }
                return t5;
              }({}, e4, { depth: 0, customInspect: false }));
            } }], r3 && a(e3.prototype, r3), l && a(e3, l), t3;
            var e3, r3, l;
          }();
        }, { buffer: 33, util: 30 }], 70: [function(t2, e2, r2) {
          (function(t3) {
            (function() {
              "use strict";
              function r3(t4, e3) {
                n(t4, e3), i(t4);
              }
              function i(t4) {
                t4._writableState && !t4._writableState.emitClose || t4._readableState && !t4._readableState.emitClose || t4.emit("close");
              }
              function n(t4, e3) {
                t4.emit("error", e3);
              }
              e2.exports = { destroy: function(e3, a) {
                var o = this, s = this._readableState && this._readableState.destroyed, h = this._writableState && this._writableState.destroyed;
                return s || h ? (a ? a(e3) : e3 && (this._writableState ? this._writableState.errorEmitted || (this._writableState.errorEmitted = true, t3.nextTick(n, this, e3)) : t3.nextTick(n, this, e3)), this) : (this._readableState && (this._readableState.destroyed = true), this._writableState && (this._writableState.destroyed = true), this._destroy(e3 || null, function(e4) {
                  !a && e4 ? o._writableState ? o._writableState.errorEmitted ? t3.nextTick(i, o) : (o._writableState.errorEmitted = true, t3.nextTick(r3, o, e4)) : t3.nextTick(r3, o, e4) : a ? (t3.nextTick(i, o), a(e4)) : t3.nextTick(i, o);
                }), this);
              }, undestroy: function() {
                this._readableState && (this._readableState.destroyed = false, this._readableState.reading = false, this._readableState.ended = false, this._readableState.endEmitted = false), this._writableState && (this._writableState.destroyed = false, this._writableState.ended = false, this._writableState.ending = false, this._writableState.finalCalled = false, this._writableState.prefinished = false, this._writableState.finished = false, this._writableState.errorEmitted = false);
              }, errorOrDestroy: function(t4, e3) {
                var r4 = t4._readableState, i2 = t4._writableState;
                r4 && r4.autoDestroy || i2 && i2.autoDestroy ? t4.destroy(e3) : t4.emit("error", e3);
              } };
            }).call(this);
          }).call(this, t2("_process"));
        }, { _process: 60 }], 71: [function(t2, e2, r2) {
          "use strict";
          var i = t2("../../../errors").codes.ERR_STREAM_PREMATURE_CLOSE;
          function n() {
          }
          e2.exports = function t3(e3, r3, a) {
            if ("function" == typeof r3)
              return t3(e3, null, r3);
            r3 || (r3 = {}), a = /* @__PURE__ */ function(t4) {
              var e4 = false;
              return function() {
                if (!e4) {
                  e4 = true;
                  for (var r4 = arguments.length, i2 = new Array(r4), n2 = 0; n2 < r4; n2++)
                    i2[n2] = arguments[n2];
                  t4.apply(this, i2);
                }
              };
            }(a || n);
            var o = r3.readable || false !== r3.readable && e3.readable, s = r3.writable || false !== r3.writable && e3.writable, h = function() {
              e3.writable || f();
            }, l = e3._writableState && e3._writableState.finished, f = function() {
              s = false, l = true, o || a.call(e3);
            }, u = e3._readableState && e3._readableState.endEmitted, c = function() {
              o = false, u = true, s || a.call(e3);
            }, d = function(t4) {
              a.call(e3, t4);
            }, p = function() {
              var t4;
              return o && !u ? (e3._readableState && e3._readableState.ended || (t4 = new i()), a.call(e3, t4)) : s && !l ? (e3._writableState && e3._writableState.ended || (t4 = new i()), a.call(e3, t4)) : void 0;
            }, m = function() {
              e3.req.on("finish", f);
            };
            return function(t4) {
              return t4.setHeader && "function" == typeof t4.abort;
            }(e3) ? (e3.on("complete", f), e3.on("abort", p), e3.req ? m() : e3.on("request", m)) : s && !e3._writableState && (e3.on("end", h), e3.on("close", h)), e3.on("end", c), e3.on("finish", f), false !== r3.error && e3.on("error", d), e3.on("close", p), function() {
              e3.removeListener("complete", f), e3.removeListener("abort", p), e3.removeListener("request", m), e3.req && e3.req.removeListener("finish", f), e3.removeListener("end", h), e3.removeListener("close", h), e3.removeListener("finish", f), e3.removeListener("end", c), e3.removeListener("error", d), e3.removeListener("close", p);
            };
          };
        }, { "../../../errors": 62 }], 72: [function(t2, e2, r2) {
          e2.exports = function() {
            throw new Error("Readable.from is not available in the browser");
          };
        }, {}], 73: [function(t2, e2, r2) {
          "use strict";
          var i;
          var n = t2("../../../errors").codes, a = n.ERR_MISSING_ARGS, o = n.ERR_STREAM_DESTROYED;
          function s(t3) {
            if (t3)
              throw t3;
          }
          function h(t3) {
            t3();
          }
          function l(t3, e3) {
            return t3.pipe(e3);
          }
          e2.exports = function() {
            for (var e3 = arguments.length, r3 = new Array(e3), n2 = 0; n2 < e3; n2++)
              r3[n2] = arguments[n2];
            var f, u = function(t3) {
              return t3.length ? "function" != typeof t3[t3.length - 1] ? s : t3.pop() : s;
            }(r3);
            if (Array.isArray(r3[0]) && (r3 = r3[0]), r3.length < 2)
              throw new a("streams");
            var c = r3.map(function(e4, n3) {
              var a2 = n3 < r3.length - 1;
              return function(e5, r4, n4, a3) {
                a3 = /* @__PURE__ */ function(t3) {
                  var e6 = false;
                  return function() {
                    e6 || (e6 = true, t3.apply(void 0, arguments));
                  };
                }(a3);
                var s2 = false;
                e5.on("close", function() {
                  s2 = true;
                }), void 0 === i && (i = t2("./end-of-stream")), i(e5, { readable: r4, writable: n4 }, function(t3) {
                  if (t3)
                    return a3(t3);
                  s2 = true, a3();
                });
                var h2 = false;
                return function(t3) {
                  if (!s2 && !h2)
                    return h2 = true, function(t4) {
                      return t4.setHeader && "function" == typeof t4.abort;
                    }(e5) ? e5.abort() : "function" == typeof e5.destroy ? e5.destroy() : void a3(t3 || new o("pipe"));
                };
              }(e4, a2, n3 > 0, function(t3) {
                f || (f = t3), t3 && c.forEach(h), a2 || (c.forEach(h), u(f));
              });
            });
            return r3.reduce(l);
          };
        }, { "../../../errors": 62, "./end-of-stream": 71 }], 74: [function(t2, e2, r2) {
          "use strict";
          var i = t2("../../../errors").codes.ERR_INVALID_OPT_VALUE;
          e2.exports = { getHighWaterMark: function(t3, e3, r3, n) {
            var a = function(t4, e4, r4) {
              return null != t4.highWaterMark ? t4.highWaterMark : e4 ? t4[r4] : null;
            }(e3, n, r3);
            if (null != a) {
              if (!isFinite(a) || Math.floor(a) !== a || a < 0)
                throw new i(n ? r3 : "highWaterMark", a);
              return Math.floor(a);
            }
            return t3.objectMode ? 16 : 16384;
          } };
        }, { "../../../errors": 62 }], 75: [function(t2, e2, r2) {
          e2.exports = t2("events").EventEmitter;
        }, { events: 38 }], 76: [function(t2, e2, r2) {
          "use strict";
          var i = t2("safe-buffer").Buffer, n = i.isEncoding || function(t3) {
            switch ((t3 = "" + t3) && t3.toLowerCase()) {
              case "hex":
              case "utf8":
              case "utf-8":
              case "ascii":
              case "binary":
              case "base64":
              case "ucs2":
              case "ucs-2":
              case "utf16le":
              case "utf-16le":
              case "raw":
                return true;
              default:
                return false;
            }
          };
          function a(t3) {
            var e3;
            switch (this.encoding = function(t4) {
              var e4 = function(t5) {
                if (!t5)
                  return "utf8";
                for (var e5; ; )
                  switch (t5) {
                    case "utf8":
                    case "utf-8":
                      return "utf8";
                    case "ucs2":
                    case "ucs-2":
                    case "utf16le":
                    case "utf-16le":
                      return "utf16le";
                    case "latin1":
                    case "binary":
                      return "latin1";
                    case "base64":
                    case "ascii":
                    case "hex":
                      return t5;
                    default:
                      if (e5)
                        return;
                      t5 = ("" + t5).toLowerCase(), e5 = true;
                  }
              }(t4);
              if ("string" != typeof e4 && (i.isEncoding === n || !n(t4)))
                throw new Error("Unknown encoding: " + t4);
              return e4 || t4;
            }(t3), this.encoding) {
              case "utf16le":
                this.text = h, this.end = l, e3 = 4;
                break;
              case "utf8":
                this.fillLast = s, e3 = 4;
                break;
              case "base64":
                this.text = f, this.end = u, e3 = 3;
                break;
              default:
                return this.write = c, void (this.end = d);
            }
            this.lastNeed = 0, this.lastTotal = 0, this.lastChar = i.allocUnsafe(e3);
          }
          function o(t3) {
            return t3 <= 127 ? 0 : t3 >> 5 == 6 ? 2 : t3 >> 4 == 14 ? 3 : t3 >> 3 == 30 ? 4 : t3 >> 6 == 2 ? -1 : -2;
          }
          function s(t3) {
            var e3 = this.lastTotal - this.lastNeed, r3 = function(t4, e4, r4) {
              if (128 != (192 & e4[0]))
                return t4.lastNeed = 0, "�";
              if (t4.lastNeed > 1 && e4.length > 1) {
                if (128 != (192 & e4[1]))
                  return t4.lastNeed = 1, "�";
                if (t4.lastNeed > 2 && e4.length > 2 && 128 != (192 & e4[2]))
                  return t4.lastNeed = 2, "�";
              }
            }(this, t3);
            return void 0 !== r3 ? r3 : this.lastNeed <= t3.length ? (t3.copy(this.lastChar, e3, 0, this.lastNeed), this.lastChar.toString(this.encoding, 0, this.lastTotal)) : (t3.copy(this.lastChar, e3, 0, t3.length), void (this.lastNeed -= t3.length));
          }
          function h(t3, e3) {
            if ((t3.length - e3) % 2 == 0) {
              var r3 = t3.toString("utf16le", e3);
              if (r3) {
                var i2 = r3.charCodeAt(r3.length - 1);
                if (i2 >= 55296 && i2 <= 56319)
                  return this.lastNeed = 2, this.lastTotal = 4, this.lastChar[0] = t3[t3.length - 2], this.lastChar[1] = t3[t3.length - 1], r3.slice(0, -1);
              }
              return r3;
            }
            return this.lastNeed = 1, this.lastTotal = 2, this.lastChar[0] = t3[t3.length - 1], t3.toString("utf16le", e3, t3.length - 1);
          }
          function l(t3) {
            var e3 = t3 && t3.length ? this.write(t3) : "";
            if (this.lastNeed) {
              var r3 = this.lastTotal - this.lastNeed;
              return e3 + this.lastChar.toString("utf16le", 0, r3);
            }
            return e3;
          }
          function f(t3, e3) {
            var r3 = (t3.length - e3) % 3;
            return 0 === r3 ? t3.toString("base64", e3) : (this.lastNeed = 3 - r3, this.lastTotal = 3, 1 === r3 ? this.lastChar[0] = t3[t3.length - 1] : (this.lastChar[0] = t3[t3.length - 2], this.lastChar[1] = t3[t3.length - 1]), t3.toString("base64", e3, t3.length - r3));
          }
          function u(t3) {
            var e3 = t3 && t3.length ? this.write(t3) : "";
            return this.lastNeed ? e3 + this.lastChar.toString("base64", 0, 3 - this.lastNeed) : e3;
          }
          function c(t3) {
            return t3.toString(this.encoding);
          }
          function d(t3) {
            return t3 && t3.length ? this.write(t3) : "";
          }
          r2.StringDecoder = a, a.prototype.write = function(t3) {
            if (0 === t3.length)
              return "";
            var e3, r3;
            if (this.lastNeed) {
              if (void 0 === (e3 = this.fillLast(t3)))
                return "";
              r3 = this.lastNeed, this.lastNeed = 0;
            } else
              r3 = 0;
            return r3 < t3.length ? e3 ? e3 + this.text(t3, r3) : this.text(t3, r3) : e3 || "";
          }, a.prototype.end = function(t3) {
            var e3 = t3 && t3.length ? this.write(t3) : "";
            return this.lastNeed ? e3 + "�" : e3;
          }, a.prototype.text = function(t3, e3) {
            var r3 = function(t4, e4, r4) {
              var i3 = e4.length - 1;
              if (i3 < r4)
                return 0;
              var n2 = o(e4[i3]);
              return n2 >= 0 ? (n2 > 0 && (t4.lastNeed = n2 - 1), n2) : --i3 < r4 || -2 === n2 ? 0 : (n2 = o(e4[i3])) >= 0 ? (n2 > 0 && (t4.lastNeed = n2 - 2), n2) : --i3 < r4 || -2 === n2 ? 0 : (n2 = o(e4[i3])) >= 0 ? (n2 > 0 && (2 === n2 ? n2 = 0 : t4.lastNeed = n2 - 3), n2) : 0;
            }(this, t3, e3);
            if (!this.lastNeed)
              return t3.toString("utf8", e3);
            this.lastTotal = r3;
            var i2 = t3.length - (r3 - this.lastNeed);
            return t3.copy(this.lastChar, 0, i2), t3.toString("utf8", e3, i2);
          }, a.prototype.fillLast = function(t3) {
            if (this.lastNeed <= t3.length)
              return t3.copy(this.lastChar, this.lastTotal - this.lastNeed, 0, this.lastNeed), this.lastChar.toString(this.encoding, 0, this.lastTotal);
            t3.copy(this.lastChar, this.lastTotal - this.lastNeed, 0, t3.length), this.lastNeed -= t3.length;
          };
        }, { "safe-buffer": 77 }], 77: [function(t2, e2, r2) {
          var i = t2("buffer"), n = i.Buffer;
          function a(t3, e3) {
            for (var r3 in t3)
              e3[r3] = t3[r3];
          }
          function o(t3, e3, r3) {
            return n(t3, e3, r3);
          }
          n.from && n.alloc && n.allocUnsafe && n.allocUnsafeSlow ? e2.exports = i : (a(i, r2), r2.Buffer = o), o.prototype = Object.create(n.prototype), a(n, o), o.from = function(t3, e3, r3) {
            if ("number" == typeof t3)
              throw new TypeError("Argument must not be a number");
            return n(t3, e3, r3);
          }, o.alloc = function(t3, e3, r3) {
            if ("number" != typeof t3)
              throw new TypeError("Argument must be a number");
            var i2 = n(t3);
            return void 0 !== e3 ? "string" == typeof r3 ? i2.fill(e3, r3) : i2.fill(e3) : i2.fill(0), i2;
          }, o.allocUnsafe = function(t3) {
            if ("number" != typeof t3)
              throw new TypeError("Argument must be a number");
            return n(t3);
          }, o.allocUnsafeSlow = function(t3) {
            if ("number" != typeof t3)
              throw new TypeError("Argument must be a number");
            return i.SlowBuffer(t3);
          };
        }, { buffer: 33 }], 78: [function(t2, e2, i) {
          (function(t3) {
            (function() {
              function r2(e3) {
                try {
                  if (!t3.localStorage)
                    return false;
                } catch (t4) {
                  return false;
                }
                var r3 = t3.localStorage[e3];
                return null != r3 && "true" === String(r3).toLowerCase();
              }
              e2.exports = function(t4, e3) {
                if (r2("noDeprecation"))
                  return t4;
                var i2 = false;
                return function() {
                  if (!i2) {
                    if (r2("throwDeprecation"))
                      throw new Error(e3);
                    r2("traceDeprecation") ? console.trace(e3) : console.warn(e3), i2 = true;
                  }
                  return t4.apply(this, arguments);
                };
              };
            }).call(this);
          }).call(this, void 0 !== r.g ? r.g : "undefined" != typeof self ? self : "undefined" != typeof window ? window : {});
        }, {}], 79: [function(t2, e2, r2) {
          arguments[4][25][0].apply(r2, arguments);
        }, { dup: 25 }], 80: [function(t2, e2, r2) {
          "use strict";
          var i = t2("is-arguments"), n = t2("is-generator-function"), a = t2("which-typed-array"), o = t2("is-typed-array");
          function s(t3) {
            return t3.call.bind(t3);
          }
          var h = "undefined" != typeof BigInt, l = "undefined" != typeof Symbol, f = s(Object.prototype.toString), u = s(Number.prototype.valueOf), c = s(String.prototype.valueOf), d = s(Boolean.prototype.valueOf);
          if (h)
            var p = s(BigInt.prototype.valueOf);
          if (l)
            var m = s(Symbol.prototype.valueOf);
          function g(t3, e3) {
            if ("object" != typeof t3)
              return false;
            try {
              return e3(t3), true;
            } catch (t4) {
              return false;
            }
          }
          function b(t3) {
            return "[object Map]" === f(t3);
          }
          function _(t3) {
            return "[object Set]" === f(t3);
          }
          function y(t3) {
            return "[object WeakMap]" === f(t3);
          }
          function w(t3) {
            return "[object WeakSet]" === f(t3);
          }
          function v(t3) {
            return "[object ArrayBuffer]" === f(t3);
          }
          function x(t3) {
            return "undefined" != typeof ArrayBuffer && (v.working ? v(t3) : t3 instanceof ArrayBuffer);
          }
          function E(t3) {
            return "[object DataView]" === f(t3);
          }
          function k(t3) {
            return "undefined" != typeof DataView && (E.working ? E(t3) : t3 instanceof DataView);
          }
          function S(t3) {
            return "[object SharedArrayBuffer]" === f(t3);
          }
          function M(t3) {
            return "undefined" != typeof SharedArrayBuffer && (S.working ? S(t3) : t3 instanceof SharedArrayBuffer);
          }
          function A(t3) {
            return g(t3, u);
          }
          function I(t3) {
            return g(t3, c);
          }
          function B(t3) {
            return g(t3, d);
          }
          function T(t3) {
            return h && g(t3, p);
          }
          function R(t3) {
            return l && g(t3, m);
          }
          r2.isArgumentsObject = i, r2.isGeneratorFunction = n, r2.isTypedArray = o, r2.isPromise = function(t3) {
            return "undefined" != typeof Promise && t3 instanceof Promise || null !== t3 && "object" == typeof t3 && "function" == typeof t3.then && "function" == typeof t3.catch;
          }, r2.isArrayBufferView = function(t3) {
            return "undefined" != typeof ArrayBuffer && ArrayBuffer.isView ? ArrayBuffer.isView(t3) : o(t3) || k(t3);
          }, r2.isUint8Array = function(t3) {
            return "Uint8Array" === a(t3);
          }, r2.isUint8ClampedArray = function(t3) {
            return "Uint8ClampedArray" === a(t3);
          }, r2.isUint16Array = function(t3) {
            return "Uint16Array" === a(t3);
          }, r2.isUint32Array = function(t3) {
            return "Uint32Array" === a(t3);
          }, r2.isInt8Array = function(t3) {
            return "Int8Array" === a(t3);
          }, r2.isInt16Array = function(t3) {
            return "Int16Array" === a(t3);
          }, r2.isInt32Array = function(t3) {
            return "Int32Array" === a(t3);
          }, r2.isFloat32Array = function(t3) {
            return "Float32Array" === a(t3);
          }, r2.isFloat64Array = function(t3) {
            return "Float64Array" === a(t3);
          }, r2.isBigInt64Array = function(t3) {
            return "BigInt64Array" === a(t3);
          }, r2.isBigUint64Array = function(t3) {
            return "BigUint64Array" === a(t3);
          }, b.working = "undefined" != typeof Map && b(/* @__PURE__ */ new Map()), r2.isMap = function(t3) {
            return "undefined" != typeof Map && (b.working ? b(t3) : t3 instanceof Map);
          }, _.working = "undefined" != typeof Set && _(/* @__PURE__ */ new Set()), r2.isSet = function(t3) {
            return "undefined" != typeof Set && (_.working ? _(t3) : t3 instanceof Set);
          }, y.working = "undefined" != typeof WeakMap && y(/* @__PURE__ */ new WeakMap()), r2.isWeakMap = function(t3) {
            return "undefined" != typeof WeakMap && (y.working ? y(t3) : t3 instanceof WeakMap);
          }, w.working = "undefined" != typeof WeakSet && w(/* @__PURE__ */ new WeakSet()), r2.isWeakSet = function(t3) {
            return w(t3);
          }, v.working = "undefined" != typeof ArrayBuffer && v(new ArrayBuffer()), r2.isArrayBuffer = x, E.working = "undefined" != typeof ArrayBuffer && "undefined" != typeof DataView && E(new DataView(new ArrayBuffer(1), 0, 1)), r2.isDataView = k, S.working = "undefined" != typeof SharedArrayBuffer && S(new SharedArrayBuffer()), r2.isSharedArrayBuffer = M, r2.isAsyncFunction = function(t3) {
            return "[object AsyncFunction]" === f(t3);
          }, r2.isMapIterator = function(t3) {
            return "[object Map Iterator]" === f(t3);
          }, r2.isSetIterator = function(t3) {
            return "[object Set Iterator]" === f(t3);
          }, r2.isGeneratorObject = function(t3) {
            return "[object Generator]" === f(t3);
          }, r2.isWebAssemblyCompiledModule = function(t3) {
            return "[object WebAssembly.Module]" === f(t3);
          }, r2.isNumberObject = A, r2.isStringObject = I, r2.isBooleanObject = B, r2.isBigIntObject = T, r2.isSymbolObject = R, r2.isBoxedPrimitive = function(t3) {
            return A(t3) || I(t3) || B(t3) || T(t3) || R(t3);
          }, r2.isAnyArrayBuffer = function(t3) {
            return "undefined" != typeof Uint8Array && (x(t3) || M(t3));
          }, ["isProxy", "isExternal", "isModuleNamespaceObject"].forEach(function(t3) {
            Object.defineProperty(r2, t3, { enumerable: false, value: function() {
              throw new Error(t3 + " is not supported in userland");
            } });
          });
        }, { "is-arguments": 46, "is-generator-function": 47, "is-typed-array": 48, "which-typed-array": 82 }], 81: [function(t2, e2, r2) {
          (function(e3) {
            (function() {
              var i = Object.getOwnPropertyDescriptors || function(t3) {
                for (var e4 = Object.keys(t3), r3 = {}, i2 = 0; i2 < e4.length; i2++)
                  r3[e4[i2]] = Object.getOwnPropertyDescriptor(t3, e4[i2]);
                return r3;
              }, n = /%[sdj%]/g;
              r2.format = function(t3) {
                if (!_(t3)) {
                  for (var e4 = [], r3 = 0; r3 < arguments.length; r3++)
                    e4.push(h(arguments[r3]));
                  return e4.join(" ");
                }
                r3 = 1;
                for (var i2 = arguments, a2 = i2.length, o2 = String(t3).replace(n, function(t4) {
                  if ("%%" === t4)
                    return "%";
                  if (r3 >= a2)
                    return t4;
                  switch (t4) {
                    case "%s":
                      return String(i2[r3++]);
                    case "%d":
                      return Number(i2[r3++]);
                    case "%j":
                      try {
                        return JSON.stringify(i2[r3++]);
                      } catch (t5) {
                        return "[Circular]";
                      }
                    default:
                      return t4;
                  }
                }), s2 = i2[r3]; r3 < a2; s2 = i2[++r3])
                  g(s2) || !v(s2) ? o2 += " " + s2 : o2 += " " + h(s2);
                return o2;
              }, r2.deprecate = function(t3, i2) {
                if (void 0 !== e3 && true === e3.noDeprecation)
                  return t3;
                if (void 0 === e3)
                  return function() {
                    return r2.deprecate(t3, i2).apply(this, arguments);
                  };
                var n2 = false;
                return function() {
                  if (!n2) {
                    if (e3.throwDeprecation)
                      throw new Error(i2);
                    e3.traceDeprecation ? console.trace(i2) : console.error(i2), n2 = true;
                  }
                  return t3.apply(this, arguments);
                };
              };
              var a = {}, o = /^$/;
              if (e3.env.NODE_DEBUG) {
                var s = e3.env.NODE_DEBUG;
                s = s.replace(/[|\\{}()[\]^$+?.]/g, "\\$&").replace(/\*/g, ".*").replace(/,/g, "$|^").toUpperCase(), o = new RegExp("^" + s + "$", "i");
              }
              function h(t3, e4) {
                var i2 = { seen: [], stylize: f };
                return arguments.length >= 3 && (i2.depth = arguments[2]), arguments.length >= 4 && (i2.colors = arguments[3]), m(e4) ? i2.showHidden = e4 : e4 && r2._extend(i2, e4), y(i2.showHidden) && (i2.showHidden = false), y(i2.depth) && (i2.depth = 2), y(i2.colors) && (i2.colors = false), y(i2.customInspect) && (i2.customInspect = true), i2.colors && (i2.stylize = l), u(i2, t3, i2.depth);
              }
              function l(t3, e4) {
                var r3 = h.styles[e4];
                return r3 ? "\x1B[" + h.colors[r3][0] + "m" + t3 + "\x1B[" + h.colors[r3][1] + "m" : t3;
              }
              function f(t3, e4) {
                return t3;
              }
              function u(t3, e4, i2) {
                if (t3.customInspect && e4 && k(e4.inspect) && e4.inspect !== r2.inspect && (!e4.constructor || e4.constructor.prototype !== e4)) {
                  var n2 = e4.inspect(i2, t3);
                  return _(n2) || (n2 = u(t3, n2, i2)), n2;
                }
                var a2 = function(t4, e5) {
                  if (y(e5))
                    return t4.stylize("undefined", "undefined");
                  if (_(e5)) {
                    var r3 = "'" + JSON.stringify(e5).replace(/^"|"$/g, "").replace(/'/g, "\\'").replace(/\\"/g, '"') + "'";
                    return t4.stylize(r3, "string");
                  }
                  return b(e5) ? t4.stylize("" + e5, "number") : m(e5) ? t4.stylize("" + e5, "boolean") : g(e5) ? t4.stylize("null", "null") : void 0;
                }(t3, e4);
                if (a2)
                  return a2;
                var o2 = Object.keys(e4), s2 = function(t4) {
                  var e5 = {};
                  return t4.forEach(function(t5, r3) {
                    e5[t5] = true;
                  }), e5;
                }(o2);
                if (t3.showHidden && (o2 = Object.getOwnPropertyNames(e4)), E(e4) && (o2.indexOf("message") >= 0 || o2.indexOf("description") >= 0))
                  return c(e4);
                if (0 === o2.length) {
                  if (k(e4)) {
                    var h2 = e4.name ? ": " + e4.name : "";
                    return t3.stylize("[Function" + h2 + "]", "special");
                  }
                  if (w(e4))
                    return t3.stylize(RegExp.prototype.toString.call(e4), "regexp");
                  if (x(e4))
                    return t3.stylize(Date.prototype.toString.call(e4), "date");
                  if (E(e4))
                    return c(e4);
                }
                var l2, f2 = "", v2 = false, S2 = ["{", "}"];
                return p(e4) && (v2 = true, S2 = ["[", "]"]), k(e4) && (f2 = " [Function" + (e4.name ? ": " + e4.name : "") + "]"), w(e4) && (f2 = " " + RegExp.prototype.toString.call(e4)), x(e4) && (f2 = " " + Date.prototype.toUTCString.call(e4)), E(e4) && (f2 = " " + c(e4)), 0 !== o2.length || v2 && 0 != e4.length ? i2 < 0 ? w(e4) ? t3.stylize(RegExp.prototype.toString.call(e4), "regexp") : t3.stylize("[Object]", "special") : (t3.seen.push(e4), l2 = v2 ? function(t4, e5, r3, i3, n3) {
                  for (var a3 = [], o3 = 0, s3 = e5.length; o3 < s3; ++o3)
                    I(e5, String(o3)) ? a3.push(d(t4, e5, r3, i3, String(o3), true)) : a3.push("");
                  return n3.forEach(function(n4) {
                    n4.match(/^\d+$/) || a3.push(d(t4, e5, r3, i3, n4, true));
                  }), a3;
                }(t3, e4, i2, s2, o2) : o2.map(function(r3) {
                  return d(t3, e4, i2, s2, r3, v2);
                }), t3.seen.pop(), function(t4, e5, r3) {
                  return t4.reduce(function(t5, e6) {
                    return e6.indexOf("\n"), t5 + e6.replace(/\u001b\[\d\d?m/g, "").length + 1;
                  }, 0) > 60 ? r3[0] + ("" === e5 ? "" : e5 + "\n ") + " " + t4.join(",\n  ") + " " + r3[1] : r3[0] + e5 + " " + t4.join(", ") + " " + r3[1];
                }(l2, f2, S2)) : S2[0] + f2 + S2[1];
              }
              function c(t3) {
                return "[" + Error.prototype.toString.call(t3) + "]";
              }
              function d(t3, e4, r3, i2, n2, a2) {
                var o2, s2, h2;
                if ((h2 = Object.getOwnPropertyDescriptor(e4, n2) || { value: e4[n2] }).get ? s2 = h2.set ? t3.stylize("[Getter/Setter]", "special") : t3.stylize("[Getter]", "special") : h2.set && (s2 = t3.stylize("[Setter]", "special")), I(i2, n2) || (o2 = "[" + n2 + "]"), s2 || (t3.seen.indexOf(h2.value) < 0 ? (s2 = g(r3) ? u(t3, h2.value, null) : u(t3, h2.value, r3 - 1)).indexOf("\n") > -1 && (s2 = a2 ? s2.split("\n").map(function(t4) {
                  return "  " + t4;
                }).join("\n").substr(2) : "\n" + s2.split("\n").map(function(t4) {
                  return "   " + t4;
                }).join("\n")) : s2 = t3.stylize("[Circular]", "special")), y(o2)) {
                  if (a2 && n2.match(/^\d+$/))
                    return s2;
                  (o2 = JSON.stringify("" + n2)).match(/^"([a-zA-Z_][a-zA-Z_0-9]*)"$/) ? (o2 = o2.substr(1, o2.length - 2), o2 = t3.stylize(o2, "name")) : (o2 = o2.replace(/'/g, "\\'").replace(/\\"/g, '"').replace(/(^"|"$)/g, "'"), o2 = t3.stylize(o2, "string"));
                }
                return o2 + ": " + s2;
              }
              function p(t3) {
                return Array.isArray(t3);
              }
              function m(t3) {
                return "boolean" == typeof t3;
              }
              function g(t3) {
                return null === t3;
              }
              function b(t3) {
                return "number" == typeof t3;
              }
              function _(t3) {
                return "string" == typeof t3;
              }
              function y(t3) {
                return void 0 === t3;
              }
              function w(t3) {
                return v(t3) && "[object RegExp]" === S(t3);
              }
              function v(t3) {
                return "object" == typeof t3 && null !== t3;
              }
              function x(t3) {
                return v(t3) && "[object Date]" === S(t3);
              }
              function E(t3) {
                return v(t3) && ("[object Error]" === S(t3) || t3 instanceof Error);
              }
              function k(t3) {
                return "function" == typeof t3;
              }
              function S(t3) {
                return Object.prototype.toString.call(t3);
              }
              function M(t3) {
                return t3 < 10 ? "0" + t3.toString(10) : t3.toString(10);
              }
              r2.debuglog = function(t3) {
                if (t3 = t3.toUpperCase(), !a[t3])
                  if (o.test(t3)) {
                    var i2 = e3.pid;
                    a[t3] = function() {
                      var e4 = r2.format.apply(r2, arguments);
                      console.error("%s %d: %s", t3, i2, e4);
                    };
                  } else
                    a[t3] = function() {
                    };
                return a[t3];
              }, r2.inspect = h, h.colors = { bold: [1, 22], italic: [3, 23], underline: [4, 24], inverse: [7, 27], white: [37, 39], grey: [90, 39], black: [30, 39], blue: [34, 39], cyan: [36, 39], green: [32, 39], magenta: [35, 39], red: [31, 39], yellow: [33, 39] }, h.styles = { special: "cyan", number: "yellow", boolean: "yellow", undefined: "grey", null: "bold", string: "green", date: "magenta", regexp: "red" }, r2.types = t2("./support/types"), r2.isArray = p, r2.isBoolean = m, r2.isNull = g, r2.isNullOrUndefined = function(t3) {
                return null == t3;
              }, r2.isNumber = b, r2.isString = _, r2.isSymbol = function(t3) {
                return "symbol" == typeof t3;
              }, r2.isUndefined = y, r2.isRegExp = w, r2.types.isRegExp = w, r2.isObject = v, r2.isDate = x, r2.types.isDate = x, r2.isError = E, r2.types.isNativeError = E, r2.isFunction = k, r2.isPrimitive = function(t3) {
                return null === t3 || "boolean" == typeof t3 || "number" == typeof t3 || "string" == typeof t3 || "symbol" == typeof t3 || void 0 === t3;
              }, r2.isBuffer = t2("./support/isBuffer");
              var A = ["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"];
              function I(t3, e4) {
                return Object.prototype.hasOwnProperty.call(t3, e4);
              }
              r2.log = function() {
                var t3, e4;
                console.log("%s - %s", (t3 = /* @__PURE__ */ new Date(), e4 = [M(t3.getHours()), M(t3.getMinutes()), M(t3.getSeconds())].join(":"), [t3.getDate(), A[t3.getMonth()], e4].join(" ")), r2.format.apply(r2, arguments));
              }, r2.inherits = t2("inherits"), r2._extend = function(t3, e4) {
                if (!e4 || !v(e4))
                  return t3;
                for (var r3 = Object.keys(e4), i2 = r3.length; i2--; )
                  t3[r3[i2]] = e4[r3[i2]];
                return t3;
              };
              var B = "undefined" != typeof Symbol ? Symbol("util.promisify.custom") : void 0;
              function T(t3, e4) {
                if (!t3) {
                  var r3 = new Error("Promise was rejected with a falsy value");
                  r3.reason = t3, t3 = r3;
                }
                return e4(t3);
              }
              r2.promisify = function(t3) {
                if ("function" != typeof t3)
                  throw new TypeError('The "original" argument must be of type Function');
                if (B && t3[B]) {
                  var e4;
                  if ("function" != typeof (e4 = t3[B]))
                    throw new TypeError('The "util.promisify.custom" argument must be of type Function');
                  return Object.defineProperty(e4, B, { value: e4, enumerable: false, writable: false, configurable: true }), e4;
                }
                function e4() {
                  for (var e5, r3, i2 = new Promise(function(t4, i3) {
                    e5 = t4, r3 = i3;
                  }), n2 = [], a2 = 0; a2 < arguments.length; a2++)
                    n2.push(arguments[a2]);
                  n2.push(function(t4, i3) {
                    t4 ? r3(t4) : e5(i3);
                  });
                  try {
                    t3.apply(this, n2);
                  } catch (t4) {
                    r3(t4);
                  }
                  return i2;
                }
                return Object.setPrototypeOf(e4, Object.getPrototypeOf(t3)), B && Object.defineProperty(e4, B, { value: e4, enumerable: false, writable: false, configurable: true }), Object.defineProperties(e4, i(t3));
              }, r2.promisify.custom = B, r2.callbackify = function(t3) {
                if ("function" != typeof t3)
                  throw new TypeError('The "original" argument must be of type Function');
                function r3() {
                  for (var r4 = [], i2 = 0; i2 < arguments.length; i2++)
                    r4.push(arguments[i2]);
                  var n2 = r4.pop();
                  if ("function" != typeof n2)
                    throw new TypeError("The last argument must be of type Function");
                  var a2 = this, o2 = function() {
                    return n2.apply(a2, arguments);
                  };
                  t3.apply(this, r4).then(function(t4) {
                    e3.nextTick(o2.bind(null, null, t4));
                  }, function(t4) {
                    e3.nextTick(T.bind(null, t4, o2));
                  });
                }
                return Object.setPrototypeOf(r3, Object.getPrototypeOf(t3)), Object.defineProperties(r3, i(t3)), r3;
              };
            }).call(this);
          }).call(this, t2("_process"));
        }, { "./support/isBuffer": 79, "./support/types": 80, _process: 60, inherits: 45 }], 82: [function(t2, e2, i) {
          (function(r2) {
            (function() {
              "use strict";
              var i2 = t2("foreach"), n = t2("available-typed-arrays"), a = t2("es-abstract/helpers/callBound"), o = a("Object.prototype.toString"), s = t2("has-symbols")() && "symbol" == typeof Symbol.toStringTag, h = n(), l = a("String.prototype.slice"), f = {}, u = t2("es-abstract/helpers/getOwnPropertyDescriptor"), c = Object.getPrototypeOf;
              s && u && c && i2(h, function(t3) {
                if ("function" == typeof r2[t3]) {
                  var e3 = new r2[t3]();
                  if (!(Symbol.toStringTag in e3))
                    throw new EvalError("this engine has support for Symbol.toStringTag, but " + t3 + " does not have the property! Please report this.");
                  var i3 = c(e3), n2 = u(i3, Symbol.toStringTag);
                  if (!n2) {
                    var a2 = c(i3);
                    n2 = u(a2, Symbol.toStringTag);
                  }
                  f[t3] = n2.get;
                }
              });
              var d = t2("is-typed-array");
              e2.exports = function(t3) {
                return !!d(t3) && (s ? function(t4) {
                  var e3 = false;
                  return i2(f, function(r3, i3) {
                    if (!e3)
                      try {
                        var n2 = r3.call(t4);
                        n2 === i3 && (e3 = n2);
                      } catch (t5) {
                      }
                  }), e3;
                }(t3) : l(o(t3), 8, -1));
              };
            }).call(this);
          }).call(this, void 0 !== r.g ? r.g : "undefined" != typeof self ? self : "undefined" != typeof window ? window : {});
        }, { "available-typed-arrays": 27, "es-abstract/helpers/callBound": 36, "es-abstract/helpers/getOwnPropertyDescriptor": 37, foreach: 39, "has-symbols": 42, "is-typed-array": 48 }] }, {}, [20])(20);
      }, 4406: (t) => {
        var e = t.exports = {};
        e.nextTick = function() {
          var t2 = "undefined" != typeof window && window.setImmediate, e2 = "undefined" != typeof window && window.postMessage && window.addEventListener;
          if (t2)
            return function(t3) {
              return window.setImmediate(t3);
            };
          if (e2) {
            var r = [];
            return window.addEventListener("message", function(t3) {
              var e3 = t3.source;
              e3 !== window && null !== e3 || "process-tick" !== t3.data || (t3.stopPropagation(), r.length > 0 && r.shift()());
            }, true), function(t3) {
              r.push(t3), window.postMessage("process-tick", "*");
            };
          }
          return function(t3) {
            setTimeout(t3, 0);
          };
        }(), e.title = "browser", e.browser = true, e.env = {}, e.argv = [], e.binding = function(t2) {
          throw new Error("process.binding is not supported");
        }, e.cwd = function() {
          return "/";
        }, e.chdir = function(t2) {
          throw new Error("process.chdir is not supported");
        };
      }, 6197: (t, e, r) => {
        "use strict";
        var i = r(8834).lW;
        Object.defineProperty(e, "__esModule", { value: true }), e.AbstractTokenizer = void 0;
        const n = r(4644);
        e.AbstractTokenizer = class {
          constructor(t2) {
            this.position = 0, this.numBuffer = new Uint8Array(8), this.fileInfo = t2 || {};
          }
          async readToken(t2, e2 = this.position) {
            const r2 = i.alloc(t2.len);
            if (await this.readBuffer(r2, { position: e2 }) < t2.len)
              throw new n.EndOfStreamError();
            return t2.get(r2, 0);
          }
          async peekToken(t2, e2 = this.position) {
            const r2 = i.alloc(t2.len);
            if (await this.peekBuffer(r2, { position: e2 }) < t2.len)
              throw new n.EndOfStreamError();
            return t2.get(r2, 0);
          }
          async readNumber(t2) {
            if (await this.readBuffer(this.numBuffer, { length: t2.len }) < t2.len)
              throw new n.EndOfStreamError();
            return t2.get(this.numBuffer, 0);
          }
          async peekNumber(t2) {
            if (await this.peekBuffer(this.numBuffer, { length: t2.len }) < t2.len)
              throw new n.EndOfStreamError();
            return t2.get(this.numBuffer, 0);
          }
          async ignore(t2) {
            if (void 0 !== this.fileInfo.size) {
              const e2 = this.fileInfo.size - this.position;
              if (t2 > e2)
                return this.position += e2, e2;
            }
            return this.position += t2, t2;
          }
          async close() {
          }
          normalizeOptions(t2, e2) {
            if (e2 && void 0 !== e2.position && e2.position < this.position)
              throw new Error("`options.position` must be equal or greater than `tokenizer.position`");
            return e2 ? { mayBeLess: true === e2.mayBeLess, offset: e2.offset ? e2.offset : 0, length: e2.length ? e2.length : t2.length - (e2.offset ? e2.offset : 0), position: e2.position ? e2.position : this.position } : { mayBeLess: false, offset: 0, length: t2.length, position: this.position };
          }
        };
      }, 932: (t, e, r) => {
        "use strict";
        Object.defineProperty(e, "__esModule", { value: true }), e.BufferTokenizer = void 0;
        const i = r(4644), n = r(6197);
        class a extends n.AbstractTokenizer {
          constructor(t2, e2) {
            super(e2), this.uint8Array = t2, this.fileInfo.size = this.fileInfo.size ? this.fileInfo.size : t2.length;
          }
          async readBuffer(t2, e2) {
            if (e2 && e2.position) {
              if (e2.position < this.position)
                throw new Error("`options.position` must be equal or greater than `tokenizer.position`");
              this.position = e2.position;
            }
            const r2 = await this.peekBuffer(t2, e2);
            return this.position += r2, r2;
          }
          async peekBuffer(t2, e2) {
            const r2 = this.normalizeOptions(t2, e2), n2 = Math.min(this.uint8Array.length - r2.position, r2.length);
            if (!r2.mayBeLess && n2 < r2.length)
              throw new i.EndOfStreamError();
            return t2.set(this.uint8Array.subarray(r2.position, r2.position + n2), r2.offset), n2;
          }
          async close() {
          }
        }
        e.BufferTokenizer = a;
      }, 9425: (t, e, r) => {
        "use strict";
        Object.defineProperty(e, "__esModule", { value: true }), e.fromFile = e.FileTokenizer = void 0;
        const i = r(6197), n = r(4644), a = r(5187);
        class o extends i.AbstractTokenizer {
          constructor(t2, e2) {
            super(e2), this.fd = t2;
          }
          async readBuffer(t2, e2) {
            const r2 = this.normalizeOptions(t2, e2);
            this.position = r2.position;
            const i2 = await a.read(this.fd, t2, r2.offset, r2.length, r2.position);
            if (this.position += i2.bytesRead, i2.bytesRead < r2.length && (!e2 || !e2.mayBeLess))
              throw new n.EndOfStreamError();
            return i2.bytesRead;
          }
          async peekBuffer(t2, e2) {
            const r2 = this.normalizeOptions(t2, e2), i2 = await a.read(this.fd, t2, r2.offset, r2.length, r2.position);
            if (!r2.mayBeLess && i2.bytesRead < r2.length)
              throw new n.EndOfStreamError();
            return i2.bytesRead;
          }
          async close() {
            return a.close(this.fd);
          }
        }
        e.FileTokenizer = o, e.fromFile = async function(t2) {
          const e2 = await a.stat(t2);
          if (!e2.isFile)
            throw new Error(`File not a file: ${t2}`);
          const r2 = await a.open(t2, "r");
          return new o(r2, { path: t2, size: e2.size });
        };
      }, 5187: (t, e, r) => {
        "use strict";
        Object.defineProperty(e, "__esModule", { value: true }), e.readFile = e.writeFileSync = e.writeFile = e.read = e.open = e.close = e.stat = e.createReadStream = e.pathExists = void 0;
        const i = r(6777);
        e.pathExists = i.existsSync, e.createReadStream = i.createReadStream, e.stat = async function(t2) {
          return new Promise((e2, r2) => {
            i.stat(t2, (t3, i2) => {
              t3 ? r2(t3) : e2(i2);
            });
          });
        }, e.close = async function(t2) {
          return new Promise((e2, r2) => {
            i.close(t2, (t3) => {
              t3 ? r2(t3) : e2();
            });
          });
        }, e.open = async function(t2, e2) {
          return new Promise((r2, n) => {
            i.open(t2, e2, (t3, e3) => {
              t3 ? n(t3) : r2(e3);
            });
          });
        }, e.read = async function(t2, e2, r2, n, a) {
          return new Promise((o, s) => {
            i.read(t2, e2, r2, n, a, (t3, e3, r3) => {
              t3 ? s(t3) : o({ bytesRead: e3, buffer: r3 });
            });
          });
        }, e.writeFile = async function(t2, e2) {
          return new Promise((r2, n) => {
            i.writeFile(t2, e2, (t3) => {
              t3 ? n(t3) : r2();
            });
          });
        }, e.writeFileSync = function(t2, e2) {
          i.writeFileSync(t2, e2);
        }, e.readFile = async function(t2) {
          return new Promise((e2, r2) => {
            i.readFile(t2, (t3, i2) => {
              t3 ? r2(t3) : e2(i2);
            });
          });
        };
      }, 8286: (t, e, r) => {
        "use strict";
        Object.defineProperty(e, "__esModule", { value: true }), e.ReadStreamTokenizer = void 0;
        const i = r(6197), n = r(4644);
        class a extends i.AbstractTokenizer {
          constructor(t2, e2) {
            super(e2), this.streamReader = new n.StreamReader(t2);
          }
          async getFileInfo() {
            return this.fileInfo;
          }
          async readBuffer(t2, e2) {
            const r2 = this.normalizeOptions(t2, e2), i2 = r2.position - this.position;
            if (i2 > 0)
              return await this.ignore(i2), this.readBuffer(t2, e2);
            if (i2 < 0)
              throw new Error("`options.position` must be equal or greater than `tokenizer.position`");
            if (0 === r2.length)
              return 0;
            const a2 = await this.streamReader.read(t2, r2.offset, r2.length);
            if (this.position += a2, (!e2 || !e2.mayBeLess) && a2 < r2.length)
              throw new n.EndOfStreamError();
            return a2;
          }
          async peekBuffer(t2, e2) {
            const r2 = this.normalizeOptions(t2, e2);
            let i2 = 0;
            if (r2.position) {
              const e3 = r2.position - this.position;
              if (e3 > 0) {
                const n2 = new Uint8Array(r2.length + e3);
                return i2 = await this.peekBuffer(n2, { mayBeLess: r2.mayBeLess }), t2.set(n2.subarray(e3), r2.offset), i2 - e3;
              }
              if (e3 < 0)
                throw new Error("Cannot peek from a negative offset in a stream");
            }
            if (r2.length > 0) {
              try {
                i2 = await this.streamReader.peek(t2, r2.offset, r2.length);
              } catch (t3) {
                if (e2 && e2.mayBeLess && t3 instanceof n.EndOfStreamError)
                  return 0;
                throw t3;
              }
              if (!r2.mayBeLess && i2 < r2.length)
                throw new n.EndOfStreamError();
            }
            return i2;
          }
          async ignore(t2) {
            const e2 = Math.min(256e3, t2), r2 = new Uint8Array(e2);
            let i2 = 0;
            for (; i2 < t2; ) {
              const n2 = t2 - i2, a2 = await this.readBuffer(r2, { length: Math.min(e2, n2) });
              if (a2 < 0)
                return a2;
              i2 += a2;
            }
            return i2;
          }
        }
        e.ReadStreamTokenizer = a;
      }, 7378: (t, e, r) => {
        "use strict";
        Object.defineProperty(e, "__esModule", { value: true }), e.fromBuffer = e.fromStream = e.EndOfStreamError = void 0;
        const i = r(8286), n = r(932);
        var a = r(4644);
        Object.defineProperty(e, "EndOfStreamError", { enumerable: true, get: function() {
          return a.EndOfStreamError;
        } }), e.fromStream = function(t2, e2) {
          return e2 = e2 || {}, new i.ReadStreamTokenizer(t2, e2);
        }, e.fromBuffer = function(t2, e2) {
          return new n.BufferTokenizer(t2, e2);
        };
      }, 3569: (t, e, r) => {
        "use strict";
        Object.defineProperty(e, "__esModule", { value: true }), e.fromStream = e.fromBuffer = e.EndOfStreamError = e.fromFile = void 0;
        const i = r(5187), n = r(7378);
        var a = r(9425);
        Object.defineProperty(e, "fromFile", { enumerable: true, get: function() {
          return a.fromFile;
        } });
        var o = r(7378);
        Object.defineProperty(e, "EndOfStreamError", { enumerable: true, get: function() {
          return o.EndOfStreamError;
        } }), Object.defineProperty(e, "fromBuffer", { enumerable: true, get: function() {
          return o.fromBuffer;
        } }), e.fromStream = async function(t2, e2) {
          if (e2 = e2 || {}, t2.path) {
            const r2 = await i.stat(t2.path);
            e2.path = t2.path, e2.size = r2.size;
          }
          return n.fromStream(t2, e2);
        };
      }, 643: (t, e) => {
        "use strict";
        var r = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(t2) {
          return typeof t2;
        } : function(t2) {
          return t2 && "function" == typeof Symbol && t2.constructor === Symbol && t2 !== Symbol.prototype ? "symbol" : typeof t2;
        };
        e.Ee = function(t2, e2, r2, i2, n2, a2) {
          for (var o2 = arguments.length, h2 = Array(o2 > 6 ? o2 - 6 : 0), l = 6; l < o2; l++)
            h2[l - 6] = arguments[l];
          return h2.length ? s.call.apply(s, [null, false, true, t2, e2, r2, i2, n2, a2].concat(h2)) : s(false, true, t2, e2, r2, i2, n2, a2);
        };
        var i = "INVALID_ARGS";
        function n(t2) {
          throw new Error(t2);
        }
        function a(t2) {
          var e2 = Object.keys(t2);
          return Object.getOwnPropertySymbols ? e2.concat(Object.getOwnPropertySymbols(t2)) : e2;
        }
        function o(t2) {
          if (Array.isArray(t2))
            return t2.slice();
          for (var e2 = a(t2), r2 = {}, i2 = 0; i2 < e2.length; i2++) {
            var n2 = e2[i2];
            r2[n2] = t2[n2];
          }
          return r2;
        }
        function s(t2, e2, r2) {
          var l = r2;
          null == l && n(i);
          for (var f = false, u = arguments.length, c = Array(u > 3 ? u - 3 : 0), d = 3; d < u; d++)
            c[d - 3] = arguments[d];
          for (var p = 0; p < c.length; p++) {
            var m = c[p];
            if (null != m) {
              var g = a(m);
              if (g.length)
                for (var b = 0; b <= g.length; b++) {
                  var _ = g[b];
                  if (!t2 || void 0 === l[_]) {
                    var y = m[_];
                    e2 && h(l[_]) && h(y) && (y = s(t2, e2, l[_], y)), void 0 !== y && y !== l[_] && (f || (f = true, l = o(l)), l[_] = y);
                  }
                }
            }
          }
          return l;
        }
        function h(t2) {
          var e2 = void 0 === t2 ? "undefined" : r(t2);
          return null != t2 && "object" === e2;
        }
      }, 5010: (t, e, r) => {
        "use strict";
        var i = r(8834).lW;
        Object.defineProperty(e, "__esModule", { value: true }), e.AnsiStringType = e.StringType = e.BufferType = e.Uint8ArrayType = e.IgnoreType = e.Float80_LE = e.Float80_BE = e.Float64_LE = e.Float64_BE = e.Float32_LE = e.Float32_BE = e.Float16_LE = e.Float16_BE = e.INT64_BE = e.UINT64_BE = e.INT64_LE = e.UINT64_LE = e.INT32_LE = e.INT32_BE = e.INT24_BE = e.INT24_LE = e.INT16_LE = e.INT16_BE = e.INT8 = e.UINT32_BE = e.UINT32_LE = e.UINT24_BE = e.UINT24_LE = e.UINT16_BE = e.UINT16_LE = e.UINT8 = void 0;
        const n = r(2333);
        function a(t2) {
          return new DataView(t2.buffer, t2.byteOffset);
        }
        e.UINT8 = { len: 1, get: (t2, e2) => a(t2).getUint8(e2), put: (t2, e2, r2) => (a(t2).setUint8(e2, r2), e2 + 1) }, e.UINT16_LE = { len: 2, get: (t2, e2) => a(t2).getUint16(e2, true), put: (t2, e2, r2) => (a(t2).setUint16(e2, r2, true), e2 + 2) }, e.UINT16_BE = { len: 2, get: (t2, e2) => a(t2).getUint16(e2), put: (t2, e2, r2) => (a(t2).setUint16(e2, r2), e2 + 2) }, e.UINT24_LE = { len: 3, get(t2, e2) {
          const r2 = a(t2);
          return r2.getUint8(e2) + (r2.getUint16(e2 + 1, true) << 8);
        }, put(t2, e2, r2) {
          const i2 = a(t2);
          return i2.setUint8(e2, 255 & r2), i2.setUint16(e2 + 1, r2 >> 8, true), e2 + 3;
        } }, e.UINT24_BE = { len: 3, get(t2, e2) {
          const r2 = a(t2);
          return (r2.getUint16(e2) << 8) + r2.getUint8(e2 + 2);
        }, put(t2, e2, r2) {
          const i2 = a(t2);
          return i2.setUint16(e2, r2 >> 8), i2.setUint8(e2 + 2, 255 & r2), e2 + 3;
        } }, e.UINT32_LE = { len: 4, get: (t2, e2) => a(t2).getUint32(e2, true), put: (t2, e2, r2) => (a(t2).setUint32(e2, r2, true), e2 + 4) }, e.UINT32_BE = { len: 4, get: (t2, e2) => a(t2).getUint32(e2), put: (t2, e2, r2) => (a(t2).setUint32(e2, r2), e2 + 4) }, e.INT8 = { len: 1, get: (t2, e2) => a(t2).getInt8(e2), put: (t2, e2, r2) => (a(t2).setInt8(e2, r2), e2 + 1) }, e.INT16_BE = { len: 2, get: (t2, e2) => a(t2).getInt16(e2), put: (t2, e2, r2) => (a(t2).setInt16(e2, r2), e2 + 2) }, e.INT16_LE = { len: 2, get: (t2, e2) => a(t2).getInt16(e2, true), put: (t2, e2, r2) => (a(t2).setInt16(e2, r2, true), e2 + 2) }, e.INT24_LE = { len: 3, get(t2, r2) {
          const i2 = e.UINT24_LE.get(t2, r2);
          return i2 > 8388607 ? i2 - 16777216 : i2;
        }, put(t2, e2, r2) {
          const i2 = a(t2);
          return i2.setUint8(e2, 255 & r2), i2.setUint16(e2 + 1, r2 >> 8, true), e2 + 3;
        } }, e.INT24_BE = { len: 3, get(t2, r2) {
          const i2 = e.UINT24_BE.get(t2, r2);
          return i2 > 8388607 ? i2 - 16777216 : i2;
        }, put(t2, e2, r2) {
          const i2 = a(t2);
          return i2.setUint16(e2, r2 >> 8), i2.setUint8(e2 + 2, 255 & r2), e2 + 3;
        } }, e.INT32_BE = { len: 4, get: (t2, e2) => a(t2).getInt32(e2), put: (t2, e2, r2) => (a(t2).setInt32(e2, r2), e2 + 4) }, e.INT32_LE = { len: 4, get: (t2, e2) => a(t2).getInt32(e2, true), put: (t2, e2, r2) => (a(t2).setInt32(e2, r2, true), e2 + 4) }, e.UINT64_LE = { len: 8, get: (t2, e2) => a(t2).getBigUint64(e2, true), put: (t2, e2, r2) => (a(t2).setBigUint64(e2, r2, true), e2 + 8) }, e.INT64_LE = { len: 8, get: (t2, e2) => a(t2).getBigInt64(e2, true), put: (t2, e2, r2) => (a(t2).setBigInt64(e2, r2, true), e2 + 8) }, e.UINT64_BE = { len: 8, get: (t2, e2) => a(t2).getBigUint64(e2), put: (t2, e2, r2) => (a(t2).setBigUint64(e2, r2), e2 + 8) }, e.INT64_BE = { len: 8, get: (t2, e2) => a(t2).getBigInt64(e2), put: (t2, e2, r2) => (a(t2).setBigInt64(e2, r2), e2 + 8) }, e.Float16_BE = { len: 2, get(t2, e2) {
          return n.read(t2, e2, false, 10, this.len);
        }, put(t2, e2, r2) {
          return n.write(t2, r2, e2, false, 10, this.len), e2 + this.len;
        } }, e.Float16_LE = { len: 2, get(t2, e2) {
          return n.read(t2, e2, true, 10, this.len);
        }, put(t2, e2, r2) {
          return n.write(t2, r2, e2, true, 10, this.len), e2 + this.len;
        } }, e.Float32_BE = { len: 4, get: (t2, e2) => a(t2).getFloat32(e2), put: (t2, e2, r2) => (a(t2).setFloat32(e2, r2), e2 + 4) }, e.Float32_LE = { len: 4, get: (t2, e2) => a(t2).getFloat32(e2, true), put: (t2, e2, r2) => (a(t2).setFloat32(e2, r2, true), e2 + 4) }, e.Float64_BE = { len: 8, get: (t2, e2) => a(t2).getFloat64(e2), put: (t2, e2, r2) => (a(t2).setFloat64(e2, r2), e2 + 8) }, e.Float64_LE = { len: 8, get: (t2, e2) => a(t2).getFloat64(e2, true), put: (t2, e2, r2) => (a(t2).setFloat64(e2, r2, true), e2 + 8) }, e.Float80_BE = { len: 10, get(t2, e2) {
          return n.read(t2, e2, false, 63, this.len);
        }, put(t2, e2, r2) {
          return n.write(t2, r2, e2, false, 63, this.len), e2 + this.len;
        } }, e.Float80_LE = { len: 10, get(t2, e2) {
          return n.read(t2, e2, true, 63, this.len);
        }, put(t2, e2, r2) {
          return n.write(t2, r2, e2, true, 63, this.len), e2 + this.len;
        } }, e.IgnoreType = class {
          constructor(t2) {
            this.len = t2;
          }
          get(t2, e2) {
          }
        }, e.Uint8ArrayType = class {
          constructor(t2) {
            this.len = t2;
          }
          get(t2, e2) {
            return t2.subarray(e2, e2 + this.len);
          }
        }, e.BufferType = class {
          constructor(t2) {
            this.len = t2;
          }
          get(t2, e2) {
            return i.from(t2.subarray(e2, e2 + this.len));
          }
        }, e.StringType = class {
          constructor(t2, e2) {
            this.len = t2, this.encoding = e2;
          }
          get(t2, e2) {
            return i.from(t2).toString(this.encoding, e2, e2 + this.len);
          }
        };
        class o {
          constructor(t2) {
            this.len = t2;
          }
          static decode(t2, e2, r2) {
            let i2 = "";
            for (let n2 = e2; n2 < r2; ++n2)
              i2 += o.codePointToString(o.singleByteDecoder(t2[n2]));
            return i2;
          }
          static inRange(t2, e2, r2) {
            return e2 <= t2 && t2 <= r2;
          }
          static codePointToString(t2) {
            return t2 <= 65535 ? String.fromCharCode(t2) : (t2 -= 65536, String.fromCharCode(55296 + (t2 >> 10), 56320 + (1023 & t2)));
          }
          static singleByteDecoder(t2) {
            if (o.inRange(t2, 0, 127))
              return t2;
            const e2 = o.windows1252[t2 - 128];
            if (null === e2)
              throw Error("invaliding encoding");
            return e2;
          }
          get(t2, e2 = 0) {
            return o.decode(t2, e2, e2 + this.len);
          }
        }
        e.AnsiStringType = o, o.windows1252 = [8364, 129, 8218, 402, 8222, 8230, 8224, 8225, 710, 8240, 352, 8249, 338, 141, 381, 143, 144, 8216, 8217, 8220, 8221, 8226, 8211, 8212, 732, 8482, 353, 8250, 339, 157, 382, 376, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255];
      }, 311: (t, e) => {
        (e = t.exports = function(t2) {
          return t2.replace(/^\s*|\s*$/g, "");
        }).left = function(t2) {
          return t2.replace(/^\s*/, "");
        }, e.right = function(t2) {
          return t2.replace(/\s*$/, "");
        };
      }, 9299: (t, e, r) => {
        var i = r(4406);
        !function() {
          var e2 = {};
          function n() {
            void 0 === i && console.log.apply(console, arguments);
          }
          t.exports = e2, function(t2, e3) {
            var r2, i2, a, o, s, h, l, f, u, c, d, p, m, g, b;
            !function() {
              "use strict";
              var e4 = function() {
                function t3(t4) {
                  this.message = "JPEG error: " + t4;
                }
                return t3.prototype = new Error(), t3.prototype.name = "JpegError", t3.constructor = t3, t3;
              }(), r3 = function() {
                var t3 = new Uint8Array([0, 1, 8, 16, 9, 2, 3, 10, 17, 24, 32, 25, 18, 11, 4, 5, 12, 19, 26, 33, 40, 48, 41, 34, 27, 20, 13, 6, 7, 14, 21, 28, 35, 42, 49, 56, 57, 50, 43, 36, 29, 22, 15, 23, 30, 37, 44, 51, 58, 59, 52, 45, 38, 31, 39, 46, 53, 60, 61, 54, 47, 55, 62, 63]), r4 = 4017, n2 = 799, a2 = 3406, o2 = 2276, s2 = 1567, h2 = 3784, l2 = 5793, f2 = 2896;
                function u2(t4) {
                  null == t4 && (t4 = {}), null == t4.w && (t4.w = -1), this.V = t4.n, this.N = t4.w;
                }
                function c2(t4, e5) {
                  for (var r5, i4, n3, a3 = 0, o3 = [], s3 = 16; s3 > 0 && !t4[s3 - 1]; )
                    s3--;
                  o3.push({ children: [], index: 0 });
                  var h3 = o3[0];
                  for (r5 = 0; r5 < s3; r5++) {
                    for (i4 = 0; i4 < t4[r5]; i4++) {
                      for ((h3 = o3.pop()).children[h3.index] = e5[a3]; h3.index > 0; )
                        h3 = o3.pop();
                      for (h3.index++, o3.push(h3); o3.length <= r5; )
                        o3.push(n3 = { children: [], index: 0 }), h3.children[h3.index] = n3.children, h3 = n3;
                      a3++;
                    }
                    r5 + 1 < s3 && (o3.push(n3 = { children: [], index: 0 }), h3.children[h3.index] = n3.children, h3 = n3);
                  }
                  return o3[0].children;
                }
                function d2(t4, e5, r5) {
                  return 64 * ((t4.P + 1) * e5 + r5);
                }
                function p2(r5, n3, a3, o3, s3, h3, l3, f3, u3, c3) {
                  null == c3 && (c3 = false);
                  var p3, m3, g3, _, y, w, v, x, E, k, S, M = a3.m, A = a3.Z, I = n3, B = 0, T = 0, R = 0, P = 0, O = 0, L = 0;
                  function C() {
                    if (T > 0)
                      return T--, B >> T & 1;
                    if (255 === (B = r5[n3++])) {
                      var t4 = r5[n3++];
                      if (t4) {
                        if (220 === t4 && c3) {
                          var o4 = i3(r5, n3 += 2);
                          if (n3 += 2, o4 > 0 && o4 !== a3.s)
                            throw new DNLMarkerError("Found DNL marker (0xFFDC) while parsing scan data", o4);
                        } else if (217 === t4) {
                          if (c3) {
                            var s4 = 8 * O;
                            if (s4 > 0 && s4 < a3.s / 10)
                              throw new DNLMarkerError("Found EOI marker (0xFFD9) while parsing scan data, possibly caused by incorrect `scanLines` parameter", s4);
                          }
                          throw new EOIMarkerError("Found EOI marker (0xFFD9) while parsing scan data");
                        }
                        throw new e4("unexpected marker");
                      }
                    }
                    return T = 7, B >>> 7;
                  }
                  function U(t4) {
                    for (var r6 = t4; ; ) {
                      switch (typeof (r6 = r6[C()])) {
                        case "number":
                          return r6;
                        case "object":
                          continue;
                      }
                      throw new e4("invalid huffman sequence");
                    }
                  }
                  function z(t4) {
                    for (var e5 = 0; t4 > 0; )
                      e5 = e5 << 1 | C(), t4--;
                    return e5;
                  }
                  function D(t4) {
                    if (1 === t4)
                      return 1 === C() ? 1 : -1;
                    var e5 = z(t4);
                    return e5 >= 1 << t4 - 1 ? e5 : e5 + (-1 << t4) + 1;
                  }
                  function N(t4, e5, r6, i4, n4) {
                    var a4 = r6 % M;
                    O = (r6 / M | 0) * t4.A + i4;
                    var o4 = a4 * t4.h + n4;
                    e5(t4, d2(t4, O, o4));
                  }
                  function F(t4, e5, r6) {
                    O = r6 / t4.P | 0;
                    var i4 = r6 % t4.P;
                    e5(t4, d2(t4, O, i4));
                  }
                  var j = o3.length;
                  for (v = A ? 0 === h3 ? 0 === f3 ? function(t4, e5) {
                    var r6 = U(t4.J), i4 = 0 === r6 ? 0 : D(r6) << u3;
                    t4.D[e5] = t4.Q += i4;
                  } : function(t4, e5) {
                    t4.D[e5] |= C() << u3;
                  } : 0 === f3 ? function(e5, r6) {
                    if (R > 0)
                      R--;
                    else
                      for (var i4 = h3, n4 = l3; i4 <= n4; ) {
                        var a4 = U(e5.i), o4 = 15 & a4, s4 = a4 >> 4;
                        if (0 !== o4) {
                          var f4 = t3[i4 += s4];
                          e5.D[r6 + f4] = D(o4) * (1 << u3), i4++;
                        } else {
                          if (s4 < 15) {
                            R = z(s4) + (1 << s4) - 1;
                            break;
                          }
                          i4 += 16;
                        }
                      }
                  } : function(r6, i4) {
                    for (var n4, a4, o4 = h3, s4 = l3, f4 = 0; o4 <= s4; ) {
                      var c4 = i4 + t3[o4], d3 = r6.D[c4] < 0 ? -1 : 1;
                      switch (P) {
                        case 0:
                          if (f4 = (a4 = U(r6.i)) >> 4, 0 == (n4 = 15 & a4))
                            f4 < 15 ? (R = z(f4) + (1 << f4), P = 4) : (f4 = 16, P = 1);
                          else {
                            if (1 !== n4)
                              throw new e4("invalid ACn encoding");
                            p3 = D(n4), P = f4 ? 2 : 3;
                          }
                          continue;
                        case 1:
                        case 2:
                          r6.D[c4] ? r6.D[c4] += d3 * (C() << u3) : 0 == --f4 && (P = 2 === P ? 3 : 0);
                          break;
                        case 3:
                          r6.D[c4] ? r6.D[c4] += d3 * (C() << u3) : (r6.D[c4] = p3 << u3, P = 0);
                          break;
                        case 4:
                          r6.D[c4] && (r6.D[c4] += d3 * (C() << u3));
                      }
                      o4++;
                    }
                    4 === P && 0 == --R && (P = 0);
                  } : function(e5, r6) {
                    var i4 = U(e5.J), n4 = 0 === i4 ? 0 : D(i4), a4 = 1;
                    for (e5.D[r6] = e5.Q += n4; a4 < 64; ) {
                      var o4 = U(e5.i), s4 = 15 & o4, h4 = o4 >> 4;
                      if (0 !== s4) {
                        var l4 = t3[a4 += h4];
                        e5.D[r6 + l4] = D(s4), a4++;
                      } else {
                        if (h4 < 15)
                          break;
                        a4 += 16;
                      }
                    }
                  }, E = 1 === j ? o3[0].P * o3[0].c : M * a3.R; L <= E; ) {
                    var G = s3 ? Math.min(E - L, s3) : E;
                    if (G > 0) {
                      for (g3 = 0; g3 < j; g3++)
                        o3[g3].Q = 0;
                      if (R = 0, 1 === j)
                        for (m3 = o3[0], w = 0; w < G; w++)
                          F(m3, v, L), L++;
                      else
                        for (w = 0; w < G; w++) {
                          for (g3 = 0; g3 < j; g3++)
                            for (k = (m3 = o3[g3]).h, S = m3.A, _ = 0; _ < S; _++)
                              for (y = 0; y < k; y++)
                                N(m3, v, L, _, y);
                          L++;
                        }
                    }
                    if (T = 0, !(x = b2(r5, n3)))
                      break;
                    if (x.u && (n3 = x.offset), !(x.M >= 65488 && x.M <= 65495))
                      break;
                    n3 += 2;
                  }
                  return n3 - I;
                }
                function m2(t4, i4, u3) {
                  var c3, d3, p3, m3, g3, b3, _, y, w, v, x, E, k, S, M, A, I, B = t4.$, T = t4.D;
                  if (!B)
                    throw new e4("missing required Quantization Table.");
                  for (var R = 0; R < 64; R += 8)
                    w = T[i4 + R], v = T[i4 + R + 1], x = T[i4 + R + 2], E = T[i4 + R + 3], k = T[i4 + R + 4], S = T[i4 + R + 5], M = T[i4 + R + 6], A = T[i4 + R + 7], w *= B[R], 0 != (v | x | E | k | S | M | A) ? (v *= B[R + 1], x *= B[R + 2], E *= B[R + 3], k *= B[R + 4], S *= B[R + 5], M *= B[R + 6], A *= B[R + 7], d3 = (c3 = (c3 = l2 * w + 128 >> 8) + (d3 = l2 * k + 128 >> 8) + 1 >> 1) - d3, I = (p3 = x) * h2 + (m3 = M) * s2 + 128 >> 8, p3 = p3 * s2 - m3 * h2 + 128 >> 8, _ = (g3 = (g3 = f2 * (v - A) + 128 >> 8) + (_ = S << 4) + 1 >> 1) - _, b3 = (y = (y = f2 * (v + A) + 128 >> 8) + (b3 = E << 4) + 1 >> 1) - b3, m3 = (c3 = c3 + (m3 = I) + 1 >> 1) - m3, p3 = (d3 = d3 + p3 + 1 >> 1) - p3, I = g3 * o2 + y * a2 + 2048 >> 12, g3 = g3 * a2 - y * o2 + 2048 >> 12, y = I, I = b3 * n2 + _ * r4 + 2048 >> 12, b3 = b3 * r4 - _ * n2 + 2048 >> 12, _ = I, u3[R] = c3 + y, u3[R + 7] = c3 - y, u3[R + 1] = d3 + _, u3[R + 6] = d3 - _, u3[R + 2] = p3 + b3, u3[R + 5] = p3 - b3, u3[R + 3] = m3 + g3, u3[R + 4] = m3 - g3) : (I = l2 * w + 512 >> 10, u3[R] = I, u3[R + 1] = I, u3[R + 2] = I, u3[R + 3] = I, u3[R + 4] = I, u3[R + 5] = I, u3[R + 6] = I, u3[R + 7] = I);
                  for (var P = 0; P < 8; ++P)
                    w = u3[P], 0 != ((v = u3[P + 8]) | (x = u3[P + 16]) | (E = u3[P + 24]) | (k = u3[P + 32]) | (S = u3[P + 40]) | (M = u3[P + 48]) | (A = u3[P + 56])) ? (d3 = (c3 = 4112 + ((c3 = l2 * w + 2048 >> 12) + (d3 = l2 * k + 2048 >> 12) + 1 >> 1)) - d3, I = (p3 = x) * h2 + (m3 = M) * s2 + 2048 >> 12, p3 = p3 * s2 - m3 * h2 + 2048 >> 12, m3 = I, _ = (g3 = (g3 = f2 * (v - A) + 2048 >> 12) + (_ = S) + 1 >> 1) - _, b3 = (y = (y = f2 * (v + A) + 2048 >> 12) + (b3 = E) + 1 >> 1) - b3, I = g3 * o2 + y * a2 + 2048 >> 12, g3 = g3 * a2 - y * o2 + 2048 >> 12, y = I, I = b3 * n2 + _ * r4 + 2048 >> 12, b3 = b3 * r4 - _ * n2 + 2048 >> 12, (w = (c3 = c3 + m3 + 1 >> 1) + y) < 16 ? w = 0 : w >= 4080 ? w = 255 : w >>= 4, (v = (d3 = d3 + p3 + 1 >> 1) + (_ = I)) < 16 ? v = 0 : v >= 4080 ? v = 255 : v >>= 4, (x = (p3 = d3 - p3) + b3) < 16 ? x = 0 : x >= 4080 ? x = 255 : x >>= 4, (E = (m3 = c3 - m3) + g3) < 16 ? E = 0 : E >= 4080 ? E = 255 : E >>= 4, (k = m3 - g3) < 16 ? k = 0 : k >= 4080 ? k = 255 : k >>= 4, (S = p3 - b3) < 16 ? S = 0 : S >= 4080 ? S = 255 : S >>= 4, (M = d3 - _) < 16 ? M = 0 : M >= 4080 ? M = 255 : M >>= 4, (A = c3 - y) < 16 ? A = 0 : A >= 4080 ? A = 255 : A >>= 4, T[i4 + P] = w, T[i4 + P + 8] = v, T[i4 + P + 16] = x, T[i4 + P + 24] = E, T[i4 + P + 32] = k, T[i4 + P + 40] = S, T[i4 + P + 48] = M, T[i4 + P + 56] = A) : (I = (I = l2 * w + 8192 >> 14) < -2040 ? 0 : I >= 2024 ? 255 : I + 2056 >> 4, T[i4 + P] = I, T[i4 + P + 8] = I, T[i4 + P + 16] = I, T[i4 + P + 24] = I, T[i4 + P + 32] = I, T[i4 + P + 40] = I, T[i4 + P + 48] = I, T[i4 + P + 56] = I);
                }
                function g2(t4, e5) {
                  for (var r5 = e5.P, i4 = e5.c, n3 = new Int16Array(64), a3 = 0; a3 < i4; a3++)
                    for (var o3 = 0; o3 < r5; o3++)
                      m2(e5, d2(e5, a3, o3), n3);
                  return e5.D;
                }
                function b2(t4, e5, r5) {
                  null == r5 && (r5 = e5);
                  var n3 = t4.length - 1, a3 = r5 < e5 ? r5 : e5;
                  if (e5 >= n3)
                    return null;
                  var o3 = i3(t4, e5);
                  if (o3 >= 65472 && o3 <= 65534)
                    return { u: null, M: o3, offset: e5 };
                  for (var s3 = i3(t4, a3); !(s3 >= 65472 && s3 <= 65534); ) {
                    if (++a3 >= n3)
                      return null;
                    s3 = i3(t4, a3);
                  }
                  return { u: o3.toString(16), M: s3, offset: a3 };
                }
                return u2.prototype = { parse(r5, n3) {
                  null == n3 && (n3 = {});
                  var a3, o3, s3 = n3.F, h3 = 0, l3 = null, f3 = null, u3 = 0;
                  function d3() {
                    var t4 = i3(r5, h3), e5 = (h3 += 2) + t4 - 2, n4 = b2(r5, e5, h3);
                    n4 && n4.u && (e5 = n4.offset);
                    var a4 = r5.subarray(h3, e5);
                    return h3 += a4.length, a4;
                  }
                  function m3(t4) {
                    for (var e5 = Math.ceil(t4.o / 8 / t4.X), r6 = Math.ceil(t4.s / 8 / t4.B), i4 = 0; i4 < t4.W.length; i4++) {
                      G = t4.W[i4];
                      var n4 = Math.ceil(Math.ceil(t4.o / 8) * G.h / t4.X), a4 = Math.ceil(Math.ceil(t4.s / 8) * G.A / t4.B), o4 = e5 * G.h, s4 = r6 * G.A * 64 * (o4 + 1);
                      G.D = new Int16Array(s4), G.P = n4, G.c = a4;
                    }
                    t4.m = e5, t4.R = r6;
                  }
                  var _ = [], y = [], w = [], v = i3(r5, h3);
                  if (h3 += 2, 65496 !== v)
                    throw new e4("SOI not found");
                  v = i3(r5, h3), h3 += 2;
                  t:
                    for (; 65497 !== v; ) {
                      var x, E, k;
                      switch (v) {
                        case 65504:
                        case 65505:
                        case 65506:
                        case 65507:
                        case 65508:
                        case 65509:
                        case 65510:
                        case 65511:
                        case 65512:
                        case 65513:
                        case 65514:
                        case 65515:
                        case 65516:
                        case 65517:
                        case 65518:
                        case 65519:
                        case 65534:
                          var S = d3();
                          65504 === v && 74 === S[0] && 70 === S[1] && 73 === S[2] && 70 === S[3] && 0 === S[4] && (l3 = { version: { d: S[5], T: S[6] }, K: S[7], j: S[8] << 8 | S[9], H: S[10] << 8 | S[11], S: S[12], I: S[13], C: S.subarray(14, 14 + 3 * S[12] * S[13]) }), 65518 === v && 65 === S[0] && 100 === S[1] && 111 === S[2] && 98 === S[3] && 101 === S[4] && (f3 = { version: S[5] << 8 | S[6], k: S[7] << 8 | S[8], q: S[9] << 8 | S[10], a: S[11] });
                          break;
                        case 65499:
                          for (var M = i3(r5, h3) + (h3 += 2) - 2; h3 < M; ) {
                            var A = r5[h3++], I = new Uint16Array(64);
                            if (A >> 4 == 0)
                              for (E = 0; E < 64; E++)
                                I[t3[E]] = r5[h3++];
                            else {
                              if (A >> 4 != 1)
                                throw new e4("DQT - invalid table spec");
                              for (E = 0; E < 64; E++)
                                I[t3[E]] = i3(r5, h3), h3 += 2;
                            }
                            _[15 & A] = I;
                          }
                          break;
                        case 65472:
                        case 65473:
                        case 65474:
                          if (a3)
                            throw new e4("Only single frame JPEGs supported");
                          h3 += 2, (a3 = {}).G = 65473 === v, a3.Z = 65474 === v, a3.precision = r5[h3++];
                          var B, T = i3(r5, h3), R = 0, P = 0;
                          h3 += 2, a3.s = s3 || T, a3.o = i3(r5, h3), h3 += 2, a3.W = [], a3._ = {};
                          var O = r5[h3++];
                          for (x = 0; x < O; x++) {
                            B = r5[h3];
                            var L = r5[h3 + 1] >> 4, C = 15 & r5[h3 + 1];
                            R < L && (R = L), P < C && (P = C);
                            var U = r5[h3 + 2];
                            k = a3.W.push({ h: L, A: C, L: U, $: null }), a3._[B] = k - 1, h3 += 3;
                          }
                          a3.X = R, a3.B = P, m3(a3);
                          break;
                        case 65476:
                          var z = i3(r5, h3);
                          for (h3 += 2, x = 2; x < z; ) {
                            var D = r5[h3++], N = new Uint8Array(16), F = 0;
                            for (E = 0; E < 16; E++, h3++)
                              F += N[E] = r5[h3];
                            var j = new Uint8Array(F);
                            for (E = 0; E < F; E++, h3++)
                              j[E] = r5[h3];
                            x += 17 + F, (D >> 4 == 0 ? w : y)[15 & D] = c2(N, j);
                          }
                          break;
                        case 65501:
                          o3 = i3(r5, h3 += 2), h3 += 2;
                          break;
                        case 65498:
                          var G, H = 1 == ++u3 && !s3;
                          h3 += 2;
                          var W = r5[h3++], q = [];
                          for (x = 0; x < W; x++) {
                            var Z = r5[h3++], Y = a3._[Z];
                            (G = a3.W[Y]).index = Z;
                            var V = r5[h3++];
                            G.J = w[V >> 4], G.i = y[15 & V], q.push(G);
                          }
                          var X = r5[h3++], J = r5[h3++], Q = r5[h3++];
                          try {
                            var K = p2(r5, h3, a3, q, o3, X, J, Q >> 4, 15 & Q, H);
                            h3 += K;
                          } catch (t4) {
                            if (t4 instanceof DNLMarkerError)
                              return this.parse(r5, { F: t4.s });
                            if (t4 instanceof EOIMarkerError)
                              break t;
                            throw t4;
                          }
                          break;
                        case 65500:
                          h3 += 4;
                          break;
                        case 65535:
                          255 !== r5[h3] && h3--;
                          break;
                        default:
                          var $ = b2(r5, h3 - 2, h3 - 3);
                          if ($ && $.u) {
                            h3 = $.offset;
                            break;
                          }
                          if (h3 >= r5.length - 1)
                            break t;
                          throw new e4("JpegImage.parse - unknown marker: " + v.toString(16));
                      }
                      v = i3(r5, h3), h3 += 2;
                    }
                  for (this.width = a3.o, this.height = a3.s, this.g = l3, this.b = f3, this.W = [], x = 0; x < a3.W.length; x++) {
                    var tt = _[(G = a3.W[x]).L];
                    tt && (G.$ = tt), this.W.push({ index: G.index, e: g2(0, G), l: G.h / a3.X, t: G.A / a3.B, P: G.P, c: G.c });
                  }
                  this.p = this.W.length;
                }, Y(t4, e5, r5) {
                  null == r5 && (r5 = false);
                  var i4, n3, a3, o3, s3, h3, l3, f3, u3, c3, d3, p3, m3 = this.width / t4, g3 = this.height / e5, b3 = 0, _ = this.W.length, y = t4 * e5 * _, w = new Uint8ClampedArray(y), v = new Uint32Array(t4), x = 4294967288;
                  for (l3 = 0; l3 < _; l3++) {
                    if (n3 = (i4 = this.W[l3]).l * m3, a3 = i4.t * g3, b3 = l3, d3 = i4.e, o3 = i4.P + 1 << 3, n3 !== p3) {
                      for (s3 = 0; s3 < t4; s3++)
                        f3 = 0 | s3 * n3, v[s3] = (f3 & x) << 3 | 7 & f3;
                      p3 = n3;
                    }
                    for (h3 = 0; h3 < e5; h3++)
                      for (c3 = o3 * ((f3 = 0 | h3 * a3) & x) | (7 & f3) << 3, s3 = 0; s3 < t4; s3++)
                        w[b3] = d3[c3 + v[s3]], b3 += _;
                  }
                  var E = this.V;
                  if (r5 || 4 !== _ || E || (E = new Int32Array([-256, 255, -256, 255, -256, 255, -256, 255])), E)
                    for (l3 = 0; l3 < y; )
                      for (f3 = 0, u3 = 0; f3 < _; f3++, l3++, u3 += 2)
                        w[l3] = (w[l3] * E[u3] >> 8) + E[u3 + 1];
                  return w;
                }, get f() {
                  return this.b ? !!this.b.a : 3 === this.p ? 0 !== this.N && (82 !== this.W[0].index || 71 !== this.W[1].index || 66 !== this.W[2].index) : 1 === this.N;
                }, z: function(t4) {
                  for (var e5, r5, i4, n3 = 0, a3 = t4.length; n3 < a3; n3 += 3)
                    e5 = t4[n3], r5 = t4[n3 + 1], i4 = t4[n3 + 2], t4[n3] = e5 - 179.456 + 1.402 * i4, t4[n3 + 1] = e5 + 135.459 - 0.344 * r5 - 0.714 * i4, t4[n3 + 2] = e5 - 226.816 + 1.772 * r5;
                  return t4;
                }, O: function(t4) {
                  for (var e5, r5, i4, n3, a3 = 0, o3 = 0, s3 = t4.length; o3 < s3; o3 += 4)
                    e5 = t4[o3], r5 = t4[o3 + 1], i4 = t4[o3 + 2], n3 = t4[o3 + 3], t4[a3++] = r5 * (-660635669420364e-19 * r5 + 437130475926232e-18 * i4 - 54080610064599e-18 * e5 + 48449797120281e-17 * n3 - 0.154362151871126) - 122.67195406894 + i4 * (-957964378445773e-18 * i4 + 817076911346625e-18 * e5 - 0.00477271405408747 * n3 + 1.53380253221734) + e5 * (961250184130688e-18 * e5 - 0.00266257332283933 * n3 + 0.48357088451265) + n3 * (-336197177618394e-18 * n3 + 0.484791561490776), t4[a3++] = 107.268039397724 + r5 * (219927104525741e-19 * r5 - 640992018297945e-18 * i4 + 659397001245577e-18 * e5 + 426105652938837e-18 * n3 - 0.176491792462875) + i4 * (-778269941513683e-18 * i4 + 0.00130872261408275 * e5 + 770482631801132e-18 * n3 - 0.151051492775562) + e5 * (0.00126935368114843 * e5 - 0.00265090189010898 * n3 + 0.25802910206845) + n3 * (-318913117588328e-18 * n3 - 0.213742400323665), t4[a3++] = r5 * (-570115196973677e-18 * r5 - 263409051004589e-19 * i4 + 0.0020741088115012 * e5 - 0.00288260236853442 * n3 + 0.814272968359295) - 20.810012546947 + i4 * (-153496057440975e-19 * i4 - 132689043961446e-18 * e5 + 560833691242812e-18 * n3 - 0.195152027534049) + e5 * (0.00174418132927582 * e5 - 0.00255243321439347 * n3 + 0.116935020465145) + n3 * (-343531996510555e-18 * n3 + 0.24165260232407);
                  return t4.subarray(0, a3);
                }, r: function(t4) {
                  for (var e5, r5, i4, n3 = 0, a3 = t4.length; n3 < a3; n3 += 4)
                    e5 = t4[n3], r5 = t4[n3 + 1], i4 = t4[n3 + 2], t4[n3] = 434.456 - e5 - 1.402 * i4, t4[n3 + 1] = 119.541 - e5 + 0.344 * r5 + 0.714 * i4, t4[n3 + 2] = 481.816 - e5 - 1.772 * r5;
                  return t4;
                }, U: function(t4) {
                  for (var e5, r5, i4, n3, a3 = 0, o3 = 0, s3 = t4.length; o3 < s3; o3 += 4)
                    e5 = t4[o3], r5 = t4[o3 + 1], i4 = t4[o3 + 2], n3 = t4[o3 + 3], t4[a3++] = 255 + e5 * (-6747147073602441e-20 * e5 + 8379262121013727e-19 * r5 + 2894718188643294e-19 * i4 + 0.003264231057537806 * n3 - 1.1185611867203937) + r5 * (26374107616089405e-21 * r5 - 8626949158638572e-20 * i4 - 2748769067499491e-19 * n3 - 0.02155688794978967) + i4 * (-3878099212869363e-20 * i4 - 3267808279485286e-19 * n3 + 0.0686742238595345) - n3 * (3361971776183937e-19 * n3 + 0.7430659151342254), t4[a3++] = 255 + e5 * (13596372813588848e-20 * e5 + 924537132573585e-18 * r5 + 10567359618683593e-20 * i4 + 4791864687436512e-19 * n3 - 0.3109689587515875) + r5 * (-23545346108370344e-20 * r5 + 2702845253534714e-19 * i4 + 0.0020200308977307156 * n3 - 0.7488052167015494) + i4 * (6834815998235662e-20 * i4 + 15168452363460973e-20 * n3 - 0.09751927774728933) - n3 * (3189131175883281e-19 * n3 + 0.7364883807733168), t4[a3++] = 255 + e5 * (13598650411385307e-21 * e5 + 12423956175490851e-20 * r5 + 4751985097583589e-19 * i4 - 36729317476630422e-22 * n3 - 0.05562186980264034) + r5 * (16141380598724676e-20 * r5 + 9692239130725186e-19 * i4 + 7782692450036253e-19 * n3 - 0.44015232367526463) + i4 * (5068882914068769e-22 * i4 + 0.0017778369011375071 * n3 - 0.7591454649749609) - n3 * (3435319965105553e-19 * n3 + 0.7063770186160144);
                  return t4.subarray(0, a3);
                }, getData: function(t4) {
                  var r5 = t4.width, i4 = t4.height, n3 = t4.forceRGB, a3 = t4.isSourcePDF;
                  if (this.p > 4)
                    throw new e4("Unsupported color mode");
                  var o3 = this.Y(r5, i4, a3);
                  if (1 === this.p && n3) {
                    for (var s3 = o3.length, h3 = new Uint8ClampedArray(3 * s3), l3 = 0, f3 = 0; f3 < s3; f3++) {
                      var u3 = o3[f3];
                      h3[l3++] = u3, h3[l3++] = u3, h3[l3++] = u3;
                    }
                    return h3;
                  }
                  if (3 === this.p && this.f)
                    return this.z(o3);
                  if (4 === this.p) {
                    if (this.f)
                      return n3 ? this.O(o3) : this.r(o3);
                    if (n3)
                      return this.U(o3);
                  }
                  return o3;
                } }, u2;
              }();
              function i3(t3, e5) {
                return t3[e5] << 8 | t3[e5 + 1];
              }
              t2.JpegDecoder = r3;
            }(), t2.encodeImage = function(e4, r3, i3, n2) {
              var a2 = { t256: [r3], t257: [i3], t258: [8, 8, 8, 8], t259: [1], t262: [2], t273: [1e3], t277: [4], t278: [i3], t279: [r3 * i3 * 4], t282: [[72, 1]], t283: [[72, 1]], t284: [1], t286: [[0, 1]], t287: [[0, 1]], t296: [1], t305: ["Photopea (UTIF.js)"], t338: [1] };
              if (n2)
                for (var o2 in n2)
                  a2[o2] = n2[o2];
              var s2 = new Uint8Array(t2.encode([a2])), h2 = new Uint8Array(e4), l2 = new Uint8Array(1e3 + r3 * i3 * 4);
              for (o2 = 0; o2 < s2.length; o2++)
                l2[o2] = s2[o2];
              for (o2 = 0; o2 < h2.length; o2++)
                l2[1e3 + o2] = h2[o2];
              return l2.buffer;
            }, t2.encode = function(e4) {
              var r3 = new Uint8Array(2e4), i3 = 4, n2 = t2._binBE;
              r3[0] = r3[1] = 77, n2.writeUshort(r3, 2, 42);
              var a2 = 8;
              n2.writeUint(r3, i3, a2), i3 += 4;
              for (var o2 = 0; o2 < e4.length; o2++) {
                var s2 = t2._writeIFD(n2, t2._types.basic, r3, a2, e4[o2]);
                a2 = s2[1], o2 < e4.length - 1 && (0 != (3 & a2) && (a2 += 4 - (3 & a2)), n2.writeUint(r3, s2[0], a2));
              }
              return r3.slice(0, a2).buffer;
            }, t2.decode = function(e4, r3) {
              null == r3 && (r3 = { parseMN: true, debug: false });
              var i3 = new Uint8Array(e4), a2 = 0, o2 = t2._binBE.readASCII(i3, a2, 2);
              a2 += 2;
              var s2 = "II" == o2 ? t2._binLE : t2._binBE;
              s2.readUshort(i3, a2), a2 += 2;
              var h2 = s2.readUint(i3, a2);
              a2 += 4;
              for (var l2 = []; ; ) {
                var f2 = s2.readUshort(i3, h2), u2 = s2.readUshort(i3, h2 + 4);
                if (0 != f2 && (u2 < 1 || 13 < u2)) {
                  n("error in TIFF");
                  break;
                }
                if (t2._readIFD(s2, i3, h2, l2, 0, r3), 0 == (h2 = s2.readUint(i3, h2 + 2 + 12 * f2)))
                  break;
              }
              return l2;
            }, t2.decodeImage = function(e4, r3, i3) {
              if (!r3.data) {
                var a2 = new Uint8Array(e4), o2 = t2._binBE.readASCII(a2, 0, 2);
                if (null != r3.t256) {
                  r3.isLE = "II" == o2, r3.width = r3.t256[0], r3.height = r3.t257[0];
                  var s2, h2 = r3.t259 ? r3.t259[0] : 1, l2 = r3.t266 ? r3.t266[0] : 1;
                  r3.t284 && 2 == r3.t284[0] && n("PlanarConfiguration 2 should not be used!"), 7 == h2 && r3.t258 && r3.t258.length > 3 && (r3.t258 = r3.t258.slice(0, 3)), s2 = r3.t258 ? Math.min(32, r3.t258[0]) * r3.t258.length : r3.t277 ? r3.t277[0] : 1, 1 == h2 && null != r3.t279 && r3.t278 && 32803 == r3.t262[0] && (s2 = Math.round(8 * r3.t279[0] / (r3.width * r3.t278[0]))), r3.t50885 && 4 == r3.t50885[0] && (s2 = 3 * r3.t258[0]);
                  var f2 = 8 * Math.ceil(r3.width * s2 / 8), u2 = r3.t273;
                  (null == u2 || r3.t322) && (u2 = r3.t324);
                  var c2 = r3.t279;
                  1 == h2 && 1 == u2.length && (c2 = [r3.height * (f2 >>> 3)]), (null == c2 || r3.t322) && (c2 = r3.t325);
                  var d2 = new Uint8Array(r3.height * (f2 >>> 3)), p2 = 0;
                  if (null != r3.t322) {
                    var m2 = r3.t322[0], g2 = r3.t323[0], b2 = Math.floor((r3.width + m2 - 1) / m2), _ = Math.floor((r3.height + g2 - 1) / g2), y = new Uint8Array(0 | Math.ceil(m2 * g2 * s2 / 8));
                    console.log("====", b2, _);
                    for (var w = 0; w < _; w++)
                      for (var v = 0; v < b2; v++) {
                        var x = w * b2 + v;
                        y.fill(0), t2.decode._decompress(r3, i3, a2, u2[x], c2[x], h2, y, 0, l2), 6 == h2 ? d2 = y : t2._copyTile(y, 0 | Math.ceil(m2 * s2 / 8), g2, d2, 0 | Math.ceil(r3.width * s2 / 8), r3.height, 0 | Math.ceil(v * m2 * s2 / 8), w * g2);
                      }
                    p2 = 8 * d2.length;
                  } else {
                    var E = r3.t278 ? r3.t278[0] : r3.height;
                    for (E = Math.min(E, r3.height), console.log("====", r3.width, E), x = 0; x < u2.length; x++)
                      t2.decode._decompress(r3, i3, a2, u2[x], c2[x], h2, d2, 0 | Math.ceil(p2 / 8), l2), p2 += f2 * E;
                    p2 = Math.min(p2, 8 * d2.length);
                  }
                  r3.data = new Uint8Array(d2.buffer, 0, 0 | Math.ceil(p2 / 8));
                }
              }
            }, t2.decode._decompress = function(r3, i3, a2, o2, s2, h2, l2, f2, u2) {
              if (1 == h2)
                for (var c2 = 0; c2 < s2; c2++)
                  l2[f2 + c2] = a2[o2 + c2];
              else if (2 == h2)
                t2.decode._decodeG2(a2, o2, s2, l2, f2, r3.width, u2);
              else if (3 == h2)
                t2.decode._decodeG3(a2, o2, s2, l2, f2, r3.width, u2, !!r3.t292 && 1 == (1 & r3.t292[0]));
              else if (4 == h2)
                t2.decode._decodeG4(a2, o2, s2, l2, f2, r3.width, u2);
              else if (5 == h2)
                t2.decode._decodeLZW(a2, o2, s2, l2, f2, 8);
              else if (6 == h2)
                t2.decode._decodeOldJPEG(r3, a2, o2, s2, l2, f2);
              else if (7 == h2 || 34892 == h2)
                t2.decode._decodeNewJPEG(r3, a2, o2, s2, l2, f2);
              else if (8 == h2 || 32946 == h2)
                for (var d2 = new Uint8Array(a2.buffer, o2, s2), p2 = e3.inflate(d2), m2 = 0; m2 < p2.length; m2++)
                  l2[f2 + m2] = p2[m2];
              else
                9 == h2 ? t2.decode._decodeVC5(a2, o2, s2, l2, f2) : 32767 == h2 ? t2.decode._decodeARW(r3, a2, o2, s2, l2, f2) : 32773 == h2 ? t2.decode._decodePackBits(a2, o2, s2, l2, f2) : 32809 == h2 ? t2.decode._decodeThunder(a2, o2, s2, l2, f2) : 34713 == h2 ? t2.decode._decodeNikon(r3, i3, a2, o2, s2, l2, f2) : 34676 == h2 ? t2.decode._decodeLogLuv32(r3, a2, o2, s2, l2, f2) : n("Unknown compression", h2);
              var g2 = r3.t258 ? Math.min(32, r3.t258[0]) : 1, b2 = r3.t277 ? r3.t277[0] : 1, _ = g2 * b2 >>> 3, y = r3.t278 ? r3.t278[0] : r3.height, w = Math.ceil(g2 * b2 * r3.width / 8);
              if (16 == g2 && !r3.isLE && null == r3.t33422)
                for (var v = 0; v < y; v++)
                  for (var x = f2 + v * w, E = 1; E < w; E += 2) {
                    var k = l2[x + E];
                    l2[x + E] = l2[x + E - 1], l2[x + E - 1] = k;
                  }
              if (r3.t317 && 2 == r3.t317[0])
                for (v = 0; v < y; v++) {
                  var S = f2 + v * w;
                  if (16 == g2)
                    for (c2 = _; c2 < w; c2 += 2) {
                      var M = (l2[S + c2 + 1] << 8 | l2[S + c2]) + (l2[S + c2 - _ + 1] << 8 | l2[S + c2 - _]);
                      l2[S + c2] = 255 & M, l2[S + c2 + 1] = M >>> 8 & 255;
                    }
                  else if (3 == b2)
                    for (c2 = 3; c2 < w; c2 += 3)
                      l2[S + c2] = l2[S + c2] + l2[S + c2 - 3] & 255, l2[S + c2 + 1] = l2[S + c2 + 1] + l2[S + c2 - 2] & 255, l2[S + c2 + 2] = l2[S + c2 + 2] + l2[S + c2 - 1] & 255;
                  else
                    for (c2 = _; c2 < w; c2++)
                      l2[S + c2] = l2[S + c2] + l2[S + c2 - _] & 255;
                }
            }, t2.decode._decodeVC5 = t2.decode._decodeVC5 = /* @__PURE__ */ function() {
              var e4, r3, i3, n2 = [1, 0, 1, 0, 2, 2, 1, 1, 3, 7, 1, 2, 5, 25, 1, 3, 6, 48, 1, 4, 6, 54, 1, 5, 7, 111, 1, 8, 7, 99, 1, 6, 7, 105, 12, 0, 7, 107, 1, 7, 8, 209, 20, 0, 8, 212, 1, 9, 8, 220, 1, 10, 9, 393, 1, 11, 9, 394, 32, 0, 9, 416, 1, 12, 9, 427, 1, 13, 10, 887, 1, 18, 10, 784, 1, 14, 10, 790, 1, 15, 10, 835, 60, 0, 10, 852, 1, 16, 10, 885, 1, 17, 11, 1571, 1, 19, 11, 1668, 1, 20, 11, 1669, 100, 0, 11, 1707, 1, 21, 11, 1772, 1, 22, 12, 3547, 1, 29, 12, 3164, 1, 24, 12, 3166, 1, 25, 12, 3140, 1, 23, 12, 3413, 1, 26, 12, 3537, 1, 27, 12, 3539, 1, 28, 13, 7093, 1, 35, 13, 6283, 1, 30, 13, 6331, 1, 31, 13, 6335, 180, 0, 13, 6824, 1, 32, 13, 7072, 1, 33, 13, 7077, 320, 0, 13, 7076, 1, 34, 14, 12565, 1, 36, 14, 12661, 1, 37, 14, 12669, 1, 38, 14, 13651, 1, 39, 14, 14184, 1, 40, 15, 28295, 1, 46, 15, 28371, 1, 47, 15, 25320, 1, 42, 15, 25336, 1, 43, 15, 25128, 1, 41, 15, 27300, 1, 44, 15, 28293, 1, 45, 16, 50259, 1, 48, 16, 50643, 1, 49, 16, 50675, 1, 50, 16, 56740, 1, 53, 16, 56584, 1, 51, 16, 56588, 1, 52, 17, 113483, 1, 61, 17, 113482, 1, 60, 17, 101285, 1, 55, 17, 101349, 1, 56, 17, 109205, 1, 57, 17, 109207, 1, 58, 17, 100516, 1, 54, 17, 113171, 1, 59, 18, 202568, 1, 62, 18, 202696, 1, 63, 18, 218408, 1, 64, 18, 218412, 1, 65, 18, 226340, 1, 66, 18, 226356, 1, 67, 18, 226358, 1, 68, 19, 402068, 1, 69, 19, 405138, 1, 70, 19, 405394, 1, 71, 19, 436818, 1, 72, 19, 436826, 1, 73, 19, 452714, 1, 75, 19, 452718, 1, 76, 19, 452682, 1, 74, 20, 804138, 1, 77, 20, 810279, 1, 78, 20, 810790, 1, 79, 20, 873638, 1, 80, 20, 873654, 1, 81, 20, 905366, 1, 82, 20, 905430, 1, 83, 20, 905438, 1, 84, 21, 1608278, 1, 85, 21, 1620557, 1, 86, 21, 1621582, 1, 87, 21, 1621583, 1, 88, 21, 1747310, 1, 89, 21, 1810734, 1, 90, 21, 1810735, 1, 91, 21, 1810863, 1, 92, 21, 1810879, 1, 93, 22, 3621725, 1, 99, 22, 3621757, 1, 100, 22, 3241112, 1, 94, 22, 3494556, 1, 95, 22, 3494557, 1, 96, 22, 3494622, 1, 97, 22, 3494623, 1, 98, 23, 6482227, 1, 102, 23, 6433117, 1, 101, 23, 6989117, 1, 103, 23, 6989119, 1, 105, 23, 6989118, 1, 104, 23, 7243449, 1, 106, 23, 7243512, 1, 107, 24, 13978233, 1, 111, 24, 12964453, 1, 109, 24, 12866232, 1, 108, 24, 14486897, 1, 113, 24, 13978232, 1, 110, 24, 14486896, 1, 112, 24, 14487026, 1, 114, 24, 14487027, 1, 115, 25, 25732598, 1, 225, 25, 25732597, 1, 189, 25, 25732596, 1, 188, 25, 25732595, 1, 203, 25, 25732594, 1, 202, 25, 25732593, 1, 197, 25, 25732592, 1, 207, 25, 25732591, 1, 169, 25, 25732590, 1, 223, 25, 25732589, 1, 159, 25, 25732522, 1, 235, 25, 25732579, 1, 152, 25, 25732575, 1, 192, 25, 25732489, 1, 179, 25, 25732573, 1, 201, 25, 25732472, 1, 172, 25, 25732576, 1, 149, 25, 25732488, 1, 178, 25, 25732566, 1, 120, 25, 25732571, 1, 219, 25, 25732577, 1, 150, 25, 25732487, 1, 127, 25, 25732506, 1, 211, 25, 25732548, 1, 125, 25, 25732588, 1, 158, 25, 25732486, 1, 247, 25, 25732467, 1, 238, 25, 25732508, 1, 163, 25, 25732552, 1, 228, 25, 25732603, 1, 183, 25, 25732513, 1, 217, 25, 25732587, 1, 168, 25, 25732520, 1, 122, 25, 25732484, 1, 128, 25, 25732562, 1, 249, 25, 25732505, 1, 187, 25, 25732504, 1, 186, 25, 25732483, 1, 136, 25, 25928905, 1, 181, 25, 25732560, 1, 255, 25, 25732500, 1, 230, 25, 25732482, 1, 135, 25, 25732555, 1, 233, 25, 25732568, 1, 222, 25, 25732583, 1, 145, 25, 25732481, 1, 134, 25, 25732586, 1, 167, 25, 25732521, 1, 248, 25, 25732518, 1, 209, 25, 25732480, 1, 243, 25, 25732512, 1, 216, 25, 25732509, 1, 164, 25, 25732547, 1, 140, 25, 25732479, 1, 157, 25, 25732544, 1, 239, 25, 25732574, 1, 191, 25, 25732564, 1, 251, 25, 25732478, 1, 156, 25, 25732546, 1, 139, 25, 25732498, 1, 242, 25, 25732557, 1, 133, 25, 25732477, 1, 162, 25, 25732515, 1, 213, 25, 25732584, 1, 165, 25, 25732514, 1, 212, 25, 25732476, 1, 227, 25, 25732494, 1, 198, 25, 25732531, 1, 236, 25, 25732530, 1, 234, 25, 25732529, 1, 117, 25, 25732528, 1, 215, 25, 25732527, 1, 124, 25, 25732526, 1, 123, 25, 25732525, 1, 254, 25, 25732524, 1, 253, 25, 25732523, 1, 148, 25, 25732570, 1, 218, 25, 25732580, 1, 146, 25, 25732581, 1, 147, 25, 25732569, 1, 224, 25, 25732533, 1, 143, 25, 25732540, 1, 184, 25, 25732541, 1, 185, 25, 25732585, 1, 166, 25, 25732556, 1, 132, 25, 25732485, 1, 129, 25, 25732563, 1, 250, 25, 25732578, 1, 151, 25, 25732501, 1, 119, 25, 25732502, 1, 193, 25, 25732536, 1, 176, 25, 25732496, 1, 245, 25, 25732553, 1, 229, 25, 25732516, 1, 206, 25, 25732582, 1, 144, 25, 25732517, 1, 208, 25, 25732558, 1, 137, 25, 25732543, 1, 241, 25, 25732466, 1, 237, 25, 25732507, 1, 190, 25, 25732542, 1, 240, 25, 25732551, 1, 131, 25, 25732554, 1, 232, 25, 25732565, 1, 252, 25, 25732475, 1, 171, 25, 25732493, 1, 205, 25, 25732492, 1, 204, 25, 25732491, 1, 118, 25, 25732490, 1, 214, 25, 25928904, 1, 180, 25, 25732549, 1, 126, 25, 25732602, 1, 182, 25, 25732539, 1, 175, 25, 25732545, 1, 141, 25, 25732559, 1, 138, 25, 25732537, 1, 177, 25, 25732534, 1, 153, 25, 25732503, 1, 194, 25, 25732606, 1, 160, 25, 25732567, 1, 121, 25, 25732538, 1, 174, 25, 25732497, 1, 246, 25, 25732550, 1, 130, 25, 25732572, 1, 200, 25, 25732474, 1, 170, 25, 25732511, 1, 221, 25, 25732601, 1, 196, 25, 25732532, 1, 142, 25, 25732519, 1, 210, 25, 25732495, 1, 199, 25, 25732605, 1, 155, 25, 25732535, 1, 154, 25, 25732499, 1, 244, 25, 25732510, 1, 220, 25, 25732600, 1, 195, 25, 25732607, 1, 161, 25, 25732604, 1, 231, 25, 25732473, 1, 173, 25, 25732599, 1, 226, 26, 51465122, 1, 116, 26, 51465123, 0, 1], a2 = [3, 3, 3, 3, 2, 2, 2, 1, 1, 1];
              function o2(t3) {
                var e5 = t3[1], r4 = t3[0][e5 >>> 3] >>> 7 - (7 & e5) & 1;
                return t3[1]++, r4;
              }
              function s2(t3, r4) {
                if (null == e4) {
                  e4 = {};
                  for (var i4 = 0; i4 < n2.length; i4 += 4)
                    e4[n2[i4 + 1]] = n2.slice(i4, i4 + 4);
                }
                for (var a3 = o2(t3), s3 = e4[a3]; null == s3; )
                  a3 = a3 << 1 | o2(t3), s3 = e4[a3];
                var h3 = s3[3];
                0 != h3 && (h3 = 0 == o2(t3) ? h3 : -h3), r4[0] = s3[2], r4[1] = h3;
              }
              function h2(t3, e5) {
                for (var r4 = 0; r4 < e5; r4++)
                  1 == (1 & t3) && t3++, t3 >>>= 1;
                return t3;
              }
              function l2(t3, e5) {
                return t3 >> e5;
              }
              function f2(t3, e5, r4, i4, n3, a3) {
                e5[r4] = l2(l2(11 * t3[n3] - 4 * t3[n3 + a3] + t3[n3 + a3 + a3] + 4, 3) + t3[i4], 1), e5[r4 + a3] = l2(l2(5 * t3[n3] + 4 * t3[n3 + a3] - t3[n3 + a3 + a3] + 4, 3) - t3[i4], 1);
              }
              function u2(t3, e5, r4, i4, n3, a3) {
                var o3 = t3[n3 - a3] - t3[n3 + a3], s3 = t3[n3], h3 = t3[i4];
                e5[r4] = l2(l2(o3 + 4, 3) + s3 + h3, 1), e5[r4 + a3] = l2(l2(4 - o3, 3) + s3 - h3, 1);
              }
              function c2(t3, e5, r4, i4, n3, a3) {
                e5[r4] = l2(l2(5 * t3[n3] + 4 * t3[n3 - a3] - t3[n3 - a3 - a3] + 4, 3) + t3[i4], 1), e5[r4 + a3] = l2(l2(11 * t3[n3] - 4 * t3[n3 - a3] + t3[n3 - a3 - a3] + 4, 3) - t3[i4], 1);
              }
              function d2(t3) {
                return i3[t3 = t3 < 0 ? 0 : t3 > 4095 ? 4095 : t3] >>> 2;
              }
              return function(e5, n3, o3, l3, p2) {
                l3 = new Uint16Array(l3.buffer);
                var m2, g2, b2, _, y, w, v, x, E = Date.now(), k = t2._binBE, S = n3 + o3;
                for (n3 += 4; n3 < S; ) {
                  var M = k.readShort(e5, n3), A = k.readUshort(e5, n3 + 2);
                  if (n3 += 4, 12 == M)
                    L = A;
                  else if (20 == M)
                    m2 = A;
                  else if (21 == M)
                    g2 = A;
                  else if (48 == M)
                    b2 = A;
                  else if (53 == M)
                    _ = A;
                  else if (35 == M)
                    ;
                  else if (62 == M)
                    y = A;
                  else if (101 == M)
                    ;
                  else if (109 == M)
                    w = A;
                  else if (84 == M)
                    ;
                  else if (106 == M)
                    ;
                  else if (107 == M)
                    ;
                  else if (108 == M)
                    ;
                  else if (102 == M)
                    ;
                  else if (104 == M)
                    tt = A;
                  else if (105 == M)
                    ;
                  else {
                    var I = M < 0 ? -M : M, B = 65280 & I, T = 0;
                    if (24576 & I && (8192 & I ? (T = 65535 & A, T += (255 & I) << 16) : T = 65535 & A), 24576 == (24576 & I)) {
                      if (null == v) {
                        v = [];
                        for (var R = 0; R < 4; R++)
                          v[R] = new Int16Array((m2 >>> 1) * (g2 >>> 1));
                        for (x = new Int16Array((m2 >>> 1) * (g2 >>> 1)), r3 = new Int16Array(1024), R = 0; R < 1024; R++) {
                          var P = R - 512, O = Math.abs(P), L = Math.floor(768 * O * O * O / 16581375) + O;
                          r3[R] = Math.sign(P) * L;
                        }
                        for (i3 = new Uint16Array(4096), R = 0; R < 4096; R++) {
                          var C = R, U = 65535 * (Math.pow(113, C / 4095) - 1) / 112;
                          i3[R] = Math.min(U, 65535);
                        }
                      }
                      var z = v[y], D = h2(m2, 1 + a2[b2]), N = h2(g2, 1 + a2[b2]);
                      if (0 == b2)
                        for (var F = 0; F < N; F++)
                          for (var j = 0; j < D; j++) {
                            var G = n3 + 2 * (F * D + j);
                            z[F * (m2 >>> 1) + j] = e5[G] << 8 | e5[G + 1];
                          }
                      else {
                        var H = [e5, 8 * n3], W = [], q = 0, Z = D * N, Y = [0, 0], V = 0;
                        for (A = 0; q < Z; )
                          for (s2(H, Y), V = Y[0], A = Y[1]; V > 0; )
                            W[q++] = A, V--;
                        var X = (b2 - 1) % 3, J = 1 != X ? D : 0, Q = 0 != X ? N : 0;
                        for (F = 0; F < N; F++) {
                          var K = (F + Q) * (m2 >>> 1) + J, $ = F * D;
                          for (j = 0; j < D; j++)
                            z[K + j] = r3[W[$ + j] + 512] * _;
                        }
                        if (2 == X) {
                          var tt = m2 >>> 1, et = 2 * D, rt = 2 * N;
                          for (F = 0; F < N; F++)
                            for (j = 0; j < et; j++) {
                              R = 2 * F * tt + j;
                              var it = N * tt + (at = F * tt + j);
                              0 == F ? f2(z, x, R, it, at, tt) : F == N - 1 ? c2(z, x, R, it, at, tt) : u2(z, x, R, it, at, tt);
                            }
                          var nt = z;
                          for (z = x, x = nt, F = 0; F < rt; F++)
                            for (j = 0; j < D; j++) {
                              var at;
                              R = F * tt + 2 * j, it = D + (at = F * tt + j), 0 == j ? f2(z, x, R, it, at, 1) : j == D - 1 ? c2(z, x, R, it, at, 1) : u2(z, x, R, it, at, 1);
                            }
                          nt = z, z = x, x = nt;
                          for (var ot = [], st = 2 - ~~((b2 - 1) / 3), ht = 0; ht < 3; ht++)
                            ot[ht] = w >> 14 - 2 * ht & 3;
                          var lt = ot[st];
                          if (0 != lt)
                            for (F = 0; F < rt; F++)
                              for (j = 0; j < et; j++)
                                z[R = F * tt + j] = z[R] << lt;
                        }
                      }
                      if (9 == b2 && 3 == y) {
                        var ft = v[0], ut = v[1], ct = v[2], dt = v[3];
                        for (F = 0; F < g2; F += 2)
                          for (j = 0; j < m2; j += 2) {
                            var pt = F * m2 + j, mt = ft[G = (F >>> 1) * (m2 >>> 1) + (j >>> 1)], gt = ut[G] - 2048, bt = ct[G] - 2048, _t = dt[G] - 2048, yt = (gt << 1) + mt, wt = (bt << 1) + mt, vt = mt + _t, xt = mt - _t;
                            l3[pt] = d2(yt), l3[pt + 1] = d2(vt), l3[pt + m2] = d2(xt), l3[pt + m2 + 1] = d2(wt);
                          }
                      }
                      n3 += 4 * T;
                    } else if (16388 == I)
                      n3 += 4 * T;
                    else if (8192 != B && 8448 != B && 9216 != B)
                      throw I.toString(16);
                  }
                }
                console.log(Date.now() - E);
              };
            }(), t2.decode._decodeLogLuv32 = function(t3, e4, r3, i3, n2, a2) {
              for (var o2 = t3.width, s2 = 4 * o2, h2 = 0, l2 = new Uint8Array(s2); h2 < i3; ) {
                for (var f2 = 0; f2 < s2; ) {
                  var u2 = e4[r3 + h2];
                  if (h2++, u2 < 128) {
                    for (var c2 = 0; c2 < u2; c2++)
                      l2[f2 + c2] = e4[r3 + h2 + c2];
                    f2 += u2, h2 += u2;
                  } else {
                    for (u2 -= 126, c2 = 0; c2 < u2; c2++)
                      l2[f2 + c2] = e4[r3 + h2];
                    f2 += u2, h2++;
                  }
                }
                for (var d2 = 0; d2 < o2; d2++)
                  n2[a2 + 0] = l2[d2], n2[a2 + 1] = l2[d2 + o2], n2[a2 + 2] = l2[d2 + 2 * o2], n2[a2 + 4] = l2[d2 + 3 * o2], a2 += 6;
              }
            }, t2.decode._ljpeg_diff = function(e4, r3, i3) {
              var n2, a2, o2 = t2.decode._getbithuff;
              return n2 = o2(e4, r3, i3[0], i3), 0 == ((a2 = o2(e4, r3, n2, 0)) & 1 << n2 - 1) && (a2 -= (1 << n2) - 1), a2;
            }, t2.decode._decodeARW = function(e4, r3, i3, n2, a2, o2) {
              var s2 = e4.t256[0], h2 = e4.t257[0], l2 = e4.t258[0], f2 = e4.isLE ? t2._binLE : t2._binBE;
              if (s2 * h2 == n2 || s2 * h2 * 1.5 == n2)
                if (s2 * h2 * 1.5 != n2) {
                  var u2, c2, d2, p2, m2, g2, b2, _, y = new Uint16Array(16), w = new Uint8Array(s2 + 1);
                  for (I = 0; I < h2; I++) {
                    for (var v = 0; v < s2; v++)
                      w[v] = r3[i3++];
                    for (_ = 0, A = 0; A < s2 - 30; _ += 16) {
                      for (c2 = 2047 & (u2 = f2.readUint(w, _)), d2 = 2047 & u2 >>> 11, p2 = 15 & u2 >>> 22, m2 = 15 & u2 >>> 26, g2 = 0; g2 < 4 && 128 << g2 <= c2 - d2; g2++)
                        ;
                      for (b2 = 30, x = 0; x < 16; x++)
                        x == p2 ? y[x] = c2 : x == m2 ? y[x] = d2 : (y[x] = ((f2.readUshort(w, _ + (b2 >> 3)) >>> (7 & b2) & 127) << g2) + d2, y[x] > 2047 && (y[x] = 2047), b2 += 7);
                      for (x = 0; x < 16; x++, A += 2)
                        U = y[x] << 1, t2.decode._putsF(a2, (I * s2 + A) * l2, U << 16 - l2);
                      A -= 1 & A ? 1 : 31;
                    }
                  }
                } else
                  for (var x = 0; x < n2; x += 3) {
                    var E = r3[i3 + x + 0], k = r3[i3 + x + 1], S = r3[i3 + x + 2];
                    a2[o2 + x] = k << 4 | E >>> 4, a2[o2 + x + 1] = E << 4 | S >>> 4, a2[o2 + x + 2] = S << 4 | k >>> 4;
                  }
              else {
                h2 += 8;
                var M, A, I, B = [i3, 0, 0, 0], T = new Uint16Array(32770), R = [3857, 3856, 3599, 3342, 3085, 2828, 2571, 2314, 2057, 1800, 1543, 1286, 1029, 772, 771, 768, 514, 513], P = 0, O = t2.decode._ljpeg_diff;
                for (T[0] = 15, M = x = 0; x < 18; x++)
                  for (var L = 32768 >>> (R[x] >>> 8), C = 0; C < L; C++)
                    T[++M] = R[x];
                for (A = s2; A--; )
                  for (I = 0; I < h2 + 1; I += 2)
                    if (I == h2 && (I = 1), P += O(r3, B, T), I < h2) {
                      var U = 4095 & P;
                      t2.decode._putsF(a2, (I * s2 + A) * l2, U << 16 - l2);
                    }
              }
            }, t2.decode._decodeNikon = function(e4, r3, i3, n2, a2, o2, s2) {
              var h2 = [[0, 0, 1, 5, 1, 1, 1, 1, 1, 1, 2, 0, 0, 0, 0, 0, 0, 5, 4, 3, 6, 2, 7, 1, 0, 8, 9, 11, 10, 12], [0, 0, 1, 5, 1, 1, 1, 1, 1, 1, 2, 0, 0, 0, 0, 0, 0, 57, 90, 56, 39, 22, 5, 4, 3, 2, 1, 0, 11, 12, 12], [0, 0, 1, 4, 2, 3, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 5, 4, 6, 3, 7, 2, 8, 1, 9, 0, 10, 11, 12], [0, 0, 1, 4, 3, 1, 1, 1, 1, 1, 2, 0, 0, 0, 0, 0, 0, 5, 6, 4, 7, 8, 3, 9, 2, 1, 0, 10, 11, 12, 13, 14], [0, 0, 1, 5, 1, 1, 1, 1, 1, 1, 1, 2, 0, 0, 0, 0, 0, 8, 92, 75, 58, 41, 7, 6, 5, 4, 3, 2, 1, 0, 13, 14], [0, 0, 1, 4, 2, 2, 3, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 7, 6, 8, 5, 9, 4, 10, 3, 11, 12, 2, 0, 1, 13, 14]], l2 = e4.t256[0], f2 = e4.t257[0], u2 = e4.t258[0], c2 = 0, d2 = 0, p2 = t2.decode._make_decoder, m2 = t2.decode._getbithuff, g2 = r3[0].exifIFD.makerNote, b2 = g2.t150 ? g2.t150 : g2.t140, _ = 0, y = b2[_++], w = b2[_++];
              73 != y && 88 != w || (_ += 2110), 70 == y && (c2 = 2), 14 == u2 && (c2 += 3);
              for (var v = [[0, 0], [0, 0]], x = e4.isLE ? t2._binLE : t2._binBE, E = 0; E < 2; E++)
                for (var k = 0; k < 2; k++)
                  v[E][k] = x.readShort(b2, _), _ += 2;
              var S, M, A, I, B, T = 1 << u2 & 32767, R = 0, P = x.readShort(b2, _);
              _ += 2, P > 1 && (R = Math.floor(T / (P - 1))), 68 == y && 32 == w && R > 0 && (d2 = x.readShort(b2, 562));
              var O = [0, 0], L = p2(h2[c2]), C = [n2, 0, 0, 0];
              for (S = 0; S < f2; S++)
                for (d2 && S == d2 && (L = p2(h2[c2 + 1])), M = 0; M < l2; M++) {
                  E = m2(i3, C, L[0], L), 0 == ((B = 1 + (m2(i3, C, (A = 15 & E) - (I = E >>> 4), 0) << 1) << I >>> 1) & 1 << A - 1) && (B -= (1 << A) - (0 == I ? 1 : 0)), M < 2 ? O[M] = v[1 & S][M] += B : O[1 & M] += B;
                  var U = Math.min(Math.max(O[1 & M], 0), (1 << u2) - 1), z = (S * l2 + M) * u2;
                  t2.decode._putsF(o2, z, U << 16 - u2);
                }
            }, t2.decode._putsF = function(t3, e4, r3) {
              r3 <<= 8 - (7 & e4);
              var i3 = e4 >>> 3;
              t3[i3] |= r3 >>> 16, t3[i3 + 1] |= r3 >>> 8, t3[i3 + 2] |= r3;
            }, t2.decode._getbithuff = function(e4, r3, i3, n2) {
              t2.decode._get_byte;
              var a2, o2 = r3[0], s2 = r3[1], h2 = r3[2], l2 = r3[3];
              if (0 == i3 || h2 < 0)
                return 0;
              for (; !l2 && h2 < i3 && -1 != (a2 = e4[o2++]) && !(l2 = 0); )
                s2 = (s2 << 8) + a2, h2 += 8;
              if (a2 = s2 << 32 - h2 >>> 32 - i3, n2 ? (h2 -= n2[a2 + 1] >>> 8, a2 = 255 & n2[a2 + 1]) : h2 -= i3, h2 < 0)
                throw "e";
              return r3[0] = o2, r3[1] = s2, r3[2] = h2, r3[3] = l2, a2;
            }, t2.decode._make_decoder = function(t3) {
              var e4, r3, i3, n2, a2, o2 = [];
              for (e4 = 16; 0 != e4 && !t3[e4]; e4--)
                ;
              var s2 = 17;
              for (o2[0] = e4, i3 = r3 = 1; r3 <= e4; r3++)
                for (n2 = 0; n2 < t3[r3]; n2++, ++s2)
                  for (a2 = 0; a2 < 1 << e4 - r3; a2++)
                    i3 <= 1 << e4 && (o2[i3++] = r3 << 8 | t3[s2]);
              return o2;
            }, t2.decode._decodeNewJPEG = function(e4, r3, i3, n2, a2, o2) {
              n2 = Math.min(n2, r3.length - i3);
              var s2 = e4.t347, h2 = s2 ? s2.length : 0, l2 = new Uint8Array(h2 + n2);
              if (s2) {
                for (var f2 = 0, u2 = 0; u2 < h2 - 1 && (255 != s2[u2] || 217 != s2[u2 + 1]); u2++)
                  l2[f2++] = s2[u2];
                var c2 = r3[i3], d2 = r3[i3 + 1];
                for (255 == c2 && 216 == d2 || (l2[f2++] = c2, l2[f2++] = d2), u2 = 2; u2 < n2; u2++)
                  l2[f2++] = r3[i3 + u2];
              } else
                for (u2 = 0; u2 < n2; u2++)
                  l2[u2] = r3[i3 + u2];
              if (32803 == e4.t262[0] || 7 == e4.t259[0] && 34892 == e4.t262[0]) {
                var p2 = e4.t258[0], m2 = t2.LosslessJpegDecode(l2), g2 = m2.length;
                if (16 == p2)
                  if (e4.isLE)
                    for (u2 = 0; u2 < g2; u2++)
                      a2[o2 + (u2 << 1)] = 255 & m2[u2], a2[o2 + (u2 << 1) + 1] = m2[u2] >>> 8;
                  else
                    for (u2 = 0; u2 < g2; u2++)
                      a2[o2 + (u2 << 1)] = m2[u2] >>> 8, a2[o2 + (u2 << 1) + 1] = 255 & m2[u2];
                else if (14 == p2 || 12 == p2) {
                  var b2 = 16 - p2;
                  for (u2 = 0; u2 < g2; u2++)
                    t2.decode._putsF(a2, u2 * p2, m2[u2] << b2);
                } else {
                  if (8 != p2)
                    throw new Error("unsupported bit depth " + p2);
                  for (u2 = 0; u2 < g2; u2++)
                    a2[o2 + u2] = m2[u2];
                }
              } else {
                var _ = new t2.JpegDecoder();
                _.parse(l2);
                var y = _.getData({ width: _.width, height: _.height, forceRGB: true, isSourcePDF: false });
                for (u2 = 0; u2 < y.length; u2++)
                  a2[o2 + u2] = y[u2];
              }
              6 == e4.t262[0] && (e4.t262[0] = 2);
            }, t2.decode._decodeOldJPEGInit = function(t3, e4, r3, i3) {
              var a2, o2, s2, h2, l2, f2 = 216, u2 = 0, c2 = 0, d2 = false, p2 = t3.t513, m2 = p2 ? p2[0] : 0, g2 = t3.t514, b2 = g2 ? g2[0] : 0, _ = t3.t324 || t3.t273 || p2, y = t3.t530, w = 0, v = 0, x = t3.t277 ? t3.t277[0] : 1, E = t3.t515;
              if (_ && (c2 = _[0], d2 = _.length > 1), !d2) {
                if (255 == e4[r3] && e4[r3 + 1] == f2)
                  return { jpegOffset: r3 };
                if (null != p2 && (255 == e4[r3 + m2] && e4[r3 + m2 + 1] == f2 ? u2 = r3 + m2 : n("JPEGInterchangeFormat does not point to SOI"), null == g2 ? n("JPEGInterchangeFormatLength field is missing") : (m2 >= c2 || m2 + b2 <= c2) && n("JPEGInterchangeFormatLength field value is invalid"), null != u2))
                  return { jpegOffset: u2 };
              }
              if (null != y && (w = y[0], v = y[1]), null != p2 && null != g2)
                if (b2 >= 2 && m2 + b2 <= c2) {
                  for (a2 = 255 == e4[r3 + m2 + b2 - 2] && e4[r3 + m2 + b2 - 1] == f2 ? new Uint8Array(b2 - 2) : new Uint8Array(b2), s2 = 0; s2 < a2.length; s2++)
                    a2[s2] = e4[r3 + m2 + s2];
                  n("Incorrect JPEG interchange format: using JPEGInterchangeFormat offset to derive tables");
                } else
                  n("JPEGInterchangeFormat+JPEGInterchangeFormatLength > offset to first strip or tile");
              if (null == a2) {
                var k = 0, S = [];
                S[k++] = 255, S[k++] = f2;
                var M = t3.t519;
                if (null == M)
                  throw new Error("JPEGQTables tag is missing");
                for (s2 = 0; s2 < M.length; s2++)
                  for (S[k++] = 255, S[k++] = 219, S[k++] = 0, S[k++] = 67, S[k++] = s2, h2 = 0; h2 < 64; h2++)
                    S[k++] = e4[r3 + M[s2] + h2];
                for (l2 = 0; l2 < 2; l2++) {
                  var A = t3[0 == l2 ? "t520" : "t521"];
                  if (null == A)
                    throw new Error((0 == l2 ? "JPEGDCTables" : "JPEGACTables") + " tag is missing");
                  for (s2 = 0; s2 < A.length; s2++) {
                    S[k++] = 255, S[k++] = 196;
                    var I = 19;
                    for (h2 = 0; h2 < 16; h2++)
                      I += e4[r3 + A[s2] + h2];
                    for (S[k++] = I >>> 8, S[k++] = 255 & I, S[k++] = s2 | l2 << 4, h2 = 0; h2 < 16; h2++)
                      S[k++] = e4[r3 + A[s2] + h2];
                    for (h2 = 0; h2 < I; h2++)
                      S[k++] = e4[r3 + A[s2] + 16 + h2];
                  }
                }
                if (S[k++] = 255, S[k++] = 192, S[k++] = 0, S[k++] = 8 + 3 * x, S[k++] = 8, S[k++] = t3.height >>> 8 & 255, S[k++] = 255 & t3.height, S[k++] = t3.width >>> 8 & 255, S[k++] = 255 & t3.width, S[k++] = x, 1 == x)
                  S[k++] = 1, S[k++] = 17, S[k++] = 0;
                else
                  for (s2 = 0; s2 < 3; s2++)
                    S[k++] = s2 + 1, S[k++] = 0 != s2 ? 17 : (15 & w) << 4 | 15 & v, S[k++] = s2;
                null != E && 0 != E[0] && (S[k++] = 255, S[k++] = 221, S[k++] = 0, S[k++] = 4, S[k++] = E[0] >>> 8 & 255, S[k++] = 255 & E[0]), a2 = new Uint8Array(S);
              }
              var B = -1;
              for (s2 = 0; s2 < a2.length - 1; ) {
                if (255 == a2[s2] && 192 == a2[s2 + 1]) {
                  B = s2;
                  break;
                }
                s2++;
              }
              if (-1 == B) {
                var T = new Uint8Array(a2.length + 10 + 3 * x);
                T.set(a2);
                var R = a2.length;
                if (B = a2.length, (a2 = T)[R++] = 255, a2[R++] = 192, a2[R++] = 0, a2[R++] = 8 + 3 * x, a2[R++] = 8, a2[R++] = t3.height >>> 8 & 255, a2[R++] = 255 & t3.height, a2[R++] = t3.width >>> 8 & 255, a2[R++] = 255 & t3.width, a2[R++] = x, 1 == x)
                  a2[R++] = 1, a2[R++] = 17, a2[R++] = 0;
                else
                  for (s2 = 0; s2 < 3; s2++)
                    a2[R++] = s2 + 1, a2[R++] = 0 != s2 ? 17 : (15 & w) << 4 | 15 & v, a2[R++] = s2;
              }
              if (255 == e4[c2] && 218 == e4[c2 + 1]) {
                var P = e4[c2 + 2] << 8 | e4[c2 + 3];
                for ((o2 = new Uint8Array(P + 2))[0] = e4[c2], o2[1] = e4[c2 + 1], o2[2] = e4[c2 + 2], o2[3] = e4[c2 + 3], s2 = 0; s2 < P - 2; s2++)
                  o2[s2 + 4] = e4[c2 + s2 + 4];
              } else {
                var O = 0;
                if ((o2 = new Uint8Array(8 + 2 * x))[O++] = 255, o2[O++] = 218, o2[O++] = 0, o2[O++] = 6 + 2 * x, o2[O++] = x, 1 == x)
                  o2[O++] = 1, o2[O++] = 0;
                else
                  for (s2 = 0; s2 < 3; s2++)
                    o2[O++] = s2 + 1, o2[O++] = s2 << 4 | s2;
                o2[O++] = 0, o2[O++] = 63, o2[O++] = 0;
              }
              return { jpegOffset: r3, tables: a2, sosMarker: o2, sofPosition: B };
            }, t2.decode._decodeOldJPEG = function(e4, r3, i3, n2, a2, o2) {
              var s2, h2, l2, f2, u2 = t2.decode._decodeOldJPEGInit(e4, r3, i3, n2);
              if (null != u2.jpegOffset)
                for (s2 = i3 + n2 - u2.jpegOffset, l2 = new Uint8Array(s2), p2 = 0; p2 < s2; p2++)
                  l2[p2] = r3[u2.jpegOffset + p2];
              else {
                for (h2 = u2.tables.length, (l2 = new Uint8Array(h2 + u2.sosMarker.length + n2 + 2)).set(u2.tables), f2 = h2, l2[u2.sofPosition + 5] = e4.height >>> 8 & 255, l2[u2.sofPosition + 6] = 255 & e4.height, l2[u2.sofPosition + 7] = e4.width >>> 8 & 255, l2[u2.sofPosition + 8] = 255 & e4.width, 255 == r3[i3] && r3[i3 + 1] == SOS || (l2.set(u2.sosMarker, f2), f2 += sosMarker.length), p2 = 0; p2 < n2; p2++)
                  l2[f2++] = r3[i3 + p2];
                l2[f2++] = 255, l2[f2++] = EOI;
              }
              var c2 = new t2.JpegDecoder();
              c2.parse(l2);
              for (var d2 = c2.getData({ width: c2.width, height: c2.height, forceRGB: true, isSourcePDF: false }), p2 = 0; p2 < d2.length; p2++)
                a2[o2 + p2] = d2[p2];
              e4.t262 && 6 == e4.t262[0] && (e4.t262[0] = 2);
            }, t2.decode._decodePackBits = function(t3, e4, r3, i3, n2) {
              for (var a2 = new Int8Array(t3.buffer), o2 = new Int8Array(i3.buffer), s2 = e4 + r3; e4 < s2; ) {
                var h2 = a2[e4];
                if (e4++, h2 >= 0 && h2 < 128)
                  for (var l2 = 0; l2 < h2 + 1; l2++)
                    o2[n2] = a2[e4], n2++, e4++;
                if (h2 >= -127 && h2 < 0) {
                  for (l2 = 0; l2 < 1 - h2; l2++)
                    o2[n2] = a2[e4], n2++;
                  e4++;
                }
              }
              return n2;
            }, t2.decode._decodeThunder = function(t3, e4, r3, i3, n2) {
              for (var a2 = [0, 1, 0, -1], o2 = [0, 1, 2, 3, 0, -3, -2, -1], s2 = e4 + r3, h2 = 2 * n2, l2 = 0; e4 < s2; ) {
                var f2 = t3[e4], u2 = f2 >>> 6, c2 = 63 & f2;
                if (e4++, 3 == u2 && (l2 = 15 & c2, i3[h2 >>> 1] |= l2 << 4 * (1 - h2 & 1), h2++), 0 == u2)
                  for (var d2 = 0; d2 < c2; d2++)
                    i3[h2 >>> 1] |= l2 << 4 * (1 - h2 & 1), h2++;
                if (2 == u2)
                  for (d2 = 0; d2 < 2; d2++)
                    4 != (p2 = c2 >>> 3 * (1 - d2) & 7) && (l2 += o2[p2], i3[h2 >>> 1] |= l2 << 4 * (1 - h2 & 1), h2++);
                if (1 == u2)
                  for (d2 = 0; d2 < 3; d2++) {
                    var p2;
                    2 != (p2 = c2 >>> 2 * (2 - d2) & 3) && (l2 += a2[p2], i3[h2 >>> 1] |= l2 << 4 * (1 - h2 & 1), h2++);
                  }
              }
            }, t2.decode._dmap = { 1: 0, "011": 1, "000011": 2, "0000011": 3, "010": -1, "000010": -2, "0000010": -3 }, t2.decode._lens = function() {
              var t3 = function(t4, e5, r4, i4) {
                for (var n3 = 0; n3 < e5.length; n3++)
                  t4[e5[n3]] = r4 + n3 * i4;
              }, e4 = "00110101,000111,0111,1000,1011,1100,1110,1111,10011,10100,00111,01000,001000,000011,110100,110101,101010,101011,0100111,0001100,0001000,0010111,0000011,0000100,0101000,0101011,0010011,0100100,0011000,00000010,00000011,00011010,00011011,00010010,00010011,00010100,00010101,00010110,00010111,00101000,00101001,00101010,00101011,00101100,00101101,00000100,00000101,00001010,00001011,01010010,01010011,01010100,01010101,00100100,00100101,01011000,01011001,01011010,01011011,01001010,01001011,00110010,00110011,00110100", r3 = "0000110111,010,11,10,011,0011,0010,00011,000101,000100,0000100,0000101,0000111,00000100,00000111,000011000,0000010111,0000011000,0000001000,00001100111,00001101000,00001101100,00000110111,00000101000,00000010111,00000011000,000011001010,000011001011,000011001100,000011001101,000001101000,000001101001,000001101010,000001101011,000011010010,000011010011,000011010100,000011010101,000011010110,000011010111,000001101100,000001101101,000011011010,000011011011,000001010100,000001010101,000001010110,000001010111,000001100100,000001100101,000001010010,000001010011,000000100100,000000110111,000000111000,000000100111,000000101000,000001011000,000001011001,000000101011,000000101100,000001011010,000001100110,000001100111", i3 = "11011,10010,010111,0110111,00110110,00110111,01100100,01100101,01101000,01100111,011001100,011001101,011010010,011010011,011010100,011010101,011010110,011010111,011011000,011011001,011011010,011011011,010011000,010011001,010011010,011000,010011011", n2 = "0000001111,000011001000,000011001001,000001011011,000000110011,000000110100,000000110101,0000001101100,0000001101101,0000001001010,0000001001011,0000001001100,0000001001101,0000001110010,0000001110011,0000001110100,0000001110101,0000001110110,0000001110111,0000001010010,0000001010011,0000001010100,0000001010101,0000001011010,0000001011011,0000001100100,0000001100101", a2 = "00000001000,00000001100,00000001101,000000010010,000000010011,000000010100,000000010101,000000010110,000000010111,000000011100,000000011101,000000011110,000000011111";
              e4 = e4.split(","), r3 = r3.split(","), i3 = i3.split(","), n2 = n2.split(","), a2 = a2.split(",");
              var o2 = {}, s2 = {};
              return t3(o2, e4, 0, 1), t3(o2, i3, 64, 64), t3(o2, a2, 1792, 64), t3(s2, r3, 0, 1), t3(s2, n2, 64, 64), t3(s2, a2, 1792, 64), [o2, s2];
            }(), t2.decode._decodeG4 = function(e4, r3, i3, n2, a2, o2, s2) {
              for (var h2 = t2.decode, l2 = r3 << 3, f2 = 0, u2 = "", c2 = [], d2 = [], p2 = 0; p2 < o2; p2++)
                d2.push(0);
              d2 = h2._makeDiff(d2);
              for (var m2 = 0, g2 = 0, b2 = 0, _ = 0, y = 0, w = 0, v = "", x = 0, E = 8 * Math.ceil(o2 / 8); l2 >>> 3 < r3 + i3; ) {
                b2 = h2._findDiff(d2, m2 + (0 == m2 ? 0 : 1), 1 - y), _ = h2._findDiff(d2, b2, y);
                var k = 0;
                if (1 == s2 && (k = e4[l2 >>> 3] >>> 7 - (7 & l2) & 1), 2 == s2 && (k = e4[l2 >>> 3] >>> (7 & l2) & 1), l2++, u2 += k, "H" == v) {
                  if (null != h2._lens[y][u2]) {
                    var S = h2._lens[y][u2];
                    u2 = "", f2 += S, S < 64 && (h2._addNtimes(c2, f2, y), m2 += f2, y = 1 - y, f2 = 0, 0 == --x && (v = ""));
                  }
                } else
                  "0001" == u2 && (u2 = "", h2._addNtimes(c2, _ - m2, y), m2 = _), "001" == u2 && (u2 = "", v = "H", x = 2), null != h2._dmap[u2] && (g2 = b2 + h2._dmap[u2], h2._addNtimes(c2, g2 - m2, y), m2 = g2, u2 = "", y = 1 - y);
                c2.length == o2 && "" == v && (h2._writeBits(c2, n2, 8 * a2 + w * E), y = 0, w++, m2 = 0, d2 = h2._makeDiff(c2), c2 = []);
              }
            }, t2.decode._findDiff = function(t3, e4, r3) {
              for (var i3 = 0; i3 < t3.length; i3 += 2)
                if (t3[i3] >= e4 && t3[i3 + 1] == r3)
                  return t3[i3];
            }, t2.decode._makeDiff = function(t3) {
              var e4 = [];
              1 == t3[0] && e4.push(0, 1);
              for (var r3 = 1; r3 < t3.length; r3++)
                t3[r3 - 1] != t3[r3] && e4.push(r3, t3[r3]);
              return e4.push(t3.length, 0, t3.length, 1), e4;
            }, t2.decode._decodeG2 = function(e4, r3, i3, n2, a2, o2, s2) {
              for (var h2 = t2.decode, l2 = r3 << 3, f2 = 0, u2 = "", c2 = [], d2 = 0, p2 = 0, m2 = 8 * Math.ceil(o2 / 8); l2 >>> 3 < r3 + i3; ) {
                var g2 = 0;
                1 == s2 && (g2 = e4[l2 >>> 3] >>> 7 - (7 & l2) & 1), 2 == s2 && (g2 = e4[l2 >>> 3] >>> (7 & l2) & 1), l2++, u2 += g2, null != (f2 = h2._lens[d2][u2]) && (h2._addNtimes(c2, f2, d2), u2 = "", f2 < 64 && (d2 = 1 - d2), c2.length == o2 && (h2._writeBits(c2, n2, 8 * a2 + p2 * m2), c2 = [], p2++, d2 = 0, 0 != (7 & l2) && (l2 += 8 - (7 & l2)), f2 >= 64 && (l2 += 8)));
              }
            }, t2.decode._decodeG3 = function(e4, r3, i3, n2, a2, o2, s2, h2) {
              for (var l2 = t2.decode, f2 = r3 << 3, u2 = 0, c2 = "", d2 = [], p2 = [], m2 = 0; m2 < o2; m2++)
                d2.push(0);
              for (var g2 = 0, b2 = 0, _ = 0, y = 0, w = 0, v = -1, x = "", E = 0, k = true, S = 8 * Math.ceil(o2 / 8); f2 >>> 3 < r3 + i3; ) {
                _ = l2._findDiff(p2, g2 + (0 == g2 ? 0 : 1), 1 - w), y = l2._findDiff(p2, _, w);
                var M = 0;
                if (1 == s2 && (M = e4[f2 >>> 3] >>> 7 - (7 & f2) & 1), 2 == s2 && (M = e4[f2 >>> 3] >>> (7 & f2) & 1), f2++, c2 += M, k) {
                  if (null != l2._lens[w][c2]) {
                    var A = l2._lens[w][c2];
                    c2 = "", u2 += A, A < 64 && (l2._addNtimes(d2, u2, w), w = 1 - w, u2 = 0);
                  }
                } else
                  "H" == x ? null != l2._lens[w][c2] && (A = l2._lens[w][c2], c2 = "", u2 += A, A < 64 && (l2._addNtimes(d2, u2, w), g2 += u2, w = 1 - w, u2 = 0, 0 == --E && (x = ""))) : ("0001" == c2 && (c2 = "", l2._addNtimes(d2, y - g2, w), g2 = y), "001" == c2 && (c2 = "", x = "H", E = 2), null != l2._dmap[c2] && (b2 = _ + l2._dmap[c2], l2._addNtimes(d2, b2 - g2, w), g2 = b2, c2 = "", w = 1 - w));
                c2.endsWith("000000000001") && (v >= 0 && l2._writeBits(d2, n2, 8 * a2 + v * S), h2 && (1 == s2 && (k = 1 == (e4[f2 >>> 3] >>> 7 - (7 & f2) & 1)), 2 == s2 && (k = 1 == (e4[f2 >>> 3] >>> (7 & f2) & 1)), f2++), c2 = "", w = 0, v++, g2 = 0, p2 = l2._makeDiff(d2), d2 = []);
              }
              d2.length == o2 && l2._writeBits(d2, n2, 8 * a2 + v * S);
            }, t2.decode._addNtimes = function(t3, e4, r3) {
              for (var i3 = 0; i3 < e4; i3++)
                t3.push(r3);
            }, t2.decode._writeBits = function(t3, e4, r3) {
              for (var i3 = 0; i3 < t3.length; i3++)
                e4[r3 + i3 >>> 3] |= t3[i3] << 7 - (r3 + i3 & 7);
            }, t2.decode._decodeLZW = t2.decode._decodeLZW = (s = 0, h = 0, l = 0, f = 0, u = function() {
              var t3 = r2 >>> 3, e4 = (i2[t3] << 16 | i2[t3 + 1] << 8 | i2[t3 + 2]) >>> 24 - (7 & r2) - h & (1 << h) - 1;
              return r2 += h, e4;
            }, c = new Uint32Array(16384), d = 0, p = function(t3) {
              h = t3 + 1, s = f + 1;
            }, m = function(t3) {
              for (var e4 = t3 << 2, r3 = c[e4 + 2], i3 = o + r3 - 1; 65535 != e4; )
                a[i3--] = c[e4], e4 = c[e4 + 1];
              o += r3;
            }, g = function(t3, e4) {
              var r3 = s << 2, i3 = t3 << 2;
              c[r3] = c[3 + (e4 << 2)], c[r3 + 1] = i3, c[r3 + 2] = c[i3 + 2] + 1, c[r3 + 3] = c[i3 + 3], 1 + ++s == 1 << h && 12 != h && h++;
            }, function(t3, e4, n2, h2, b2, _) {
              r2 = e4 << 3, i2 = t3, a = h2, o = b2;
              var y = e4 + n2 << 3, w = 0, v = 0;
              for (function(t4) {
                if (t4 != d) {
                  d = t4, f = 1 + (l = 1 << t4);
                  for (var e5 = 0; e5 < f + 1; e5++)
                    c[4 * e5] = c[4 * e5 + 3] = e5, c[4 * e5 + 1] = 65535, c[4 * e5 + 2] = 1;
                }
              }(_), p(_); r2 < y && (w = u()) != f; ) {
                if (w == l) {
                  if (p(_), (w = u()) == f)
                    break;
                  m(w);
                } else
                  w < s ? (m(w), g(v, w)) : (g(v, v), m(s - 1));
                v = w;
              }
              return o;
            }), t2.tags = {}, t2._types = ((b = new Array(250)).fill(0), { basic: { main: b = b.concat([0, 0, 0, 0, 4, 3, 3, 3, 3, 3, 0, 0, 3, 0, 0, 0, 3, 0, 0, 2, 2, 2, 2, 4, 3, 0, 0, 3, 4, 4, 3, 3, 5, 5, 3, 2, 5, 5, 0, 0, 0, 0, 4, 4, 0, 0, 3, 3, 0, 0, 0, 0, 0, 0, 0, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 3, 5, 5, 3, 0, 3, 3, 4, 4, 4, 3, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 3, 0, 0, 0, 0, 0, 0, 0, 7, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 3, 5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 7, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]), rest: { 33432: 2, 33434: 5, 33437: 5, 34665: 4, 34850: 3, 34853: 4, 34855: 3, 34864: 3, 34866: 4, 36864: 7, 36867: 2, 36868: 2, 37121: 7, 37377: 10, 37378: 5, 37380: 10, 37381: 5, 37383: 3, 37384: 3, 37385: 3, 37386: 5, 37510: 7, 37520: 2, 37521: 2, 37522: 2, 40960: 7, 40961: 3, 40962: 4, 40963: 4, 40965: 4, 41486: 5, 41487: 5, 41488: 3, 41985: 3, 41986: 3, 41987: 3, 41988: 5, 41989: 3, 41990: 3, 41993: 3, 41994: 3, 41995: 7, 41996: 3, 42032: 2, 42033: 2, 42034: 5, 42036: 2, 42037: 2, 59932: 7 } }, gps: { main: [1, 2, 5, 2, 5, 1, 5, 5, 0, 9], rest: { 18: 2, 29: 2 } } }), t2._readIFD = function(e4, r3, i3, a2, o2, s2) {
              var h2 = e4.readUshort(r3, i3);
              i3 += 2;
              var l2 = {};
              s2.debug && n("   ".repeat(o2), a2.length - 1, ">>>----------------");
              for (var f2 = 0; f2 < h2; f2++) {
                var u2 = e4.readUshort(r3, i3);
                i3 += 2;
                var c2 = e4.readUshort(r3, i3);
                i3 += 2;
                var d2 = e4.readUint(r3, i3);
                i3 += 4;
                var p2 = e4.readUint(r3, i3);
                i3 += 4;
                var m2 = [];
                if (1 != c2 && 7 != c2 || (m2 = new Uint8Array(r3.buffer, d2 < 5 ? i3 - 4 : p2, d2)), 2 == c2) {
                  var g2 = d2 < 5 ? i3 - 4 : p2, b2 = r3[g2], _ = Math.max(0, Math.min(d2 - 1, r3.length - g2));
                  b2 < 128 || 0 == _ ? m2.push(e4.readASCII(r3, g2, _)) : m2 = new Uint8Array(r3.buffer, g2, _);
                }
                if (3 == c2)
                  for (var y = 0; y < d2; y++)
                    m2.push(e4.readUshort(r3, (d2 < 3 ? i3 - 4 : p2) + 2 * y));
                if (4 == c2 || 13 == c2)
                  for (y = 0; y < d2; y++)
                    m2.push(e4.readUint(r3, (d2 < 2 ? i3 - 4 : p2) + 4 * y));
                if (5 == c2 || 10 == c2) {
                  var w = 5 == c2 ? e4.readUint : e4.readInt;
                  for (y = 0; y < d2; y++)
                    m2.push([w(r3, p2 + 8 * y), w(r3, p2 + 8 * y + 4)]);
                }
                if (8 == c2)
                  for (y = 0; y < d2; y++)
                    m2.push(e4.readShort(r3, (d2 < 3 ? i3 - 4 : p2) + 2 * y));
                if (9 == c2)
                  for (y = 0; y < d2; y++)
                    m2.push(e4.readInt(r3, (d2 < 2 ? i3 - 4 : p2) + 4 * y));
                if (11 == c2)
                  for (y = 0; y < d2; y++)
                    m2.push(e4.readFloat(r3, p2 + 4 * y));
                if (12 == c2)
                  for (y = 0; y < d2; y++)
                    m2.push(e4.readDouble(r3, p2 + 8 * y));
                if (0 == d2 || 0 != m2.length) {
                  if (s2.debug && n("   ".repeat(o2), u2, c2, t2.tags[u2], m2), l2["t" + u2] = m2, 330 == u2 && l2.t272 && "DSLR-A100" == l2.t272[0])
                    ;
                  else if (330 == u2 || 34665 == u2 || 34853 == u2 || 50740 == u2 && e4.readUshort(r3, e4.readUint(m2, 0)) < 300 || 61440 == u2) {
                    var v = 50740 == u2 ? [e4.readUint(m2, 0)] : m2, x = [];
                    for (y = 0; y < v.length; y++)
                      t2._readIFD(e4, r3, v[y], x, o2 + 1, s2);
                    330 == u2 && (l2.subIFD = x), 34665 == u2 && (l2.exifIFD = x[0]), 34853 == u2 && (l2.gpsiIFD = x[0]), 50740 == u2 && (l2.dngPrvt = x[0]), 61440 == u2 && (l2.fujiIFD = x[0]);
                  }
                  if (37500 == u2 && s2.parseMN) {
                    var E = m2;
                    if ("Nikon" == e4.readASCII(E, 0, 5))
                      l2.makerNote = t2.decode(E.slice(10).buffer)[0];
                    else if (e4.readUshort(r3, p2) < 300 && e4.readUshort(r3, p2 + 4) <= 12) {
                      var k = [];
                      t2._readIFD(e4, r3, p2, k, o2 + 1, s2), l2.makerNote = k[0];
                    }
                  }
                } else if (n(u2, "unknown TIFF tag type: ", c2, "num:", d2), 0 == f2)
                  return;
              }
              return a2.push(l2), s2.debug && n("   ".repeat(o2), "<<<---------------"), i3;
            }, t2._writeIFD = function(e4, r3, i3, n2, a2) {
              var o2 = Object.keys(a2), s2 = o2.length;
              a2.exifIFD && s2--, a2.gpsiIFD && s2--, e4.writeUshort(i3, n2, s2);
              for (var h2 = (n2 += 2) + 12 * s2 + 4, l2 = 0; l2 < o2.length; l2++) {
                var f2 = o2[l2];
                if ("t34665" != f2 && "t34853" != f2) {
                  "exifIFD" == f2 && (f2 = "t34665"), "gpsiIFD" == f2 && (f2 = "t34853");
                  var u2 = parseInt(f2.slice(1)), c2 = r3.main[u2];
                  if (null == c2 && (c2 = r3.rest[u2]), null == c2 || 0 == c2)
                    throw new Error("unknown type of tag: " + u2);
                  var d2 = a2[f2];
                  34665 == u2 && (d2 = [h2], h2 = t2._writeIFD(e4, r3, i3, h2, a2.exifIFD)[1]), 34853 == u2 && (d2 = [h2], h2 = t2._writeIFD(e4, t2._types.gps, i3, h2, a2.gpsiIFD)[1]), 2 == c2 && (d2 = d2[0] + "\0");
                  var p2 = d2.length;
                  e4.writeUshort(i3, n2, u2), n2 += 2, e4.writeUshort(i3, n2, c2), n2 += 2, e4.writeUint(i3, n2, p2);
                  var m2 = [-1, 1, 1, 2, 4, 8, 0, 1, 0, 4, 8, 0, 8][c2] * p2, g2 = n2 += 4;
                  if (m2 > 4 && (e4.writeUint(i3, n2, h2), g2 = h2), 1 == c2 || 7 == c2)
                    for (var b2 = 0; b2 < p2; b2++)
                      i3[g2 + b2] = d2[b2];
                  else if (2 == c2)
                    e4.writeASCII(i3, g2, d2);
                  else if (3 == c2)
                    for (b2 = 0; b2 < p2; b2++)
                      e4.writeUshort(i3, g2 + 2 * b2, d2[b2]);
                  else if (4 == c2)
                    for (b2 = 0; b2 < p2; b2++)
                      e4.writeUint(i3, g2 + 4 * b2, d2[b2]);
                  else if (5 == c2 || 10 == c2) {
                    var _ = 5 == c2 ? e4.writeUint : e4.writeInt;
                    for (b2 = 0; b2 < p2; b2++) {
                      var y = d2[b2], w = y[0], v = y[1];
                      if (null == w)
                        throw "e";
                      _(i3, g2 + 8 * b2, w), _(i3, g2 + 8 * b2 + 4, v);
                    }
                  } else if (9 == c2)
                    for (b2 = 0; b2 < p2; b2++)
                      e4.writeInt(i3, g2 + 4 * b2, d2[b2]);
                  else {
                    if (12 != c2)
                      throw c2;
                    for (b2 = 0; b2 < p2; b2++)
                      e4.writeDouble(i3, g2 + 8 * b2, d2[b2]);
                  }
                  m2 > 4 && (h2 += m2 += 1 & m2), n2 += 4;
                }
              }
              return [n2, h2];
            }, t2.toRGBA8 = function(t3, e4) {
              var r3 = t3.width, i3 = t3.height, a2 = r3 * i3, o2 = 4 * a2, s2 = t3.data, h2 = new Uint8Array(4 * a2), l2 = t3.t262 ? t3.t262[0] : 2, f2 = t3.t258 ? Math.min(32, t3.t258[0]) : 1;
              if (null == t3.t262 && 1 == f2 && (l2 = 0), 0 == l2)
                for (var u2 = Math.ceil(f2 * r3 / 8), c2 = 0; c2 < i3; c2++) {
                  var d2 = c2 * u2, p2 = c2 * r3;
                  if (1 == f2)
                    for (var m2 = 0; m2 < r3; m2++) {
                      var g2 = p2 + m2 << 2, b2 = s2[d2 + (m2 >> 3)] >> 7 - (7 & m2) & 1;
                      h2[g2] = h2[g2 + 1] = h2[g2 + 2] = 255 * (1 - b2), h2[g2 + 3] = 255;
                    }
                  if (4 == f2)
                    for (m2 = 0; m2 < r3; m2++)
                      g2 = p2 + m2 << 2, b2 = s2[d2 + (m2 >> 1)] >> 4 - 4 * (1 & m2) & 15, h2[g2] = h2[g2 + 1] = h2[g2 + 2] = 17 * (15 - b2), h2[g2 + 3] = 255;
                  if (8 == f2)
                    for (m2 = 0; m2 < r3; m2++)
                      g2 = p2 + m2 << 2, b2 = s2[d2 + m2], h2[g2] = h2[g2 + 1] = h2[g2 + 2] = 255 - b2, h2[g2 + 3] = 255;
                }
              else if (1 == l2) {
                var _ = t3.t258 ? t3.t258.length : 1;
                for (u2 = Math.ceil(_ * f2 * r3 / 8), null == e4 && (e4 = 1 / 256), c2 = 0; c2 < i3; c2++) {
                  if (d2 = c2 * u2, p2 = c2 * r3, 1 == f2)
                    for (m2 = 0; m2 < r3; m2++)
                      g2 = p2 + m2 << 2, b2 = s2[d2 + (m2 >> 3)] >> 7 - (7 & m2) & 1, h2[g2] = h2[g2 + 1] = h2[g2 + 2] = 255 * b2, h2[g2 + 3] = 255;
                  if (2 == f2)
                    for (m2 = 0; m2 < r3; m2++)
                      g2 = p2 + m2 << 2, b2 = s2[d2 + (m2 >> 2)] >> 6 - 2 * (3 & m2) & 3, h2[g2] = h2[g2 + 1] = h2[g2 + 2] = 85 * b2, h2[g2 + 3] = 255;
                  if (8 == f2)
                    for (m2 = 0; m2 < r3; m2++)
                      g2 = p2 + m2 << 2, b2 = s2[d2 + m2 * _], h2[g2] = h2[g2 + 1] = h2[g2 + 2] = b2, h2[g2 + 3] = 255;
                  if (16 == f2)
                    for (m2 = 0; m2 < r3; m2++) {
                      g2 = p2 + m2 << 2;
                      var y = d2 + 2 * m2;
                      b2 = s2[y + 1] << 8 | s2[y], h2[g2] = h2[g2 + 1] = h2[g2 + 2] = Math.min(255, ~~(b2 * e4)), h2[g2 + 3] = 255;
                    }
                }
              } else if (2 == l2)
                if (_ = t3.t258 ? t3.t258.length : 3, 8 == f2) {
                  if (4 == _)
                    for (m2 = 0; m2 < o2; m2++)
                      h2[m2] = s2[m2];
                  if (3 == _)
                    for (m2 = 0; m2 < a2; m2++) {
                      var w = 3 * m2;
                      h2[g2 = m2 << 2] = s2[w], h2[g2 + 1] = s2[w + 1], h2[g2 + 2] = s2[w + 2], h2[g2 + 3] = 255;
                    }
                } else if (16 == f2) {
                  if (4 == _)
                    for (m2 = 0; m2 < a2; m2++)
                      w = 8 * m2 + 1, h2[g2 = m2 << 2] = s2[w], h2[g2 + 1] = s2[w + 2], h2[g2 + 2] = s2[w + 4], h2[g2 + 3] = s2[w + 6];
                  if (3 == _)
                    for (m2 = 0; m2 < a2; m2++)
                      w = 6 * m2 + 1, h2[g2 = m2 << 2] = s2[w], h2[g2 + 1] = s2[w + 2], h2[g2 + 2] = s2[w + 4], h2[g2 + 3] = 255;
                } else {
                  if (32 != f2)
                    throw f2;
                  if (!h2.isLE)
                    for (m2 = 0; m2 < s2.length; m2 += 4) {
                      var v = s2[m2];
                      s2[m2] = s2[m2 + 3], s2[m2 + 3] = v, v = s2[m2 + 1], s2[m2 + 1] = s2[m2 + 2], s2[m2 + 2] = v;
                    }
                  var x = new Float32Array(s2.buffer);
                  if (3 != _)
                    throw _;
                  for (m2 = 0; m2 < a2; m2++)
                    w = 3 * m2, h2[g2 = m2 << 2] = ~~(0.5 + 255 * x[w]), h2[g2 + 1] = ~~(0.5 + 255 * x[w + 1]), h2[g2 + 2] = ~~(0.5 + 255 * x[w + 2]), h2[g2 + 3] = 255;
                }
              else if (3 == l2) {
                var E = t3.t320, k = (_ = t3.t258 ? t3.t258.length : 1, u2 = Math.ceil(_ * f2 * r3 / 8), 1 << f2);
                for (c2 = 0; c2 < i3; c2++)
                  for (var S = 0; S < r3; S++) {
                    g2 = (m2 = c2 * r3 + S) << 2;
                    var M = 0, A = c2 * u2;
                    if (1 == f2)
                      M = s2[A + (S >>> 3)] >>> 7 - (7 & S) & 1;
                    else if (2 == f2)
                      M = s2[A + (S >>> 2)] >>> 6 - 2 * (3 & S) & 3;
                    else if (4 == f2)
                      M = s2[A + (S >>> 1)] >>> 4 - 4 * (1 & S) & 15;
                    else {
                      if (8 != f2)
                        throw f2;
                      M = s2[A + S * _];
                    }
                    h2[g2] = E[M] >> 8, h2[g2 + 1] = E[k + M] >> 8, h2[g2 + 2] = E[k + k + M] >> 8, h2[g2 + 3] = 255;
                  }
              } else if (5 == l2) {
                var I = (_ = t3.t258 ? t3.t258.length : 4) > 4 ? 1 : 0;
                for (m2 = 0; m2 < a2; m2++) {
                  g2 = m2 << 2;
                  var B = m2 * _;
                  if (UDOC) {
                    var T = s2[B], R = s2[B + 1], P = s2[B + 2], O = s2[B + 3], L = UDOC.C.cmykToRgb([T * (1 / 255), R * (1 / 255), P * (1 / 255), O * (1 / 255)]);
                    h2[g2] = ~~(0.5 + 255 * L[0]), h2[g2 + 1] = ~~(0.5 + 255 * L[1]), h2[g2 + 2] = ~~(0.5 + 255 * L[2]);
                  } else
                    T = 255 - s2[B], R = 255 - s2[B + 1], P = 255 - s2[B + 2], O = (255 - s2[B + 3]) * (1 / 255), h2[g2] = ~~(T * O + 0.5), h2[g2 + 1] = ~~(R * O + 0.5), h2[g2 + 2] = ~~(P * O + 0.5);
                  h2[g2 + 3] = 255 * (1 - I) + s2[B + 4] * I;
                }
              } else if (6 == l2 && t3.t278) {
                var C = t3.t278[0];
                for (c2 = 0; c2 < i3; c2 += C) {
                  m2 = c2 * r3;
                  for (var U = C * r3, z = 0; z < U; z++) {
                    g2 = 4 * (m2 + z), P = s2[(B = 3 * m2 + 4 * (z >>> 1)) + (1 & z)];
                    var D = s2[B + 2] - 128, N = s2[B + 3] - 128, F = P + ((N >> 2) + (N >> 3) + (N >> 5)), j = P - ((D >> 2) + (D >> 4) + (D >> 5)) - ((N >> 1) + (N >> 3) + (N >> 4) + (N >> 5)), G = P + (D + (D >> 1) + (D >> 2) + (D >> 6));
                    h2[g2] = Math.max(0, Math.min(255, F)), h2[g2 + 1] = Math.max(0, Math.min(255, j)), h2[g2 + 2] = Math.max(0, Math.min(255, G)), h2[g2 + 3] = 255;
                  }
                }
              } else if (32845 == l2) {
                let H2 = function(t4) {
                  return t4 < 31308e-7 ? 12.92 * t4 : 1.055 * Math.pow(t4, 1 / 2.4) - 0.055;
                };
                var H = H2;
                for (c2 = 0; c2 < i3; c2++)
                  for (S = 0; S < r3; S++) {
                    g2 = 4 * (c2 * r3 + S);
                    var W = s2[1 + (B = 6 * (c2 * r3 + S))] << 8 | s2[B], q = (W = Math.pow(2, (W + 0.5) / 256 - 64), (s2[B + 3] + 0.5) / 410), Z = (s2[B + 5] + 0.5) / 410, Y = 9 * q / (6 * q - 16 * Z + 12), V = 4 * Z / (6 * q - 16 * Z + 12), X = Y * W / V, J = (1 - Y - V) * W / V;
                    F = 2.69 * X - 1.276 * (P = W) - 0.414 * J, j = -1.022 * X + 1.978 * P + 0.044 * J, G = 0.061 * X - 0.224 * P + 1.163 * J, h2[g2] = 255 * H2(Math.min(F, 1)), h2[g2 + 1] = 255 * H2(Math.min(j, 1)), h2[g2 + 2] = 255 * H2(Math.min(G, 1)), h2[g2 + 3] = 255;
                  }
              } else
                n("Unknown Photometric interpretation: " + l2);
              return h2;
            }, t2.replaceIMG = function(e4) {
              null == e4 && (e4 = document.getElementsByTagName("img"));
              for (var r3 = ["tif", "tiff", "dng", "cr2", "nef"], i3 = 0; i3 < e4.length; i3++) {
                var n2 = e4[i3], a2 = n2.getAttribute("src");
                if (null != a2) {
                  var o2 = a2.split(".").pop().toLowerCase();
                  if (-1 != r3.indexOf(o2)) {
                    var s2 = new XMLHttpRequest();
                    t2._xhrs.push(s2), t2._imgs.push(n2), s2.open("GET", a2), s2.responseType = "arraybuffer", s2.onload = t2._imgLoaded, s2.send();
                  }
                }
              }
            }, t2._xhrs = [], t2._imgs = [], t2._imgLoaded = function(e4) {
              var r3 = t2._xhrs.indexOf(e4.target), i3 = t2._imgs[r3];
              t2._xhrs.splice(r3, 1), t2._imgs.splice(r3, 1), i3.setAttribute("src", t2.bufferToURI(e4.target.response));
            }, t2.bufferToURI = function(e4) {
              var r3 = t2.decode(e4), i3 = r3, n2 = 0, a2 = i3[0];
              r3[0].subIFD && (i3 = i3.concat(r3[0].subIFD));
              for (var o2 = 0; o2 < i3.length; o2++) {
                var s2 = i3[o2];
                if (!(null == s2.t258 || s2.t258.length < 3)) {
                  var h2 = s2.t256 * s2.t257;
                  h2 > n2 && (n2 = h2, a2 = s2);
                }
              }
              t2.decodeImage(e4, a2, r3);
              var l2 = t2.toRGBA8(a2), f2 = a2.width, u2 = a2.height, c2 = document.createElement("canvas");
              c2.width = f2, c2.height = u2;
              var d2 = c2.getContext("2d"), p2 = new ImageData(new Uint8ClampedArray(l2.buffer), f2, u2);
              return d2.putImageData(p2, 0, 0), c2.toDataURL();
            }, t2._binBE = { nextZero: function(t3, e4) {
              for (; 0 != t3[e4]; )
                e4++;
              return e4;
            }, readUshort: function(t3, e4) {
              return t3[e4] << 8 | t3[e4 + 1];
            }, readShort: function(e4, r3) {
              var i3 = t2._binBE.ui8;
              return i3[0] = e4[r3 + 1], i3[1] = e4[r3 + 0], t2._binBE.i16[0];
            }, readInt: function(e4, r3) {
              var i3 = t2._binBE.ui8;
              return i3[0] = e4[r3 + 3], i3[1] = e4[r3 + 2], i3[2] = e4[r3 + 1], i3[3] = e4[r3 + 0], t2._binBE.i32[0];
            }, readUint: function(e4, r3) {
              var i3 = t2._binBE.ui8;
              return i3[0] = e4[r3 + 3], i3[1] = e4[r3 + 2], i3[2] = e4[r3 + 1], i3[3] = e4[r3 + 0], t2._binBE.ui32[0];
            }, readASCII: function(t3, e4, r3) {
              for (var i3 = "", n2 = 0; n2 < r3; n2++)
                i3 += String.fromCharCode(t3[e4 + n2]);
              return i3;
            }, readFloat: function(e4, r3) {
              for (var i3 = t2._binBE.ui8, n2 = 0; n2 < 4; n2++)
                i3[n2] = e4[r3 + 3 - n2];
              return t2._binBE.fl32[0];
            }, readDouble: function(e4, r3) {
              for (var i3 = t2._binBE.ui8, n2 = 0; n2 < 8; n2++)
                i3[n2] = e4[r3 + 7 - n2];
              return t2._binBE.fl64[0];
            }, writeUshort: function(t3, e4, r3) {
              t3[e4] = r3 >> 8 & 255, t3[e4 + 1] = 255 & r3;
            }, writeInt: function(e4, r3, i3) {
              var n2 = t2._binBE.ui8;
              t2._binBE.i32[0] = i3, e4[r3 + 3] = n2[0], e4[r3 + 2] = n2[1], e4[r3 + 1] = n2[2], e4[r3 + 0] = n2[3];
            }, writeUint: function(t3, e4, r3) {
              t3[e4] = r3 >> 24 & 255, t3[e4 + 1] = r3 >> 16 & 255, t3[e4 + 2] = r3 >> 8 & 255, t3[e4 + 3] = r3 >> 0 & 255;
            }, writeASCII: function(t3, e4, r3) {
              for (var i3 = 0; i3 < r3.length; i3++)
                t3[e4 + i3] = r3.charCodeAt(i3);
            }, writeDouble: function(e4, r3, i3) {
              t2._binBE.fl64[0] = i3;
              for (var n2 = 0; n2 < 8; n2++)
                e4[r3 + n2] = t2._binBE.ui8[7 - n2];
            } }, t2._binBE.ui8 = new Uint8Array(8), t2._binBE.i16 = new Int16Array(t2._binBE.ui8.buffer), t2._binBE.i32 = new Int32Array(t2._binBE.ui8.buffer), t2._binBE.ui32 = new Uint32Array(t2._binBE.ui8.buffer), t2._binBE.fl32 = new Float32Array(t2._binBE.ui8.buffer), t2._binBE.fl64 = new Float64Array(t2._binBE.ui8.buffer), t2._binLE = { nextZero: t2._binBE.nextZero, readUshort: function(t3, e4) {
              return t3[e4 + 1] << 8 | t3[e4];
            }, readShort: function(e4, r3) {
              var i3 = t2._binBE.ui8;
              return i3[0] = e4[r3 + 0], i3[1] = e4[r3 + 1], t2._binBE.i16[0];
            }, readInt: function(e4, r3) {
              var i3 = t2._binBE.ui8;
              return i3[0] = e4[r3 + 0], i3[1] = e4[r3 + 1], i3[2] = e4[r3 + 2], i3[3] = e4[r3 + 3], t2._binBE.i32[0];
            }, readUint: function(e4, r3) {
              var i3 = t2._binBE.ui8;
              return i3[0] = e4[r3 + 0], i3[1] = e4[r3 + 1], i3[2] = e4[r3 + 2], i3[3] = e4[r3 + 3], t2._binBE.ui32[0];
            }, readASCII: t2._binBE.readASCII, readFloat: function(e4, r3) {
              for (var i3 = t2._binBE.ui8, n2 = 0; n2 < 4; n2++)
                i3[n2] = e4[r3 + n2];
              return t2._binBE.fl32[0];
            }, readDouble: function(e4, r3) {
              for (var i3 = t2._binBE.ui8, n2 = 0; n2 < 8; n2++)
                i3[n2] = e4[r3 + n2];
              return t2._binBE.fl64[0];
            }, writeUshort: function(t3, e4, r3) {
              t3[e4] = 255 & r3, t3[e4 + 1] = r3 >> 8 & 255;
            }, writeInt: function(e4, r3, i3) {
              var n2 = t2._binBE.ui8;
              t2._binBE.i32[0] = i3, e4[r3 + 0] = n2[0], e4[r3 + 1] = n2[1], e4[r3 + 2] = n2[2], e4[r3 + 3] = n2[3];
            }, writeUint: function(t3, e4, r3) {
              t3[e4] = r3 >>> 0 & 255, t3[e4 + 1] = r3 >>> 8 & 255, t3[e4 + 2] = r3 >>> 16 & 255, t3[e4 + 3] = r3 >>> 24 & 255;
            }, writeASCII: t2._binBE.writeASCII }, t2._copyTile = function(t3, e4, r3, i3, n2, a2, o2, s2) {
              for (var h2 = Math.min(e4, n2 - o2), l2 = Math.min(r3, a2 - s2), f2 = 0; f2 < l2; f2++)
                for (var u2 = (s2 + f2) * n2 + o2, c2 = f2 * e4, d2 = 0; d2 < h2; d2++)
                  i3[u2 + d2] = t3[c2 + d2];
            }, t2.LosslessJpegDecode = /* @__PURE__ */ function() {
              var t3, e4;
              function r3() {
                return t3[e4++];
              }
              function i3() {
                return t3[e4++] << 8 | t3[e4++];
              }
              function n2(t4) {
                for (var e5 = r3(), i4 = [0, 0, 0, 255], n3 = [], o3 = 0; o3 < 16; o3++)
                  n3[o3] = r3();
                for (o3 = 0; o3 < 16; o3++)
                  for (var s3 = 0; s3 < n3[o3]; s3++)
                    i4[a2(i4, 0, o3 + 1, 1) + 3] = r3();
                var h3 = new Uint8Array(256);
                for (t4[e5] = [new Uint8Array(i4), h3], o3 = 0; o3 < 256; o3++) {
                  for (var l3 = 8, f3 = o3, u3 = 0; 255 == i4[u3 + 3] && 0 != l3; )
                    u3 = i4[u3 + (f3 >> --l3 & 1)];
                  h3[o3] = u3;
                }
              }
              function a2(t4, e5, r4, i4) {
                if (255 != t4[e5 + 3])
                  return 0;
                if (0 == r4)
                  return e5;
                for (var n3 = 0; n3 < 2; n3++) {
                  0 == t4[e5 + n3] && (t4[e5 + n3] = t4.length, t4.push(0, 0, i4, 255));
                  var o3 = a2(t4, t4[e5 + n3], r4 - 1, i4 + 1);
                  if (0 != o3)
                    return o3;
                }
                return 0;
              }
              function o2(t4) {
                for (var e5 = t4.b, r4 = t4.a; e5 < 25 && t4.e < t4.d; ) {
                  var i4 = t4.data[t4.e++];
                  t4.c || (t4.e += i4 + 1 >>> 8), r4 = r4 << 8 | i4, e5 += 8;
                }
                if (e5 < 0)
                  throw "e";
                t4.b = e5, t4.a = r4;
              }
              function s2(t4, e5) {
                return e5.b < t4 && o2(e5), e5.a >> (e5.b -= t4) & 65535 >> 16 - t4;
              }
              function h2(t4, e5) {
                var r4 = t4[0], i4 = 0, n3 = 255;
                e5.b < 16 && o2(e5);
                var a3 = e5.a >> e5.b - 8 & 255;
                for (n3 = r4[(i4 = t4[1][a3]) + 3], e5.b -= r4[i4 + 2]; 255 == n3; )
                  n3 = r4[(i4 = r4[i4 + (e5.a >> --e5.b & 1)]) + 3];
                return n3;
              }
              function l2(t4, e5) {
                return t4 < 32768 >> 16 - e5 && (t4 += 1 - (1 << e5)), t4;
              }
              function f2(t4, e5) {
                var r4 = h2(t4, e5);
                return 0 == r4 ? 0 : 16 == r4 ? -32768 : l2(s2(r4, e5), r4);
              }
              function u2(t4, e5, r4, i4, n3, a3) {
                for (var o3 = 0; o3 < a3; o3++)
                  for (var s3 = o3 * e5, h3 = 0; h3 < e5; h3 += n3)
                    for (var l3 = 0; l3 < n3; l3++)
                      t4[s3 + h3 + l3] = f2(i4[l3], r4);
              }
              function c2(t4, e5) {
                return l2(s2(t4, e5), t4);
              }
              function d2(t4, e5, r4, i4, n3, a3, o3, s3) {
                for (var h3 = r4 * o3, l3 = n3; l3 < a3; l3++)
                  t4[l3] += 1 << s3 - 1;
                for (var f3 = o3; f3 < h3; f3 += o3)
                  for (l3 = n3; l3 < a3; l3++)
                    t4[f3 + l3] += t4[f3 + l3 - o3];
                for (var u3 = 1; u3 < i4; u3++) {
                  var c3 = u3 * h3;
                  for (l3 = n3; l3 < a3; l3++)
                    t4[c3 + l3] += t4[c3 + l3 - h3];
                  for (f3 = o3; f3 < h3; f3 += o3)
                    for (l3 = n3; l3 < a3; l3++) {
                      var d3 = c3 + f3 + l3, p2 = d3 - h3, m2 = t4[d3 - o3], g2 = 0;
                      if (0 == e5)
                        g2 = 0;
                      else if (1 == e5)
                        g2 = m2;
                      else if (2 == e5)
                        g2 = t4[p2];
                      else if (3 == e5)
                        g2 = t4[p2 - o3];
                      else if (4 == e5)
                        g2 = m2 + (t4[p2] - t4[p2 - o3]);
                      else if (5 == e5)
                        g2 = m2 + (t4[p2] - t4[p2 - o3] >>> 1);
                      else if (6 == e5)
                        g2 = t4[p2] + (m2 - t4[p2 - o3] >>> 1);
                      else {
                        if (7 != e5)
                          throw e5;
                        g2 = m2 + t4[p2] >>> 1;
                      }
                      t4[d3] += g2;
                    }
                }
              }
              return function(a3) {
                if (t3 = a3, e4 = 0, 65496 != i3())
                  throw "e";
                for (var o3 = [], s3 = 0, l3 = 0, f3 = [], p2 = [], m2 = [], g2 = 0, b2 = 0, _ = 0; ; ) {
                  var y = i3();
                  if (65535 != y) {
                    var w = i3();
                    if (65475 == y) {
                      l3 = r3(), b2 = i3(), _ = i3(), g2 = r3();
                      for (var v = 0; v < g2; v++) {
                        var x = r3(), E = r3();
                        if (0 != r3())
                          throw "e";
                        o3[x] = [v, E >> 4, 15 & E];
                      }
                    } else if (65476 == y)
                      for (var k = e4 + w - 2; e4 < k; )
                        n2(p2);
                    else {
                      if (65498 == y) {
                        for (e4++, v = 0; v < g2; v++) {
                          var S = o3[r3()];
                          m2[S[0]] = p2[r3() >>> 4], f3[S[0]] = S.slice(1);
                        }
                        s3 = r3(), e4 += 2;
                        break;
                      }
                      e4 += w - 2;
                    }
                  } else
                    e4--;
                }
                var M = new (l3 > 8 ? Uint16Array : Uint8Array)(b2 * _ * g2), A = { b: 0, a: 0, c: 8 == s3, e: e4, data: t3, d: t3.length };
                if (A.c)
                  !function(r4, i4, n3, a4, o4) {
                    for (var s4 = t3.length - e4, l4 = 0; l4 < s4; l4 += 4) {
                      var f4 = t3[e4 + l4];
                      t3[e4 + l4] = t3[e4 + l4 + 3], t3[e4 + l4 + 3] = f4, f4 = t3[e4 + l4 + 1], t3[e4 + l4 + 1] = t3[e4 + l4 + 2], t3[e4 + l4 + 2] = f4;
                    }
                    for (var u3 = 0; u3 < o4; u3++)
                      for (var d3 = 32768, p3 = 32768, m3 = 0; m3 < i4; m3 += 2) {
                        var g3 = h2(a4, n3), b3 = h2(a4, n3);
                        0 != g3 && (d3 += c2(g3, n3)), 0 != b3 && (p3 += c2(b3, n3)), r4[u3 * i4 + m3] = 65535 & d3, r4[u3 * i4 + m3 + 1] = 65535 & p3;
                      }
                  }(M, _ * g2, A, m2[0], b2);
                else {
                  var I = [], B = 0, T = 0;
                  for (v = 0; v < g2; v++) {
                    var R = f3[v];
                    (N = R[0]) > B && (B = N), (D = R[1]) > T && (T = D), I.push(N * D);
                  }
                  if (1 != B || 1 != T) {
                    var P = [], O = 0;
                    for (v = 0; v < g2; v++) {
                      for (var L = 0; L < I[v]; L++)
                        P.push(m2[v]);
                      O += I[v];
                    }
                    var C = _ / B, U = b2 / T;
                    u2(M, C * O, A, P, O, U), d2(M, s3, C, U, O - 2, O, O, l3);
                    for (var z = M.slice(0), D = 0; D < b2; D++)
                      for (var N = 0; N < _; N++) {
                        var F = (D * _ + N) * g2, j = ~~(D / T) * C + ~~(N / B), G = 0;
                        for (v = 0; v < g2; v++) {
                          var H = 1 & N, W = j * O + G + (0 == v ? 1 == T ? H : 2 * H + (1 & D) : 0);
                          M[F + v] = z[W], G += I[v];
                        }
                      }
                    d2(M, s3, _, b2, 0, 1, g2, l3);
                  } else
                    u2(M, _ * g2, A, m2, g2, b2), d2(M, s3, _, b2, 0, g2, g2, l3);
                }
                return M;
              };
            }(), function() {
              var e4 = 2, r3 = 3, i3 = 4, n2 = 5, a2 = 6, o2 = 7, s2 = 8, h2 = 9, l2 = 10, f2 = 11, u2 = 12, c2 = 13, d2 = 14, p2 = 15, m2 = 16, g2 = 17;
              function b2(t3) {
                for (var e5 = [[], [], []], r4 = Math.max(2, t3.w + 32 >>> 6), i4 = 0; i4 < 3; i4++)
                  for (var n3 = 0; n3 < 41; n3++)
                    e5[i4][n3] = [r4, 1];
                return e5;
              }
              function _(t3, e5) {
                var r4 = 0, i4 = 8 - t3.a;
                if (t3.j, t3.a, e5) {
                  if (e5 >= i4)
                    do {
                      r4 <<= i4, e5 -= i4, r4 |= t3[t3.j] & (1 << i4) - 1, t3.j++, i4 = 8;
                    } while (e5 >= 8);
                  e5 && (r4 <<= e5, i4 -= e5, r4 |= t3[t3.j] >>> i4 & (1 << e5) - 1), t3.a = 8 - i4;
                }
                return r4;
              }
              function y(t3, e5, r4, i4, n3, a3, o3, s3) {
                null == s3 && (s3 = 0);
                var h3, l3, f3, u3, c3, d3, p3 = a3 + 1, m3 = p3 % 2, g3 = 0, b3 = i4[n3], y2 = i4[n3 - 1], w2 = i4[n3 - 2][p3], v2 = y2[p3 - 1], x2 = y2[p3], E2 = y2[p3 + 1], k2 = b3[p3 - 1], S = b3[p3 + 1], M = Math.abs;
                if (m3 && (f3 = M(E2 - x2), u3 = M(w2 - x2), c3 = M(v2 - x2)), m3) {
                  if (d3 = (d3 = f3 > c3 && u3 < f3 ? w2 + v2 : f3 < c3 && u3 < c3 ? w2 + E2 : E2 + v2) + 2 * x2 >>> 2, s3)
                    return void (b3[p3] = d3);
                  h3 = e5.t * e5.c[t3.g + x2 - w2] + e5.c[t3.g + v2 - x2];
                } else
                  d3 = x2 > v2 && x2 > E2 || x2 < v2 && x2 < E2 ? S + k2 + 2 * x2 >>> 2 : k2 + S >>> 1, h3 = e5.t * e5.c[t3.g + x2 - v2] + e5.c[t3.g + v2 - k2];
                l3 = M(h3);
                var A = function(t4) {
                  for (var e6 = -1, r5 = 0; !r5; e6++)
                    r5 = t4[t4.j] >>> 7 - t4.a & 1, t4.a++, t4.a &= 7, t4.a || t4.j++;
                  return e6;
                }(r4);
                if (A < t3.n - e5.v - 1) {
                  var I = function(t4, e6) {
                    var r5 = 0;
                    if (e6 < t4)
                      for (; r5 <= 14 && e6 << ++r5 < t4; )
                        ;
                    return r5;
                  }(o3[l3][0], o3[l3][1]);
                  g3 = _(r4, I) + (A << I);
                } else
                  g3 = _(r4, e5.v) + 1;
                g3 = 1 & g3 ? -1 - (g3 >>> 1) : g3 >>> 1, o3[l3][0] += M(g3), o3[l3][1] == t3.f && (o3[l3][0] >>>= 1, o3[l3][1] >>>= 1), o3[l3][1]++, d3 = h3 < 0 ? d3 - g3 : d3 + g3, t3.i && (d3 < 0 ? d3 += e5.w : d3 > t3.g && (d3 -= e5.w)), b3[p3] = d3 >= 0 ? Math.min(d3, t3.g) : 0;
              }
              function w(t3, e5, r4) {
                for (var i4 = t3[0].length, n3 = e5; n3 <= r4; n3++)
                  t3[n3][0] = t3[n3 - 1][1], t3[n3][i4 - 1] = t3[n3 - 1][i4 - 2];
              }
              function v(t3) {
                w(t3, o2, u2), w(t3, e4, i3), w(t3, p2, g2);
              }
              function x(t3, e5, r4, n3, a3, o3, s3, h3, l3, f3, u3, d3, p3) {
                for (var m3 = 0, g3 = 1, b3 = a3 < c2 && a3 > i3; g3 < t3.m; )
                  m3 < t3.m && (y(t3, e5, r4, n3, a3, m3, s3[l3], t3.h && (b3 && f3 || !b3 && (u3 || (m3 & d3) == p3))), y(t3, e5, r4, n3, o3, m3, s3[l3], t3.h && (!b3 && f3 || b3 && (u3 || (m3 & d3) == p3))), m3 += 2), m3 > 8 && (y(t3, e5, r4, n3, a3, g3, h3[l3]), y(t3, e5, r4, n3, o3, g3, h3[l3]), g3 += 2);
                v(n3);
              }
              function E(t3, n3, a3, c3, d3, b3) {
                x(t3, n3, a3, c3, e4, o2, d3, b3, 0, 0, 1, 0, 8), x(t3, n3, a3, c3, s2, p2, d3, b3, 1, 0, 1, 0, 8), x(t3, n3, a3, c3, r3, h2, d3, b3, 2, 1, 0, 3, 0), x(t3, n3, a3, c3, l2, m2, d3, b3, 0, 0, 0, 3, 2), x(t3, n3, a3, c3, i3, f2, d3, b3, 1, 0, 0, 3, 2), x(t3, n3, a3, c3, u2, g2, d3, b3, 2, 1, 0, 3, 0);
              }
              function k(t3, r4, i4, n3, a3, s3) {
                var h3 = s3.length, l3 = t3.l;
                a3 + 1 == t3.s && (l3 = t3.e - a3 * t3.l);
                for (var f3 = 6 * t3.e * n3 + a3 * t3.l, u3 = 0; u3 < 6; u3++) {
                  for (var c3 = 0; c3 < l3; c3++) {
                    var d3, m3 = s3[u3 % h3][c3 % h3];
                    d3 = 0 == m3 ? e4 + (u3 >>> 1) : 2 == m3 ? p2 + (u3 >>> 1) : o2 + u3;
                    var g3 = t3.h ? (2 * c3 / 3 & 2147483646 | c3 % 3 & 1) + (c3 % 3 >>> 1) : c3 >>> 1;
                    r4[f3 + c3] = i4[d3][g3 + 1];
                  }
                  f3 += t3.e;
                }
              }
              t2._decompressRAF = function(o3, s3) {
                var h3 = function(e5) {
                  var r4 = t2._binBE.readUshort, i4 = { b: r4(e5, 0), i: e5[2], C: e5[3], u: e5[4], q: r4(e5, 5), k: r4(e5, 7), e: r4(e5, 9), l: r4(e5, 11), s: e5[13], d: r4(e5, 14) };
                  if (18771 != i4.b || i4.i > 1 || i4.q < 6 || i4.q % 6 || i4.e < 768 || i4.e % 24 || 768 != i4.l || i4.k < i4.l || i4.k % i4.l || i4.k - i4.e >= i4.l || i4.s > 16 || i4.s != i4.k / i4.l || i4.s != Math.ceil(i4.e / i4.l) || i4.d != i4.q / 6 || 12 != i4.u && 14 != i4.u && 16 != i4.u || 16 != i4.C && 0 != i4.C)
                    throw "Invalid data";
                  if (0 == i4.i)
                    throw "Not implemented. We need this file!";
                  return i4.h = 16 == i4.C, i4.m = 0 | (i4.h ? 2 * i4.l / 3 : i4.l >>> 1), i4.A = i4.m + 2, i4.f = 64, i4.g = (1 << i4.u) - 1, i4.n = 4 * i4.u, i4;
                }(o3), l3 = function(e5, r4) {
                  var i4 = new Array(r4.s), n3 = 4 * r4.s, a3 = 16 + n3;
                  12 & n3 && (a3 += 16 - (12 & n3));
                  for (var o4 = 0, s4 = 16; o4 < r4.s; s4 += 4) {
                    var h4 = t2._binBE.readUint(e5, s4);
                    i4[o4] = e5.slice(a3, a3 + h4), i4[o4].j = 0, i4[o4].a = 0, a3 += h4, o4++;
                  }
                  if (a3 != e5.length)
                    throw "Invalid data";
                  return i4;
                }(o3, h3), p3 = function(t3) {
                  var e5 = { c: new Int8Array(2 << t3.u) };
                  return function(t4, e6, r4) {
                    var i4 = [0, 18, 67, 276, r4];
                    t4.o = 0, t4.w = (i4[4] + 0) / 1 + 1 | 0, t4.v = Math.ceil(Math.log2(t4.w)), t4.t = 9, function(t5, e7) {
                      for (var r5 = -e7[4], i5 = 0; r5 <= e7[4]; i5++, r5++)
                        t5[i5] = r5 <= -e7[3] ? -4 : r5 <= -e7[2] ? -3 : r5 <= -e7[1] ? -2 : r5 < -e7[0] ? -1 : r5 <= e7[0] ? 0 : r5 < e7[1] ? 1 : r5 < e7[2] ? 2 : r5 < e7[3] ? 3 : 4;
                    }(t4.c, i4);
                  }(e5, 0, t3.g), e5;
                }(h3), _2 = new Int16Array(h3.e * h3.q);
                null == s3 && (s3 = h3.h ? [[1, 1, 0, 1, 1, 2], [1, 1, 2, 1, 1, 0], [2, 0, 1, 0, 2, 1], [1, 1, 2, 1, 1, 0], [1, 1, 0, 1, 1, 2], [0, 2, 1, 2, 0, 1]] : [[0, 1], [3, 2]]);
                for (var y2 = [[0, r3], [1, i3], [n2, f2], [a2, u2], [c2, m2], [d2, g2]], w2 = [], x2 = 0; x2 < 18; x2++)
                  w2[x2] = new Uint16Array(h3.A);
                for (var S = 0; S < h3.s; S++) {
                  var M = b2(p3), A = b2(p3);
                  for (x2 = 0; x2 < 18; x2++)
                    for (var I = 0; I < h3.A; I++)
                      w2[x2][I] = 0;
                  for (var B = 0; B < h3.d; B++) {
                    for (E(h3, p3, l3[S], w2, M, A), x2 = 0; x2 < 6; x2++)
                      for (I = 0; I < h3.A; I++)
                        w2[y2[x2][0]][I] = w2[y2[x2][1]][I];
                    for (k(h3, _2, w2, B, S, s3), x2 = e4; x2 < 18; x2++)
                      if (-1 == [n2, a2, c2, d2].indexOf(x2))
                        for (I = 0; I < h3.A; I++)
                          w2[x2][I] = 0;
                    v(w2);
                  }
                }
                return _2;
              };
            }();
          }(e2, r(2845));
        }();
      }, 6168: (t, e, r) => {
        "use strict";
        r.r(e), r.d(e, { DOMException: () => v, Headers: () => f, Request: () => b, Response: () => y, fetch: () => x });
        var i = "undefined" != typeof globalThis && globalThis || "undefined" != typeof self && self || void 0 !== i && i, n = { searchParams: "URLSearchParams" in i, iterable: "Symbol" in i && "iterator" in Symbol, blob: "FileReader" in i && "Blob" in i && function() {
          try {
            return new Blob(), true;
          } catch (t2) {
            return false;
          }
        }(), formData: "FormData" in i, arrayBuffer: "ArrayBuffer" in i };
        if (n.arrayBuffer)
          var a = ["[object Int8Array]", "[object Uint8Array]", "[object Uint8ClampedArray]", "[object Int16Array]", "[object Uint16Array]", "[object Int32Array]", "[object Uint32Array]", "[object Float32Array]", "[object Float64Array]"], o = ArrayBuffer.isView || function(t2) {
            return t2 && a.indexOf(Object.prototype.toString.call(t2)) > -1;
          };
        function s(t2) {
          if ("string" != typeof t2 && (t2 = String(t2)), /[^a-z0-9\-#$%&'*+.^_`|~!]/i.test(t2) || "" === t2)
            throw new TypeError('Invalid character in header field name: "' + t2 + '"');
          return t2.toLowerCase();
        }
        function h(t2) {
          return "string" != typeof t2 && (t2 = String(t2)), t2;
        }
        function l(t2) {
          var e2 = { next: function() {
            var e3 = t2.shift();
            return { done: void 0 === e3, value: e3 };
          } };
          return n.iterable && (e2[Symbol.iterator] = function() {
            return e2;
          }), e2;
        }
        function f(t2) {
          this.map = {}, t2 instanceof f ? t2.forEach(function(t3, e2) {
            this.append(e2, t3);
          }, this) : Array.isArray(t2) ? t2.forEach(function(t3) {
            this.append(t3[0], t3[1]);
          }, this) : t2 && Object.getOwnPropertyNames(t2).forEach(function(e2) {
            this.append(e2, t2[e2]);
          }, this);
        }
        function u(t2) {
          if (t2.bodyUsed)
            return Promise.reject(new TypeError("Already read"));
          t2.bodyUsed = true;
        }
        function c(t2) {
          return new Promise(function(e2, r2) {
            t2.onload = function() {
              e2(t2.result);
            }, t2.onerror = function() {
              r2(t2.error);
            };
          });
        }
        function d(t2) {
          var e2 = new FileReader(), r2 = c(e2);
          return e2.readAsArrayBuffer(t2), r2;
        }
        function p(t2) {
          if (t2.slice)
            return t2.slice(0);
          var e2 = new Uint8Array(t2.byteLength);
          return e2.set(new Uint8Array(t2)), e2.buffer;
        }
        function m() {
          return this.bodyUsed = false, this._initBody = function(t2) {
            var e2;
            this.bodyUsed = this.bodyUsed, this._bodyInit = t2, t2 ? "string" == typeof t2 ? this._bodyText = t2 : n.blob && Blob.prototype.isPrototypeOf(t2) ? this._bodyBlob = t2 : n.formData && FormData.prototype.isPrototypeOf(t2) ? this._bodyFormData = t2 : n.searchParams && URLSearchParams.prototype.isPrototypeOf(t2) ? this._bodyText = t2.toString() : n.arrayBuffer && n.blob && (e2 = t2) && DataView.prototype.isPrototypeOf(e2) ? (this._bodyArrayBuffer = p(t2.buffer), this._bodyInit = new Blob([this._bodyArrayBuffer])) : n.arrayBuffer && (ArrayBuffer.prototype.isPrototypeOf(t2) || o(t2)) ? this._bodyArrayBuffer = p(t2) : this._bodyText = t2 = Object.prototype.toString.call(t2) : this._bodyText = "", this.headers.get("content-type") || ("string" == typeof t2 ? this.headers.set("content-type", "text/plain;charset=UTF-8") : this._bodyBlob && this._bodyBlob.type ? this.headers.set("content-type", this._bodyBlob.type) : n.searchParams && URLSearchParams.prototype.isPrototypeOf(t2) && this.headers.set("content-type", "application/x-www-form-urlencoded;charset=UTF-8"));
          }, n.blob && (this.blob = function() {
            var t2 = u(this);
            if (t2)
              return t2;
            if (this._bodyBlob)
              return Promise.resolve(this._bodyBlob);
            if (this._bodyArrayBuffer)
              return Promise.resolve(new Blob([this._bodyArrayBuffer]));
            if (this._bodyFormData)
              throw new Error("could not read FormData body as blob");
            return Promise.resolve(new Blob([this._bodyText]));
          }, this.arrayBuffer = function() {
            return this._bodyArrayBuffer ? u(this) || (ArrayBuffer.isView(this._bodyArrayBuffer) ? Promise.resolve(this._bodyArrayBuffer.buffer.slice(this._bodyArrayBuffer.byteOffset, this._bodyArrayBuffer.byteOffset + this._bodyArrayBuffer.byteLength)) : Promise.resolve(this._bodyArrayBuffer)) : this.blob().then(d);
          }), this.text = function() {
            var t2, e2, r2, i2 = u(this);
            if (i2)
              return i2;
            if (this._bodyBlob)
              return t2 = this._bodyBlob, r2 = c(e2 = new FileReader()), e2.readAsText(t2), r2;
            if (this._bodyArrayBuffer)
              return Promise.resolve(function(t3) {
                for (var e3 = new Uint8Array(t3), r3 = new Array(e3.length), i3 = 0; i3 < e3.length; i3++)
                  r3[i3] = String.fromCharCode(e3[i3]);
                return r3.join("");
              }(this._bodyArrayBuffer));
            if (this._bodyFormData)
              throw new Error("could not read FormData body as text");
            return Promise.resolve(this._bodyText);
          }, n.formData && (this.formData = function() {
            return this.text().then(_);
          }), this.json = function() {
            return this.text().then(JSON.parse);
          }, this;
        }
        f.prototype.append = function(t2, e2) {
          t2 = s(t2), e2 = h(e2);
          var r2 = this.map[t2];
          this.map[t2] = r2 ? r2 + ", " + e2 : e2;
        }, f.prototype.delete = function(t2) {
          delete this.map[s(t2)];
        }, f.prototype.get = function(t2) {
          return t2 = s(t2), this.has(t2) ? this.map[t2] : null;
        }, f.prototype.has = function(t2) {
          return this.map.hasOwnProperty(s(t2));
        }, f.prototype.set = function(t2, e2) {
          this.map[s(t2)] = h(e2);
        }, f.prototype.forEach = function(t2, e2) {
          for (var r2 in this.map)
            this.map.hasOwnProperty(r2) && t2.call(e2, this.map[r2], r2, this);
        }, f.prototype.keys = function() {
          var t2 = [];
          return this.forEach(function(e2, r2) {
            t2.push(r2);
          }), l(t2);
        }, f.prototype.values = function() {
          var t2 = [];
          return this.forEach(function(e2) {
            t2.push(e2);
          }), l(t2);
        }, f.prototype.entries = function() {
          var t2 = [];
          return this.forEach(function(e2, r2) {
            t2.push([r2, e2]);
          }), l(t2);
        }, n.iterable && (f.prototype[Symbol.iterator] = f.prototype.entries);
        var g = ["DELETE", "GET", "HEAD", "OPTIONS", "POST", "PUT"];
        function b(t2, e2) {
          if (!(this instanceof b))
            throw new TypeError('Please use the "new" operator, this DOM object constructor cannot be called as a function.');
          var r2, i2, n2 = (e2 = e2 || {}).body;
          if (t2 instanceof b) {
            if (t2.bodyUsed)
              throw new TypeError("Already read");
            this.url = t2.url, this.credentials = t2.credentials, e2.headers || (this.headers = new f(t2.headers)), this.method = t2.method, this.mode = t2.mode, this.signal = t2.signal, n2 || null == t2._bodyInit || (n2 = t2._bodyInit, t2.bodyUsed = true);
          } else
            this.url = String(t2);
          if (this.credentials = e2.credentials || this.credentials || "same-origin", !e2.headers && this.headers || (this.headers = new f(e2.headers)), this.method = (i2 = (r2 = e2.method || this.method || "GET").toUpperCase(), g.indexOf(i2) > -1 ? i2 : r2), this.mode = e2.mode || this.mode || null, this.signal = e2.signal || this.signal, this.referrer = null, ("GET" === this.method || "HEAD" === this.method) && n2)
            throw new TypeError("Body not allowed for GET or HEAD requests");
          if (this._initBody(n2), !("GET" !== this.method && "HEAD" !== this.method || "no-store" !== e2.cache && "no-cache" !== e2.cache)) {
            var a2 = /([?&])_=[^&]*/;
            a2.test(this.url) ? this.url = this.url.replace(a2, "$1_=" + (/* @__PURE__ */ new Date()).getTime()) : this.url += (/\?/.test(this.url) ? "&" : "?") + "_=" + (/* @__PURE__ */ new Date()).getTime();
          }
        }
        function _(t2) {
          var e2 = new FormData();
          return t2.trim().split("&").forEach(function(t3) {
            if (t3) {
              var r2 = t3.split("="), i2 = r2.shift().replace(/\+/g, " "), n2 = r2.join("=").replace(/\+/g, " ");
              e2.append(decodeURIComponent(i2), decodeURIComponent(n2));
            }
          }), e2;
        }
        function y(t2, e2) {
          if (!(this instanceof y))
            throw new TypeError('Please use the "new" operator, this DOM object constructor cannot be called as a function.');
          e2 || (e2 = {}), this.type = "default", this.status = void 0 === e2.status ? 200 : e2.status, this.ok = this.status >= 200 && this.status < 300, this.statusText = void 0 === e2.statusText ? "" : "" + e2.statusText, this.headers = new f(e2.headers), this.url = e2.url || "", this._initBody(t2);
        }
        b.prototype.clone = function() {
          return new b(this, { body: this._bodyInit });
        }, m.call(b.prototype), m.call(y.prototype), y.prototype.clone = function() {
          return new y(this._bodyInit, { status: this.status, statusText: this.statusText, headers: new f(this.headers), url: this.url });
        }, y.error = function() {
          var t2 = new y(null, { status: 0, statusText: "" });
          return t2.type = "error", t2;
        };
        var w = [301, 302, 303, 307, 308];
        y.redirect = function(t2, e2) {
          if (-1 === w.indexOf(e2))
            throw new RangeError("Invalid status code");
          return new y(null, { status: e2, headers: { location: t2 } });
        };
        var v = i.DOMException;
        try {
          new v();
        } catch (t2) {
          (v = function(t3, e2) {
            this.message = t3, this.name = e2;
            var r2 = Error(t3);
            this.stack = r2.stack;
          }).prototype = Object.create(Error.prototype), v.prototype.constructor = v;
        }
        function x(t2, e2) {
          return new Promise(function(r2, a2) {
            var o2 = new b(t2, e2);
            if (o2.signal && o2.signal.aborted)
              return a2(new v("Aborted", "AbortError"));
            var s2 = new XMLHttpRequest();
            function l2() {
              s2.abort();
            }
            s2.onload = function() {
              var t3, e3, i2 = { status: s2.status, statusText: s2.statusText, headers: (t3 = s2.getAllResponseHeaders() || "", e3 = new f(), t3.replace(/\r?\n[\t ]+/g, " ").split("\r").map(function(t4) {
                return 0 === t4.indexOf("\n") ? t4.substr(1, t4.length) : t4;
              }).forEach(function(t4) {
                var r3 = t4.split(":"), i3 = r3.shift().trim();
                if (i3) {
                  var n3 = r3.join(":").trim();
                  e3.append(i3, n3);
                }
              }), e3) };
              i2.url = "responseURL" in s2 ? s2.responseURL : i2.headers.get("X-Request-URL");
              var n2 = "response" in s2 ? s2.response : s2.responseText;
              setTimeout(function() {
                r2(new y(n2, i2));
              }, 0);
            }, s2.onerror = function() {
              setTimeout(function() {
                a2(new TypeError("Network request failed"));
              }, 0);
            }, s2.ontimeout = function() {
              setTimeout(function() {
                a2(new TypeError("Network request failed"));
              }, 0);
            }, s2.onabort = function() {
              setTimeout(function() {
                a2(new v("Aborted", "AbortError"));
              }, 0);
            }, s2.open(o2.method, function(t3) {
              try {
                return "" === t3 && i.location.href ? i.location.href : t3;
              } catch (e3) {
                return t3;
              }
            }(o2.url), true), "include" === o2.credentials ? s2.withCredentials = true : "omit" === o2.credentials && (s2.withCredentials = false), "responseType" in s2 && (n.blob ? s2.responseType = "blob" : n.arrayBuffer && o2.headers.get("Content-Type") && -1 !== o2.headers.get("Content-Type").indexOf("application/octet-stream") && (s2.responseType = "arraybuffer")), !e2 || "object" != typeof e2.headers || e2.headers instanceof f ? o2.headers.forEach(function(t3, e3) {
              s2.setRequestHeader(e3, t3);
            }) : Object.getOwnPropertyNames(e2.headers).forEach(function(t3) {
              s2.setRequestHeader(t3, h(e2.headers[t3]));
            }), o2.signal && (o2.signal.addEventListener("abort", l2), s2.onreadystatechange = function() {
              4 === s2.readyState && o2.signal.removeEventListener("abort", l2);
            }), s2.send(void 0 === o2._bodyInit ? null : o2._bodyInit);
          });
        }
        x.polyfill = true, i.fetch || (i.fetch = x, i.Headers = f, i.Request = b, i.Response = y);
      }, 6290: (t, e, r) => {
        "use strict";
        var i = r(5048), n = r(9748), a = r(4655), o = r(1960);
        function s(t2, e2, r2) {
          var i2 = t2;
          return n(e2) ? (r2 = e2, "string" == typeof t2 && (i2 = { uri: t2 })) : i2 = o(e2, { uri: t2 }), i2.callback = r2, i2;
        }
        function h(t2, e2, r2) {
          return l(e2 = s(t2, e2, r2));
        }
        function l(t2) {
          if (void 0 === t2.callback)
            throw new Error("callback argument missing");
          var e2 = false, r2 = function(r3, i3, n3) {
            e2 || (e2 = true, t2.callback(r3, i3, n3));
          };
          function i2() {
            var t3 = void 0;
            if (t3 = f.response ? f.response : f.responseText || function(t4) {
              try {
                if ("document" === t4.responseType)
                  return t4.responseXML;
                var e3 = t4.responseXML && "parsererror" === t4.responseXML.documentElement.nodeName;
                if ("" === t4.responseType && !e3)
                  return t4.responseXML;
              } catch (t5) {
              }
              return null;
            }(f), b)
              try {
                t3 = JSON.parse(t3);
              } catch (t4) {
              }
            return t3;
          }
          function n2(t3) {
            return clearTimeout(u), t3 instanceof Error || (t3 = new Error("" + (t3 || "Unknown XMLHttpRequest Error"))), t3.statusCode = 0, r2(t3, _);
          }
          function o2() {
            if (!l2) {
              var e3;
              clearTimeout(u), e3 = t2.useXDR && void 0 === f.status ? 200 : 1223 === f.status ? 204 : f.status;
              var n3 = _, o3 = null;
              return 0 !== e3 ? (n3 = { body: i2(), statusCode: e3, method: d, headers: {}, url: c, rawRequest: f }, f.getAllResponseHeaders && (n3.headers = a(f.getAllResponseHeaders()))) : o3 = new Error("Internal XMLHttpRequest Error"), r2(o3, n3, n3.body);
            }
          }
          var s2, l2, f = t2.xhr || null;
          f || (f = t2.cors || t2.useXDR ? new h.XDomainRequest() : new h.XMLHttpRequest());
          var u, c = f.url = t2.uri || t2.url, d = f.method = t2.method || "GET", p = t2.body || t2.data, m = f.headers = t2.headers || {}, g = !!t2.sync, b = false, _ = { body: void 0, headers: {}, statusCode: 0, method: d, url: c, rawRequest: f };
          if ("json" in t2 && false !== t2.json && (b = true, m.accept || m.Accept || (m.Accept = "application/json"), "GET" !== d && "HEAD" !== d && (m["content-type"] || m["Content-Type"] || (m["Content-Type"] = "application/json"), p = JSON.stringify(true === t2.json ? p : t2.json))), f.onreadystatechange = function() {
            4 === f.readyState && setTimeout(o2, 0);
          }, f.onload = o2, f.onerror = n2, f.onprogress = function() {
          }, f.onabort = function() {
            l2 = true;
          }, f.ontimeout = n2, f.open(d, c, !g, t2.username, t2.password), g || (f.withCredentials = !!t2.withCredentials), !g && t2.timeout > 0 && (u = setTimeout(function() {
            if (!l2) {
              l2 = true, f.abort("timeout");
              var t3 = new Error("XMLHttpRequest timeout");
              t3.code = "ETIMEDOUT", n2(t3);
            }
          }, t2.timeout)), f.setRequestHeader)
            for (s2 in m)
              m.hasOwnProperty(s2) && f.setRequestHeader(s2, m[s2]);
          else if (t2.headers && !function(t3) {
            for (var e3 in t3)
              if (t3.hasOwnProperty(e3))
                return false;
            return true;
          }(t2.headers))
            throw new Error("Headers cannot be set on an XDomainRequest object");
          return "responseType" in t2 && (f.responseType = t2.responseType), "beforeSend" in t2 && "function" == typeof t2.beforeSend && t2.beforeSend(f), f.send(p || null), f;
        }
        t.exports = h, t.exports.default = h, h.XMLHttpRequest = i.XMLHttpRequest || function() {
        }, h.XDomainRequest = "withCredentials" in new h.XMLHttpRequest() ? h.XMLHttpRequest : i.XDomainRequest, function(t2, e2) {
          for (var r2 = 0; r2 < t2.length; r2++)
            e2(t2[r2]);
        }(["get", "put", "post", "patch", "head", "delete"], function(t2) {
          h["delete" === t2 ? "del" : t2] = function(e2, r2, i2) {
            return (r2 = s(e2, r2, i2)).method = t2.toUpperCase(), l(r2);
          };
        });
      }, 1596: (t) => {
        t.exports = void 0 !== self.DOMParser ? function(t2) {
          return new self.DOMParser().parseFromString(t2, "application/xml");
        } : void 0 !== self.ActiveXObject && new self.ActiveXObject("Microsoft.XMLDOM") ? function(t2) {
          var e = new self.ActiveXObject("Microsoft.XMLDOM");
          return e.async = "false", e.loadXML(t2), e;
        } : function(t2) {
          var e = document.createElement("div");
          return e.innerHTML = t2, e;
        };
      }, 1960: (t) => {
        t.exports = function() {
          for (var t2 = {}, r = 0; r < arguments.length; r++) {
            var i = arguments[r];
            for (var n in i)
              e.call(i, n) && (t2[n] = i[n]);
          }
          return t2;
        };
        var e = Object.prototype.hasOwnProperty;
      }, 8522: () => {
      }, 6777: () => {
      }, 5546: () => {
      }, 2460: (t, e, r) => {
        var i = r(4406), n = Object.defineProperty, a = Object.getOwnPropertyDescriptor, o = Object.getOwnPropertyNames, s = Object.prototype.hasOwnProperty, h = (t2, e2) => {
          for (var r2 in e2)
            n(t2, r2, { get: e2[r2], enumerable: true });
        }, l = /* @__PURE__ */ ((t2) => (e2, r2) => t2 && t2.get(e2) || (r2 = ((t3, e3, r3, i2) => {
          if (e3 && "object" == typeof e3 || "function" == typeof e3)
            for (let r4 of o(e3))
              s.call(t3, r4) || n(t3, r4, { get: () => e3[r4], enumerable: !(i2 = a(e3, r4)) || i2.enumerable });
          return t3;
        })(n({}, "__esModule", { value: true }), e2), t2 && t2.set(e2, r2), r2))("undefined" != typeof WeakMap ? /* @__PURE__ */ new WeakMap() : 0), f = (t2, e2, r2) => (((t3, e3, r3) => {
          e3 in t3 ? n(t3, e3, { enumerable: true, configurable: true, writable: true, value: r3 }) : t3[e3] = r3;
        })(t2, "symbol" != typeof e2 ? e2 + "" : e2, r2), r2), u = {};
        h(u, { applyPalette: () => te, applyPaletteSync: () => $t, buildPalette: () => Kt, buildPaletteSync: () => Qt, constants: () => c, conversion: () => b, distance: () => H, image: () => Ct, palette: () => ot, quality: () => Wt, utils: () => ct });
        var c = {};
        h(c, { bt709: () => d });
        var d = {};
        h(d, { Y: () => p, x: () => m, y: () => g });
        var p = ((t2) => (t2[t2.RED = 0.2126] = "RED", t2[t2.GREEN = 0.7152] = "GREEN", t2[t2.BLUE = 0.0722] = "BLUE", t2[t2.WHITE = 1] = "WHITE", t2))(p || {}), m = ((t2) => (t2[t2.RED = 0.64] = "RED", t2[t2.GREEN = 0.3] = "GREEN", t2[t2.BLUE = 0.15] = "BLUE", t2[t2.WHITE = 0.3127] = "WHITE", t2))(m || {}), g = ((t2) => (t2[t2.RED = 0.33] = "RED", t2[t2.GREEN = 0.6] = "GREEN", t2[t2.BLUE = 0.06] = "BLUE", t2[t2.WHITE = 0.329] = "WHITE", t2))(g || {}), b = {};
        function _(t2) {
          return t2 > 0.04045 ? ((t2 + 0.055) / 1.055) ** 2.4 : t2 / 12.92;
        }
        function y(t2, e2, r2) {
          return { x: 0.4124 * (t2 = _(t2 / 255)) + 0.3576 * (e2 = _(e2 / 255)) + 0.1805 * (r2 = _(r2 / 255)), y: 0.2126 * t2 + 0.7152 * e2 + 0.0722 * r2, z: 0.0193 * t2 + 0.1192 * e2 + 0.9505 * r2 };
        }
        h(b, { lab2rgb: () => G, lab2xyz: () => N, rgb2hsl: () => I, rgb2lab: () => L, rgb2xyz: () => y, xyz2lab: () => O, xyz2rgb: () => j });
        var w = {};
        function v(t2) {
          return t2 * (Math.PI / 180);
        }
        function x(t2, e2, r2) {
          let i2 = t2;
          return i2 < e2 && (i2 = e2), i2 < r2 && (i2 = r2), i2;
        }
        function E(t2, e2, r2) {
          let i2 = t2;
          return i2 > e2 && (i2 = e2), i2 > r2 && (i2 = r2), i2;
        }
        function k(t2, e2, r2) {
          return t2 > r2 && (t2 = r2), t2 < e2 && (t2 = e2), 0 | t2;
        }
        function S(t2) {
          return (t2 = Math.round(t2)) > 255 ? t2 = 255 : t2 < 0 && (t2 = 0), t2;
        }
        function M(t2) {
          return t2 > 255 ? t2 = 255 : t2 < 0 && (t2 = 0), t2;
        }
        function A(t2, e2) {
          const r2 = typeof t2[0];
          let i2;
          if ("number" === r2 || "string" === r2) {
            const r3 = /* @__PURE__ */ Object.create(null);
            for (let e3 = 0, i3 = t2.length; e3 < i3; e3++) {
              const i4 = t2[e3];
              r3[i4] || 0 === r3[i4] || (r3[i4] = e3);
            }
            i2 = t2.sort((t3, i3) => e2(t3, i3) || r3[t3] - r3[i3]);
          } else {
            const r3 = t2.slice(0);
            i2 = t2.sort((t3, i3) => e2(t3, i3) || r3.indexOf(t3) - r3.indexOf(i3));
          }
          return i2;
        }
        function I(t2, e2, r2) {
          const i2 = E(t2, e2, r2), n2 = x(t2, e2, r2), a2 = n2 - i2, o2 = (i2 + n2) / 510;
          let s2 = 0;
          o2 > 0 && o2 < 1 && (s2 = a2 / (o2 < 0.5 ? n2 + i2 : 510 - n2 - i2));
          let h2 = 0;
          return a2 > 0 && (h2 = n2 === t2 ? (e2 - r2) / a2 : n2 === e2 ? 2 + (r2 - t2) / a2 : 4 + (t2 - e2) / a2, h2 *= 60, h2 < 0 && (h2 += 360)), { h: h2, s: s2, l: o2 };
        }
        h(w, { degrees2radians: () => v, inRange0to255: () => M, inRange0to255Rounded: () => S, intInRange: () => k, max3: () => x, min3: () => E, stableSort: () => A });
        var B = 0.95047, T = 1, R = 1.08883;
        function P(t2) {
          return t2 > 8856e-6 ? t2 ** (1 / 3) : 7.787 * t2 + 16 / 116;
        }
        function O(t2, e2, r2) {
          if (t2 = P(t2 / B), e2 = P(e2 / T), r2 = P(r2 / R), 116 * e2 - 16 < 0)
            throw new Error("xxx");
          return { L: Math.max(0, 116 * e2 - 16), a: 500 * (t2 - e2), b: 200 * (e2 - r2) };
        }
        function L(t2, e2, r2) {
          const i2 = y(t2, e2, r2);
          return O(i2.x, i2.y, i2.z);
        }
        var C = 0.95047, U = 1, z = 1.08883;
        function D(t2) {
          return t2 > 0.206893034 ? t2 ** 3 : (t2 - 16 / 116) / 7.787;
        }
        function N(t2, e2, r2) {
          const i2 = (t2 + 16) / 116, n2 = i2 - r2 / 200;
          return { x: C * D(e2 / 500 + i2), y: U * D(i2), z: z * D(n2) };
        }
        function F(t2) {
          return t2 > 31308e-7 ? 1.055 * t2 ** (1 / 2.4) - 0.055 : 12.92 * t2;
        }
        function j(t2, e2, r2) {
          const i2 = F(3.2406 * t2 + -1.5372 * e2 + -0.4986 * r2), n2 = F(-0.9689 * t2 + 1.8758 * e2 + 0.0415 * r2), a2 = F(0.0557 * t2 + -0.204 * e2 + 1.057 * r2);
          return { r: S(255 * i2), g: S(255 * n2), b: S(255 * a2) };
        }
        function G(t2, e2, r2) {
          const i2 = N(t2, e2, r2);
          return j(i2.x, i2.y, i2.z);
        }
        var H = {};
        h(H, { AbstractDistanceCalculator: () => W, AbstractEuclidean: () => Q, AbstractManhattan: () => et, CIE94GraphicArts: () => Y, CIE94Textiles: () => Z, CIEDE2000: () => X, CMetric: () => J, Euclidean: () => K, EuclideanBT709: () => $, EuclideanBT709NoAlpha: () => tt, Manhattan: () => rt, ManhattanBT709: () => nt, ManhattanNommyde: () => it, PNGQuant: () => at });
        var W = class {
          constructor() {
            f(this, "_maxDistance"), f(this, "_whitePoint"), this._setDefaults(), this.setWhitePoint(255, 255, 255, 255);
          }
          setWhitePoint(t2, e2, r2, i2) {
            this._whitePoint = { r: t2 > 0 ? 255 / t2 : 0, g: e2 > 0 ? 255 / e2 : 0, b: r2 > 0 ? 255 / r2 : 0, a: i2 > 0 ? 255 / i2 : 0 }, this._maxDistance = this.calculateRaw(t2, e2, r2, i2, 0, 0, 0, 0);
          }
          calculateNormalized(t2, e2) {
            return this.calculateRaw(t2.r, t2.g, t2.b, t2.a, e2.r, e2.g, e2.b, e2.a) / this._maxDistance;
          }
        }, q = class extends W {
          calculateRaw(t2, e2, r2, i2, n2, a2, o2, s2) {
            const h2 = L(M(t2 * this._whitePoint.r), M(e2 * this._whitePoint.g), M(r2 * this._whitePoint.b)), l2 = L(M(n2 * this._whitePoint.r), M(a2 * this._whitePoint.g), M(o2 * this._whitePoint.b)), f2 = h2.L - l2.L, u2 = h2.a - l2.a, c2 = h2.b - l2.b, d2 = Math.sqrt(h2.a * h2.a + h2.b * h2.b), p2 = d2 - Math.sqrt(l2.a * l2.a + l2.b * l2.b);
            let m2 = u2 * u2 + c2 * c2 - p2 * p2;
            m2 = m2 < 0 ? 0 : Math.sqrt(m2);
            const g2 = (s2 - i2) * this._whitePoint.a * this._kA;
            return Math.sqrt((f2 / this._Kl) ** 2 + (p2 / (1 + this._K1 * d2)) ** 2 + (m2 / (1 + this._K2 * d2)) ** 2 + g2 ** 2);
          }
        }, Z = class extends q {
          _setDefaults() {
            this._Kl = 2, this._K1 = 0.048, this._K2 = 0.014, this._kA = 12.5 / 255;
          }
        }, Y = class extends q {
          _setDefaults() {
            this._Kl = 1, this._K1 = 0.045, this._K2 = 0.015, this._kA = 25 / 255;
          }
        }, V = class extends W {
          _setDefaults() {
          }
          static _calculatehp(t2, e2) {
            const r2 = Math.atan2(t2, e2);
            return r2 >= 0 ? r2 : r2 + V._deg360InRad;
          }
          static _calculateRT(t2, e2) {
            const r2 = e2 ** 7, i2 = 2 * Math.sqrt(r2 / (r2 + V._pow25to7)), n2 = V._deg30InRad * Math.exp(-(((t2 - V._deg275InRad) / V._deg25InRad) ** 2));
            return -Math.sin(2 * n2) * i2;
          }
          static _calculateT(t2) {
            return 1 - 0.17 * Math.cos(t2 - V._deg30InRad) + 0.24 * Math.cos(2 * t2) + 0.32 * Math.cos(3 * t2 + V._deg6InRad) - 0.2 * Math.cos(4 * t2 - V._deg63InRad);
          }
          static _calculate_ahp(t2, e2, r2, i2) {
            const n2 = r2 + i2;
            return 0 === t2 ? n2 : e2 <= V._deg180InRad ? n2 / 2 : n2 < V._deg360InRad ? (n2 + V._deg360InRad) / 2 : (n2 - V._deg360InRad) / 2;
          }
          static _calculate_dHp(t2, e2, r2, i2) {
            let n2;
            return n2 = 0 === t2 ? 0 : e2 <= V._deg180InRad ? r2 - i2 : r2 <= i2 ? r2 - i2 + V._deg360InRad : r2 - i2 - V._deg360InRad, 2 * Math.sqrt(t2) * Math.sin(n2 / 2);
          }
          calculateRaw(t2, e2, r2, i2, n2, a2, o2, s2) {
            const h2 = L(M(t2 * this._whitePoint.r), M(e2 * this._whitePoint.g), M(r2 * this._whitePoint.b)), l2 = L(M(n2 * this._whitePoint.r), M(a2 * this._whitePoint.g), M(o2 * this._whitePoint.b)), f2 = (s2 - i2) * this._whitePoint.a * V._kA, u2 = this.calculateRawInLab(h2, l2);
            return Math.sqrt(u2 + f2 * f2);
          }
          calculateRawInLab(t2, e2) {
            const r2 = t2.L, i2 = t2.a, n2 = t2.b, a2 = e2.L, o2 = e2.a, s2 = e2.b, h2 = ((Math.sqrt(i2 * i2 + n2 * n2) + Math.sqrt(o2 * o2 + s2 * s2)) / 2) ** 7, l2 = 0.5 * (1 - Math.sqrt(h2 / (h2 + V._pow25to7))), f2 = (1 + l2) * i2, u2 = (1 + l2) * o2, c2 = Math.sqrt(f2 * f2 + n2 * n2), d2 = Math.sqrt(u2 * u2 + s2 * s2), p2 = c2 * d2, m2 = V._calculatehp(n2, f2), g2 = V._calculatehp(s2, u2), b2 = Math.abs(m2 - g2), _2 = a2 - r2, y2 = d2 - c2, w2 = V._calculate_dHp(p2, b2, g2, m2), v2 = V._calculate_ahp(p2, b2, m2, g2), x2 = (c2 + d2) / 2, E2 = ((r2 + a2) / 2 - 50) ** 2, k2 = y2 / (1 + 0.045 * x2), S2 = w2 / (1 + 0.015 * V._calculateT(v2) * x2);
            return (_2 / (1 + 0.015 * E2 / Math.sqrt(20 + E2))) ** 2 + k2 ** 2 + S2 ** 2 + V._calculateRT(v2, x2) * k2 * S2;
          }
        }, X = V;
        f(X, "_kA", 25 / 255), f(X, "_pow25to7", 25 ** 7), f(X, "_deg360InRad", v(360)), f(X, "_deg180InRad", v(180)), f(X, "_deg30InRad", v(30)), f(X, "_deg6InRad", v(6)), f(X, "_deg63InRad", v(63)), f(X, "_deg275InRad", v(275)), f(X, "_deg25InRad", v(25));
        var J = class extends W {
          calculateRaw(t2, e2, r2, i2, n2, a2, o2, s2) {
            const h2 = (t2 + n2) / 2 * this._whitePoint.r, l2 = (t2 - n2) * this._whitePoint.r, f2 = (e2 - a2) * this._whitePoint.g, u2 = (r2 - o2) * this._whitePoint.b, c2 = ((512 + h2) * l2 * l2 >> 8) + 4 * f2 * f2 + ((767 - h2) * u2 * u2 >> 8), d2 = (s2 - i2) * this._whitePoint.a;
            return Math.sqrt(c2 + d2 * d2);
          }
          _setDefaults() {
          }
        }, Q = class extends W {
          calculateRaw(t2, e2, r2, i2, n2, a2, o2, s2) {
            const h2 = n2 - t2, l2 = a2 - e2, f2 = o2 - r2, u2 = s2 - i2;
            return Math.sqrt(this._kR * h2 * h2 + this._kG * l2 * l2 + this._kB * f2 * f2 + this._kA * u2 * u2);
          }
        }, K = class extends Q {
          _setDefaults() {
            this._kR = 1, this._kG = 1, this._kB = 1, this._kA = 1;
          }
        }, $ = class extends Q {
          _setDefaults() {
            this._kR = 0.2126, this._kG = 0.7152, this._kB = 0.0722, this._kA = 1;
          }
        }, tt = class extends Q {
          _setDefaults() {
            this._kR = 0.2126, this._kG = 0.7152, this._kB = 0.0722, this._kA = 0;
          }
        }, et = class extends W {
          calculateRaw(t2, e2, r2, i2, n2, a2, o2, s2) {
            let h2 = n2 - t2, l2 = a2 - e2, f2 = o2 - r2, u2 = s2 - i2;
            return h2 < 0 && (h2 = 0 - h2), l2 < 0 && (l2 = 0 - l2), f2 < 0 && (f2 = 0 - f2), u2 < 0 && (u2 = 0 - u2), this._kR * h2 + this._kG * l2 + this._kB * f2 + this._kA * u2;
          }
        }, rt = class extends et {
          _setDefaults() {
            this._kR = 1, this._kG = 1, this._kB = 1, this._kA = 1;
          }
        }, it = class extends et {
          _setDefaults() {
            this._kR = 0.4984, this._kG = 0.8625, this._kB = 0.2979, this._kA = 1;
          }
        }, nt = class extends et {
          _setDefaults() {
            this._kR = 0.2126, this._kG = 0.7152, this._kB = 0.0722, this._kA = 1;
          }
        }, at = class extends W {
          calculateRaw(t2, e2, r2, i2, n2, a2, o2, s2) {
            const h2 = (s2 - i2) * this._whitePoint.a;
            return this._colordifferenceCh(t2 * this._whitePoint.r, n2 * this._whitePoint.r, h2) + this._colordifferenceCh(e2 * this._whitePoint.g, a2 * this._whitePoint.g, h2) + this._colordifferenceCh(r2 * this._whitePoint.b, o2 * this._whitePoint.b, h2);
          }
          _colordifferenceCh(t2, e2, r2) {
            const i2 = t2 - e2, n2 = i2 + r2;
            return i2 * i2 + n2 * n2;
          }
          _setDefaults() {
          }
        }, ot = {};
        h(ot, { AbstractPaletteQuantizer: () => st, ColorHistogram: () => kt, NeuQuant: () => yt, NeuQuantFloat: () => xt, RGBQuant: () => Mt, WuColorCube: () => Pt, WuQuant: () => Lt });
        var st = class {
          quantizeSync() {
            for (const t2 of this.quantize())
              if (t2.palette)
                return t2.palette;
            throw new Error("unreachable");
          }
        }, ht = class {
          constructor() {
            f(this, "r"), f(this, "g"), f(this, "b"), f(this, "a"), f(this, "uint32"), f(this, "rgba"), this.uint32 = -1 >>> 0, this.r = this.g = this.b = this.a = 0, this.rgba = new Array(4), this.rgba[0] = 0, this.rgba[1] = 0, this.rgba[2] = 0, this.rgba[3] = 0;
          }
          static createByQuadruplet(t2) {
            const e2 = new ht();
            return e2.r = 0 | t2[0], e2.g = 0 | t2[1], e2.b = 0 | t2[2], e2.a = 0 | t2[3], e2._loadUINT32(), e2._loadQuadruplet(), e2;
          }
          static createByRGBA(t2, e2, r2, i2) {
            const n2 = new ht();
            return n2.r = 0 | t2, n2.g = 0 | e2, n2.b = 0 | r2, n2.a = 0 | i2, n2._loadUINT32(), n2._loadQuadruplet(), n2;
          }
          static createByUint32(t2) {
            const e2 = new ht();
            return e2.uint32 = t2 >>> 0, e2._loadRGBA(), e2._loadQuadruplet(), e2;
          }
          from(t2) {
            this.r = t2.r, this.g = t2.g, this.b = t2.b, this.a = t2.a, this.uint32 = t2.uint32, this.rgba[0] = t2.r, this.rgba[1] = t2.g, this.rgba[2] = t2.b, this.rgba[3] = t2.a;
          }
          getLuminosity(t2) {
            let e2 = this.r, r2 = this.g, i2 = this.b;
            return t2 && (e2 = Math.min(255, 255 - this.a + this.a * e2 / 255), r2 = Math.min(255, 255 - this.a + this.a * r2 / 255), i2 = Math.min(255, 255 - this.a + this.a * i2 / 255)), 0.2126 * e2 + 0.7152 * r2 + 0.0722 * i2;
          }
          _loadUINT32() {
            this.uint32 = (this.a << 24 | this.b << 16 | this.g << 8 | this.r) >>> 0;
          }
          _loadRGBA() {
            this.r = 255 & this.uint32, this.g = this.uint32 >>> 8 & 255, this.b = this.uint32 >>> 16 & 255, this.a = this.uint32 >>> 24 & 255;
          }
          _loadQuadruplet() {
            this.rgba[0] = this.r, this.rgba[1] = this.g, this.rgba[2] = this.b, this.rgba[3] = this.a;
          }
        }, lt = class {
          constructor() {
            f(this, "_pointArray"), f(this, "_width"), f(this, "_height"), this._width = 0, this._height = 0, this._pointArray = [];
          }
          getWidth() {
            return this._width;
          }
          getHeight() {
            return this._height;
          }
          setWidth(t2) {
            this._width = t2;
          }
          setHeight(t2) {
            this._height = t2;
          }
          getPointArray() {
            return this._pointArray;
          }
          clone() {
            const t2 = new lt();
            t2._width = this._width, t2._height = this._height;
            for (let e2 = 0, r2 = this._pointArray.length; e2 < r2; e2++)
              t2._pointArray[e2] = ht.createByUint32(0 | this._pointArray[e2].uint32);
            return t2;
          }
          toUint32Array() {
            const t2 = this._pointArray.length, e2 = new Uint32Array(t2);
            for (let r2 = 0; r2 < t2; r2++)
              e2[r2] = this._pointArray[r2].uint32;
            return e2;
          }
          toUint8Array() {
            return new Uint8Array(this.toUint32Array().buffer);
          }
          static fromHTMLImageElement(t2) {
            const e2 = t2.naturalWidth, r2 = t2.naturalHeight, i2 = document.createElement("canvas");
            return i2.width = e2, i2.height = r2, i2.getContext("2d").drawImage(t2, 0, 0, e2, r2, 0, 0, e2, r2), lt.fromHTMLCanvasElement(i2);
          }
          static fromHTMLCanvasElement(t2) {
            const e2 = t2.width, r2 = t2.height, i2 = t2.getContext("2d").getImageData(0, 0, e2, r2);
            return lt.fromImageData(i2);
          }
          static fromImageData(t2) {
            const e2 = t2.width, r2 = t2.height;
            return lt.fromUint8Array(t2.data, e2, r2);
          }
          static fromUint8Array(t2, e2, r2) {
            switch (Object.prototype.toString.call(t2)) {
              case "[object Uint8ClampedArray]":
              case "[object Uint8Array]":
                break;
              default:
                t2 = new Uint8Array(t2);
            }
            const i2 = new Uint32Array(t2.buffer);
            return lt.fromUint32Array(i2, e2, r2);
          }
          static fromUint32Array(t2, e2, r2) {
            const i2 = new lt();
            i2._width = e2, i2._height = r2;
            for (let e3 = 0, r3 = t2.length; e3 < r3; e3++)
              i2._pointArray[e3] = ht.createByUint32(0 | t2[e3]);
            return i2;
          }
          static fromBuffer(t2, e2, r2) {
            const i2 = new Uint32Array(t2.buffer, t2.byteOffset, t2.byteLength / Uint32Array.BYTES_PER_ELEMENT);
            return lt.fromUint32Array(i2, e2, r2);
          }
        };
        function ft(t2, e2) {
          const r2 = 360 / e2;
          for (let i2 = 1, n2 = r2 - r2 / 2; i2 < e2; i2++, n2 += r2)
            if (t2 >= n2 && t2 < n2 + r2)
              return i2;
          return 0;
        }
        var ut = class {
          constructor() {
            f(this, "_pointContainer"), f(this, "_pointArray", []), f(this, "_i32idx", {}), this._pointContainer = new lt(), this._pointContainer.setHeight(1), this._pointArray = this._pointContainer.getPointArray();
          }
          add(t2) {
            this._pointArray.push(t2), this._pointContainer.setWidth(this._pointArray.length);
          }
          has(t2) {
            for (let e2 = this._pointArray.length - 1; e2 >= 0; e2--)
              if (t2.uint32 === this._pointArray[e2].uint32)
                return true;
            return false;
          }
          getNearestColor(t2, e2) {
            return this._pointArray[0 | this._getNearestIndex(t2, e2)];
          }
          getPointContainer() {
            return this._pointContainer;
          }
          _nearestPointFromCache(t2) {
            return "number" == typeof this._i32idx[t2] ? this._i32idx[t2] : -1;
          }
          _getNearestIndex(t2, e2) {
            let r2 = this._nearestPointFromCache("" + e2.uint32);
            if (r2 >= 0)
              return r2;
            let i2 = Number.MAX_VALUE;
            r2 = 0;
            for (let n2 = 0, a2 = this._pointArray.length; n2 < a2; n2++) {
              const a3 = this._pointArray[n2], o2 = t2.calculateRaw(e2.r, e2.g, e2.b, e2.a, a3.r, a3.g, a3.b, a3.a);
              o2 < i2 && (i2 = o2, r2 = n2);
            }
            return this._i32idx[e2.uint32] = r2, r2;
          }
          sort() {
            this._i32idx = {}, this._pointArray.sort((t2, e2) => {
              const r2 = I(t2.r, t2.g, t2.b), i2 = I(e2.r, e2.g, e2.b), n2 = t2.r === t2.g && t2.g === t2.b ? 0 : 1 + ft(r2.h, 10), a2 = (e2.r === e2.g && e2.g === e2.b ? 0 : 1 + ft(i2.h, 10)) - n2;
              if (a2)
                return -a2;
              const o2 = t2.getLuminosity(true), s2 = e2.getLuminosity(true);
              if (s2 - o2 != 0)
                return s2 - o2;
              const h2 = (100 * i2.s | 0) - (100 * r2.s | 0);
              return h2 ? -h2 : 0;
            });
          }
        }, ct = {};
        h(ct, { HueStatistics: () => pt, Palette: () => ut, Point: () => ht, PointContainer: () => lt, ProgressTracker: () => gt, arithmetic: () => w });
        var dt = class {
          constructor() {
            f(this, "num", 0), f(this, "cols", []);
          }
        }, pt = class {
          constructor(t2, e2) {
            f(this, "_numGroups"), f(this, "_minCols"), f(this, "_stats"), f(this, "_groupsFull"), this._numGroups = t2, this._minCols = e2, this._stats = [];
            for (let e3 = 0; e3 <= t2; e3++)
              this._stats[e3] = new dt();
            this._groupsFull = 0;
          }
          check(t2) {
            this._groupsFull === this._numGroups + 1 && (this.check = () => {
            });
            const e2 = 255 & t2, r2 = t2 >>> 8 & 255, i2 = t2 >>> 16 & 255, n2 = e2 === r2 && r2 === i2 ? 0 : 1 + ft(I(e2, r2, i2).h, this._numGroups), a2 = this._stats[n2], o2 = this._minCols;
            a2.num++, a2.num > o2 || (a2.num === o2 && this._groupsFull++, a2.num <= o2 && this._stats[n2].cols.push(t2));
          }
          injectIntoDictionary(t2) {
            for (let e2 = 0; e2 <= this._numGroups; e2++)
              this._stats[e2].num <= this._minCols && this._stats[e2].cols.forEach((e3) => {
                t2[e3] ? t2[e3]++ : t2[e3] = 1;
              });
          }
          injectIntoArray(t2) {
            for (let e2 = 0; e2 <= this._numGroups; e2++)
              this._stats[e2].num <= this._minCols && this._stats[e2].cols.forEach((e3) => {
                -1 === t2.indexOf(e3) && t2.push(e3);
              });
          }
        }, mt = class {
          constructor(t2, e2) {
            f(this, "progress"), f(this, "_step"), f(this, "_range"), f(this, "_last"), f(this, "_progressRange"), this._range = t2, this._progressRange = e2, this._step = Math.max(1, this._range / (mt.steps + 1) | 0), this._last = -this._step, this.progress = 0;
          }
          shouldNotify(t2) {
            return t2 - this._last >= this._step && (this._last = t2, this.progress = Math.min(this._progressRange * this._last / this._range, this._progressRange), true);
          }
        }, gt = mt;
        f(gt, "steps", 100);
        var bt = class {
          constructor(t2) {
            f(this, "r"), f(this, "g"), f(this, "b"), f(this, "a"), this.r = this.g = this.b = this.a = t2;
          }
          toPoint() {
            return ht.createByRGBA(this.r >> 3, this.g >> 3, this.b >> 3, this.a >> 3);
          }
          subtract(t2, e2, r2, i2) {
            this.r -= 0 | t2, this.g -= 0 | e2, this.b -= 0 | r2, this.a -= 0 | i2;
          }
        }, _t = class extends st {
          constructor(t2, e2 = 256) {
            super(), f(this, "_pointArray"), f(this, "_networkSize"), f(this, "_network"), f(this, "_sampleFactor"), f(this, "_radPower"), f(this, "_freq"), f(this, "_bias"), f(this, "_distance"), this._distance = t2, this._pointArray = [], this._sampleFactor = 1, this._networkSize = e2, this._distance.setWhitePoint(2040, 2040, 2040, 2040);
          }
          sample(t2) {
            this._pointArray = this._pointArray.concat(t2.getPointArray());
          }
          *quantize() {
            this._init(), yield* this._learn(), yield { palette: this._buildPalette(), progress: 100 };
          }
          _init() {
            this._freq = [], this._bias = [], this._radPower = [], this._network = [];
            for (let t2 = 0; t2 < this._networkSize; t2++)
              this._network[t2] = new bt((t2 << 11) / this._networkSize | 0), this._freq[t2] = _t._initialBias / this._networkSize | 0, this._bias[t2] = 0;
          }
          *_learn() {
            let t2 = this._sampleFactor;
            const e2 = this._pointArray.length;
            e2 < _t._minpicturebytes && (t2 = 1);
            const r2 = 30 + (t2 - 1) / 3 | 0, i2 = e2 / t2 | 0;
            let n2, a2 = i2 / _t._nCycles | 0, o2 = _t._initAlpha, s2 = (this._networkSize >> 3) * _t._radiusBias, h2 = s2 >> _t._radiusBiasShift;
            h2 <= 1 && (h2 = 0);
            for (let t3 = 0; t3 < h2; t3++)
              this._radPower[t3] = o2 * ((h2 * h2 - t3 * t3) * _t._radBias / (h2 * h2)) >>> 0;
            n2 = e2 < _t._minpicturebytes ? 1 : e2 % _t._prime1 != 0 ? _t._prime1 : e2 % _t._prime2 != 0 ? _t._prime2 : e2 % _t._prime3 != 0 ? _t._prime3 : _t._prime4;
            const l2 = new gt(i2, 99);
            for (let t3 = 0, f2 = 0; t3 < i2; ) {
              l2.shouldNotify(t3) && (yield { progress: l2.progress });
              const i3 = this._pointArray[f2], u2 = i3.b << 3, c2 = i3.g << 3, d2 = i3.r << 3, p2 = i3.a << 3, m2 = this._contest(u2, c2, d2, p2);
              if (this._alterSingle(o2, m2, u2, c2, d2, p2), 0 !== h2 && this._alterNeighbour(h2, m2, u2, c2, d2, p2), f2 += n2, f2 >= e2 && (f2 -= e2), t3++, 0 === a2 && (a2 = 1), t3 % a2 == 0) {
                o2 -= o2 / r2 | 0, s2 -= s2 / _t._radiusDecrease | 0, h2 = s2 >> _t._radiusBiasShift, h2 <= 1 && (h2 = 0);
                for (let t4 = 0; t4 < h2; t4++)
                  this._radPower[t4] = o2 * ((h2 * h2 - t4 * t4) * _t._radBias / (h2 * h2)) >>> 0;
              }
            }
          }
          _buildPalette() {
            const t2 = new ut();
            return this._network.forEach((e2) => {
              t2.add(e2.toPoint());
            }), t2.sort(), t2;
          }
          _alterNeighbour(t2, e2, r2, i2, n2, a2) {
            let o2 = e2 - t2;
            o2 < -1 && (o2 = -1);
            let s2 = e2 + t2;
            s2 > this._networkSize && (s2 = this._networkSize);
            let h2 = e2 + 1, l2 = e2 - 1, f2 = 1;
            for (; h2 < s2 || l2 > o2; ) {
              const t3 = this._radPower[f2++] / _t._alphaRadBias;
              if (h2 < s2) {
                const e3 = this._network[h2++];
                e3.subtract(t3 * (e3.r - n2), t3 * (e3.g - i2), t3 * (e3.b - r2), t3 * (e3.a - a2));
              }
              if (l2 > o2) {
                const e3 = this._network[l2--];
                e3.subtract(t3 * (e3.r - n2), t3 * (e3.g - i2), t3 * (e3.b - r2), t3 * (e3.a - a2));
              }
            }
          }
          _alterSingle(t2, e2, r2, i2, n2, a2) {
            t2 /= _t._initAlpha;
            const o2 = this._network[e2];
            o2.subtract(t2 * (o2.r - n2), t2 * (o2.g - i2), t2 * (o2.b - r2), t2 * (o2.a - a2));
          }
          _contest(t2, e2, r2, i2) {
            let n2 = ~(1 << 31), a2 = n2, o2 = -1, s2 = o2;
            for (let h2 = 0; h2 < this._networkSize; h2++) {
              const l2 = this._network[h2], f2 = 8160 * this._distance.calculateNormalized(l2, { r: r2, g: e2, b: t2, a: i2 }) | 0;
              f2 < n2 && (n2 = f2, o2 = h2);
              const u2 = f2 - (this._bias[h2] >> _t._initialBiasShift - 3);
              u2 < a2 && (a2 = u2, s2 = h2);
              const c2 = this._freq[h2] >> _t._betaShift;
              this._freq[h2] -= c2, this._bias[h2] += c2 << _t._gammaShift;
            }
            return this._freq[o2] += _t._beta, this._bias[o2] -= _t._betaGamma, s2;
          }
        }, yt = _t;
        f(yt, "_prime1", 499), f(yt, "_prime2", 491), f(yt, "_prime3", 487), f(yt, "_prime4", 503), f(yt, "_minpicturebytes", _t._prime4), f(yt, "_nCycles", 100), f(yt, "_initialBiasShift", 16), f(yt, "_initialBias", 1 << _t._initialBiasShift), f(yt, "_gammaShift", 10), f(yt, "_betaShift", 10), f(yt, "_beta", _t._initialBias >> _t._betaShift), f(yt, "_betaGamma", _t._initialBias << _t._gammaShift - _t._betaShift), f(yt, "_radiusBiasShift", 6), f(yt, "_radiusBias", 1 << _t._radiusBiasShift), f(yt, "_radiusDecrease", 30), f(yt, "_alphaBiasShift", 10), f(yt, "_initAlpha", 1 << _t._alphaBiasShift), f(yt, "_radBiasShift", 8), f(yt, "_radBias", 1 << _t._radBiasShift), f(yt, "_alphaRadBiasShift", _t._alphaBiasShift + _t._radBiasShift), f(yt, "_alphaRadBias", 1 << _t._alphaRadBiasShift);
        var wt = class {
          constructor(t2) {
            f(this, "r"), f(this, "g"), f(this, "b"), f(this, "a"), this.r = this.g = this.b = this.a = t2;
          }
          toPoint() {
            return ht.createByRGBA(this.r >> 3, this.g >> 3, this.b >> 3, this.a >> 3);
          }
          subtract(t2, e2, r2, i2) {
            this.r -= t2, this.g -= e2, this.b -= r2, this.a -= i2;
          }
        }, vt = class extends st {
          constructor(t2, e2 = 256) {
            super(), f(this, "_pointArray"), f(this, "_networkSize"), f(this, "_network"), f(this, "_sampleFactor"), f(this, "_radPower"), f(this, "_freq"), f(this, "_bias"), f(this, "_distance"), this._distance = t2, this._pointArray = [], this._sampleFactor = 1, this._networkSize = e2, this._distance.setWhitePoint(2040, 2040, 2040, 2040);
          }
          sample(t2) {
            this._pointArray = this._pointArray.concat(t2.getPointArray());
          }
          *quantize() {
            this._init(), yield* this._learn(), yield { palette: this._buildPalette(), progress: 100 };
          }
          _init() {
            this._freq = [], this._bias = [], this._radPower = [], this._network = [];
            for (let t2 = 0; t2 < this._networkSize; t2++)
              this._network[t2] = new wt((t2 << 11) / this._networkSize), this._freq[t2] = vt._initialBias / this._networkSize, this._bias[t2] = 0;
          }
          *_learn() {
            let t2 = this._sampleFactor;
            const e2 = this._pointArray.length;
            e2 < vt._minpicturebytes && (t2 = 1);
            const r2 = 30 + (t2 - 1) / 3, i2 = e2 / t2;
            let n2, a2 = i2 / vt._nCycles | 0, o2 = vt._initAlpha, s2 = (this._networkSize >> 3) * vt._radiusBias, h2 = s2 >> vt._radiusBiasShift;
            h2 <= 1 && (h2 = 0);
            for (let t3 = 0; t3 < h2; t3++)
              this._radPower[t3] = o2 * ((h2 * h2 - t3 * t3) * vt._radBias / (h2 * h2));
            n2 = e2 < vt._minpicturebytes ? 1 : e2 % vt._prime1 != 0 ? vt._prime1 : e2 % vt._prime2 != 0 ? vt._prime2 : e2 % vt._prime3 != 0 ? vt._prime3 : vt._prime4;
            const l2 = new gt(i2, 99);
            for (let t3 = 0, f2 = 0; t3 < i2; ) {
              l2.shouldNotify(t3) && (yield { progress: l2.progress });
              const i3 = this._pointArray[f2], u2 = i3.b << 3, c2 = i3.g << 3, d2 = i3.r << 3, p2 = i3.a << 3, m2 = this._contest(u2, c2, d2, p2);
              if (this._alterSingle(o2, m2, u2, c2, d2, p2), 0 !== h2 && this._alterNeighbour(h2, m2, u2, c2, d2, p2), f2 += n2, f2 >= e2 && (f2 -= e2), t3++, 0 === a2 && (a2 = 1), t3 % a2 == 0) {
                o2 -= o2 / r2, s2 -= s2 / vt._radiusDecrease, h2 = s2 >> vt._radiusBiasShift, h2 <= 1 && (h2 = 0);
                for (let t4 = 0; t4 < h2; t4++)
                  this._radPower[t4] = o2 * ((h2 * h2 - t4 * t4) * vt._radBias / (h2 * h2));
              }
            }
          }
          _buildPalette() {
            const t2 = new ut();
            return this._network.forEach((e2) => {
              t2.add(e2.toPoint());
            }), t2.sort(), t2;
          }
          _alterNeighbour(t2, e2, r2, i2, n2, a2) {
            let o2 = e2 - t2;
            o2 < -1 && (o2 = -1);
            let s2 = e2 + t2;
            s2 > this._networkSize && (s2 = this._networkSize);
            let h2 = e2 + 1, l2 = e2 - 1, f2 = 1;
            for (; h2 < s2 || l2 > o2; ) {
              const t3 = this._radPower[f2++] / vt._alphaRadBias;
              if (h2 < s2) {
                const e3 = this._network[h2++];
                e3.subtract(t3 * (e3.r - n2), t3 * (e3.g - i2), t3 * (e3.b - r2), t3 * (e3.a - a2));
              }
              if (l2 > o2) {
                const e3 = this._network[l2--];
                e3.subtract(t3 * (e3.r - n2), t3 * (e3.g - i2), t3 * (e3.b - r2), t3 * (e3.a - a2));
              }
            }
          }
          _alterSingle(t2, e2, r2, i2, n2, a2) {
            t2 /= vt._initAlpha;
            const o2 = this._network[e2];
            o2.subtract(t2 * (o2.r - n2), t2 * (o2.g - i2), t2 * (o2.b - r2), t2 * (o2.a - a2));
          }
          _contest(t2, e2, r2, i2) {
            let n2 = ~(1 << 31), a2 = n2, o2 = -1, s2 = o2;
            for (let h2 = 0; h2 < this._networkSize; h2++) {
              const l2 = this._network[h2], f2 = 8160 * this._distance.calculateNormalized(l2, { r: r2, g: e2, b: t2, a: i2 });
              f2 < n2 && (n2 = f2, o2 = h2);
              const u2 = f2 - (this._bias[h2] >> vt._initialBiasShift - 3);
              u2 < a2 && (a2 = u2, s2 = h2);
              const c2 = this._freq[h2] >> vt._betaShift;
              this._freq[h2] -= c2, this._bias[h2] += c2 << vt._gammaShift;
            }
            return this._freq[o2] += vt._beta, this._bias[o2] -= vt._betaGamma, s2;
          }
        }, xt = vt;
        f(xt, "_prime1", 499), f(xt, "_prime2", 491), f(xt, "_prime3", 487), f(xt, "_prime4", 503), f(xt, "_minpicturebytes", vt._prime4), f(xt, "_nCycles", 100), f(xt, "_initialBiasShift", 16), f(xt, "_initialBias", 1 << vt._initialBiasShift), f(xt, "_gammaShift", 10), f(xt, "_betaShift", 10), f(xt, "_beta", vt._initialBias >> vt._betaShift), f(xt, "_betaGamma", vt._initialBias << vt._gammaShift - vt._betaShift), f(xt, "_radiusBiasShift", 6), f(xt, "_radiusBias", 1 << vt._radiusBiasShift), f(xt, "_radiusDecrease", 30), f(xt, "_alphaBiasShift", 10), f(xt, "_initAlpha", 1 << vt._alphaBiasShift), f(xt, "_radBiasShift", 8), f(xt, "_radBias", 1 << vt._radBiasShift), f(xt, "_alphaRadBiasShift", vt._alphaBiasShift + vt._radBiasShift), f(xt, "_alphaRadBias", 1 << vt._alphaRadBiasShift);
        var Et = class {
          constructor(t2, e2) {
            f(this, "_method"), f(this, "_hueStats"), f(this, "_histogram"), f(this, "_initColors"), f(this, "_minHueCols"), this._method = t2, this._minHueCols = e2 << 2, this._initColors = e2 << 2, this._hueStats = new pt(Et._hueGroups, this._minHueCols), this._histogram = /* @__PURE__ */ Object.create(null);
          }
          sample(t2) {
            switch (this._method) {
              case 1:
                this._colorStats1D(t2);
                break;
              case 2:
                this._colorStats2D(t2);
            }
          }
          getImportanceSortedColorsIDXI32() {
            const t2 = A(Object.keys(this._histogram), (t3, e3) => this._histogram[e3] - this._histogram[t3]);
            if (0 === t2.length)
              return [];
            let e2;
            switch (this._method) {
              case 1:
                const r2 = Math.min(t2.length, this._initColors), i2 = t2[r2 - 1], n2 = this._histogram[i2];
                e2 = t2.slice(0, r2);
                let a2 = r2;
                const o2 = t2.length;
                for (; a2 < o2 && this._histogram[t2[a2]] === n2; )
                  e2.push(t2[a2++]);
                this._hueStats.injectIntoArray(e2);
                break;
              case 2:
                e2 = t2;
                break;
              default:
                throw new Error("Incorrect method");
            }
            return e2.map((t3) => +t3);
          }
          _colorStats1D(t2) {
            const e2 = this._histogram, r2 = t2.getPointArray(), i2 = r2.length;
            for (let t3 = 0; t3 < i2; t3++) {
              const i3 = r2[t3].uint32;
              this._hueStats.check(i3), i3 in e2 ? e2[i3]++ : e2[i3] = 1;
            }
          }
          _colorStats2D(t2) {
            const e2 = t2.getWidth(), r2 = t2.getHeight(), i2 = t2.getPointArray(), n2 = Et._boxSize[0], a2 = Et._boxSize[1], o2 = n2 * a2, s2 = this._makeBoxes(e2, r2, n2, a2), h2 = this._histogram;
            s2.forEach((t3) => {
              let r3 = Math.round(t3.w * t3.h / o2) * Et._boxPixels;
              r3 < 2 && (r3 = 2);
              const n3 = {};
              this._iterateBox(t3, e2, (t4) => {
                const e3 = i2[t4].uint32;
                this._hueStats.check(e3), e3 in h2 ? h2[e3]++ : e3 in n3 ? ++n3[e3] >= r3 && (h2[e3] = n3[e3]) : n3[e3] = 1;
              });
            }), this._hueStats.injectIntoDictionary(h2);
          }
          _iterateBox(t2, e2, r2) {
            const i2 = t2, n2 = i2.y * e2 + i2.x, a2 = (i2.y + i2.h - 1) * e2 + (i2.x + i2.w - 1), o2 = e2 - i2.w + 1;
            let s2 = 0, h2 = n2;
            do {
              r2.call(this, h2), h2 += ++s2 % i2.w == 0 ? o2 : 1;
            } while (h2 <= a2);
          }
          _makeBoxes(t2, e2, r2, i2) {
            const n2 = t2 % r2, a2 = e2 % i2, o2 = t2 - n2, s2 = e2 - a2, h2 = [];
            for (let l2 = 0; l2 < e2; l2 += i2)
              for (let e3 = 0; e3 < t2; e3 += r2)
                h2.push({ x: e3, y: l2, w: e3 === o2 ? n2 : r2, h: l2 === s2 ? a2 : i2 });
            return h2;
          }
        }, kt = Et;
        f(kt, "_boxSize", [64, 64]), f(kt, "_boxPixels", 2), f(kt, "_hueGroups", 10);
        var St = class {
          constructor(t2, e2, r2) {
            f(this, "index"), f(this, "color"), f(this, "distance"), this.index = t2, this.color = e2, this.distance = r2;
          }
        }, Mt = class extends st {
          constructor(t2, e2 = 256, r2 = 2) {
            super(), f(this, "_colors"), f(this, "_initialDistance"), f(this, "_distanceIncrement"), f(this, "_histogram"), f(this, "_distance"), this._distance = t2, this._colors = e2, this._histogram = new kt(r2, e2), this._initialDistance = 0.01, this._distanceIncrement = 5e-3;
          }
          sample(t2) {
            this._histogram.sample(t2);
          }
          *quantize() {
            const t2 = this._histogram.getImportanceSortedColorsIDXI32();
            if (0 === t2.length)
              throw new Error("No colors in image");
            yield* this._buildPalette(t2);
          }
          *_buildPalette(t2) {
            const e2 = new ut(), r2 = e2.getPointContainer().getPointArray(), i2 = new Array(t2.length);
            for (let e3 = 0; e3 < t2.length; e3++)
              r2.push(ht.createByUint32(t2[e3])), i2[e3] = 1;
            const n2 = r2.length, a2 = [];
            let o2 = n2, s2 = this._initialDistance;
            const h2 = new gt(o2 - this._colors, 99);
            for (; o2 > this._colors; ) {
              a2.length = 0;
              for (let t3 = 0; t3 < n2; t3++) {
                if (h2.shouldNotify(n2 - o2) && (yield { progress: h2.progress }), 0 === i2[t3])
                  continue;
                const e3 = r2[t3];
                for (let h3 = t3 + 1; h3 < n2; h3++) {
                  if (0 === i2[h3])
                    continue;
                  const t4 = r2[h3], n3 = this._distance.calculateNormalized(e3, t4);
                  n3 < s2 && (a2.push(new St(h3, t4, n3)), i2[h3] = 0, o2--);
                }
              }
              s2 += o2 > 3 * this._colors ? this._initialDistance : this._distanceIncrement;
            }
            if (o2 < this._colors) {
              A(a2, (t4, e3) => e3.distance - t4.distance);
              let t3 = 0;
              for (; o2 < this._colors && t3 < a2.length; )
                i2[a2[t3].index] = 1, o2++, t3++;
            }
            let l2 = r2.length;
            for (let t3 = l2 - 1; t3 >= 0; t3--)
              0 === i2[t3] && (t3 !== l2 - 1 && (r2[t3] = r2[l2 - 1]), --l2);
            r2.length = l2, e2.sort(), yield { palette: e2, progress: 100 };
          }
        };
        function At(t2) {
          const e2 = [];
          for (let r2 = 0; r2 < t2; r2++)
            e2[r2] = 0;
          return e2;
        }
        function It(t2, e2, r2, i2) {
          const n2 = new Array(t2);
          for (let a2 = 0; a2 < t2; a2++) {
            n2[a2] = new Array(e2);
            for (let t3 = 0; t3 < e2; t3++) {
              n2[a2][t3] = new Array(r2);
              for (let e3 = 0; e3 < r2; e3++) {
                n2[a2][t3][e3] = new Array(i2);
                for (let r3 = 0; r3 < i2; r3++)
                  n2[a2][t3][e3][r3] = 0;
              }
            }
          }
          return n2;
        }
        function Bt(t2, e2, r2) {
          const i2 = new Array(t2);
          for (let n2 = 0; n2 < t2; n2++) {
            i2[n2] = new Array(e2);
            for (let t3 = 0; t3 < e2; t3++) {
              i2[n2][t3] = new Array(r2);
              for (let e3 = 0; e3 < r2; e3++)
                i2[n2][t3][e3] = 0;
            }
          }
          return i2;
        }
        function Tt(t2, e2, r2, i2, n2) {
          for (let a2 = 0; a2 < e2; a2++) {
            t2[a2] = [];
            for (let e3 = 0; e3 < r2; e3++) {
              t2[a2][e3] = [];
              for (let r3 = 0; r3 < i2; r3++)
                t2[a2][e3][r3] = n2;
            }
          }
        }
        function Rt(t2, e2, r2) {
          for (let i2 = 0; i2 < e2; i2++)
            t2[i2] = r2;
        }
        var Pt = class {
          constructor() {
            f(this, "redMinimum"), f(this, "redMaximum"), f(this, "greenMinimum"), f(this, "greenMaximum"), f(this, "blueMinimum"), f(this, "blueMaximum"), f(this, "volume"), f(this, "alphaMinimum"), f(this, "alphaMaximum");
          }
        }, Ot = class extends st {
          constructor(t2, e2 = 256, r2 = 5) {
            super(), f(this, "_reds"), f(this, "_greens"), f(this, "_blues"), f(this, "_alphas"), f(this, "_sums"), f(this, "_weights"), f(this, "_momentsRed"), f(this, "_momentsGreen"), f(this, "_momentsBlue"), f(this, "_momentsAlpha"), f(this, "_moments"), f(this, "_table"), f(this, "_pixels"), f(this, "_cubes"), f(this, "_colors"), f(this, "_significantBitsPerChannel"), f(this, "_maxSideIndex"), f(this, "_alphaMaxSideIndex"), f(this, "_sideSize"), f(this, "_alphaSideSize"), f(this, "_distance"), this._distance = t2, this._setQuality(r2), this._initialize(e2);
          }
          sample(t2) {
            const e2 = t2.getPointArray();
            for (let t3 = 0, r2 = e2.length; t3 < r2; t3++)
              this._addColor(e2[t3]);
            this._pixels = this._pixels.concat(e2);
          }
          *quantize() {
            yield* this._preparePalette();
            const t2 = new ut();
            for (let e2 = 0; e2 < this._colors; e2++)
              if (this._sums[e2] > 0) {
                const r2 = this._sums[e2], i2 = this._reds[e2] / r2, n2 = this._greens[e2] / r2, a2 = this._blues[e2] / r2, o2 = this._alphas[e2] / r2, s2 = ht.createByRGBA(0 | i2, 0 | n2, 0 | a2, 0 | o2);
                t2.add(s2);
              }
            t2.sort(), yield { palette: t2, progress: 100 };
          }
          *_preparePalette() {
            yield* this._calculateMoments();
            let t2 = 0;
            const e2 = At(this._colors);
            for (let r3 = 1; r3 < this._colors; ++r3) {
              this._cut(this._cubes[t2], this._cubes[r3]) ? (e2[t2] = this._cubes[t2].volume > 1 ? this._calculateVariance(this._cubes[t2]) : 0, e2[r3] = this._cubes[r3].volume > 1 ? this._calculateVariance(this._cubes[r3]) : 0) : (e2[t2] = 0, r3--), t2 = 0;
              let i3 = e2[0];
              for (let n3 = 1; n3 <= r3; ++n3)
                e2[n3] > i3 && (i3 = e2[n3], t2 = n3);
              if (i3 <= 0) {
                this._colors = r3 + 1;
                break;
              }
            }
            const r2 = [], i2 = [], n2 = [], a2 = [];
            for (let t3 = 0; t3 < this._colors; ++t3) {
              const e3 = Ot._volume(this._cubes[t3], this._weights);
              e3 > 0 ? (r2[t3] = Ot._volume(this._cubes[t3], this._momentsRed) / e3 | 0, i2[t3] = Ot._volume(this._cubes[t3], this._momentsGreen) / e3 | 0, n2[t3] = Ot._volume(this._cubes[t3], this._momentsBlue) / e3 | 0, a2[t3] = Ot._volume(this._cubes[t3], this._momentsAlpha) / e3 | 0) : (r2[t3] = 0, i2[t3] = 0, n2[t3] = 0, a2[t3] = 0);
            }
            this._reds = At(this._colors + 1), this._greens = At(this._colors + 1), this._blues = At(this._colors + 1), this._alphas = At(this._colors + 1), this._sums = At(this._colors + 1);
            for (let t3 = 0, e3 = this._pixels.length; t3 < e3; t3++) {
              const e4 = this._pixels[t3];
              let o2 = -1, s2 = Number.MAX_VALUE;
              for (let t4 = 0; t4 < this._colors; t4++) {
                const h2 = r2[t4], l2 = i2[t4], f2 = n2[t4], u2 = a2[t4], c2 = this._distance.calculateRaw(h2, l2, f2, u2, e4.r, e4.g, e4.b, e4.a);
                c2 < s2 && (s2 = c2, o2 = t4);
              }
              this._reds[o2] += e4.r, this._greens[o2] += e4.g, this._blues[o2] += e4.b, this._alphas[o2] += e4.a, this._sums[o2]++;
            }
          }
          _addColor(t2) {
            const e2 = 8 - this._significantBitsPerChannel, r2 = 1 + (t2.r >> e2), i2 = 1 + (t2.g >> e2), n2 = 1 + (t2.b >> e2), a2 = 1 + (t2.a >> e2);
            this._weights[a2][r2][i2][n2]++, this._momentsRed[a2][r2][i2][n2] += t2.r, this._momentsGreen[a2][r2][i2][n2] += t2.g, this._momentsBlue[a2][r2][i2][n2] += t2.b, this._momentsAlpha[a2][r2][i2][n2] += t2.a, this._moments[a2][r2][i2][n2] += this._table[t2.r] + this._table[t2.g] + this._table[t2.b] + this._table[t2.a];
          }
          *_calculateMoments() {
            const t2 = [], e2 = [], r2 = [], i2 = [], n2 = [], a2 = [], o2 = Bt(this._sideSize, this._sideSize, this._sideSize), s2 = Bt(this._sideSize, this._sideSize, this._sideSize), h2 = Bt(this._sideSize, this._sideSize, this._sideSize), l2 = Bt(this._sideSize, this._sideSize, this._sideSize), f2 = Bt(this._sideSize, this._sideSize, this._sideSize), u2 = Bt(this._sideSize, this._sideSize, this._sideSize);
            let c2 = 0;
            const d2 = new gt(this._alphaMaxSideIndex * this._maxSideIndex, 99);
            for (let p2 = 1; p2 <= this._alphaMaxSideIndex; ++p2) {
              Tt(o2, this._sideSize, this._sideSize, this._sideSize, 0), Tt(s2, this._sideSize, this._sideSize, this._sideSize, 0), Tt(h2, this._sideSize, this._sideSize, this._sideSize, 0), Tt(l2, this._sideSize, this._sideSize, this._sideSize, 0), Tt(f2, this._sideSize, this._sideSize, this._sideSize, 0), Tt(u2, this._sideSize, this._sideSize, this._sideSize, 0);
              for (let m2 = 1; m2 <= this._maxSideIndex; ++m2, ++c2) {
                d2.shouldNotify(c2) && (yield { progress: d2.progress }), Rt(t2, this._sideSize, 0), Rt(e2, this._sideSize, 0), Rt(r2, this._sideSize, 0), Rt(i2, this._sideSize, 0), Rt(n2, this._sideSize, 0), Rt(a2, this._sideSize, 0);
                for (let c3 = 1; c3 <= this._maxSideIndex; ++c3) {
                  let d3 = 0, g2 = 0, b2 = 0, _2 = 0, y2 = 0, w2 = 0;
                  for (let v2 = 1; v2 <= this._maxSideIndex; ++v2)
                    d3 += this._weights[p2][m2][c3][v2], g2 += this._momentsRed[p2][m2][c3][v2], b2 += this._momentsGreen[p2][m2][c3][v2], _2 += this._momentsBlue[p2][m2][c3][v2], y2 += this._momentsAlpha[p2][m2][c3][v2], w2 += this._moments[p2][m2][c3][v2], t2[v2] += d3, e2[v2] += g2, r2[v2] += b2, i2[v2] += _2, n2[v2] += y2, a2[v2] += w2, o2[m2][c3][v2] = o2[m2 - 1][c3][v2] + t2[v2], s2[m2][c3][v2] = s2[m2 - 1][c3][v2] + e2[v2], h2[m2][c3][v2] = h2[m2 - 1][c3][v2] + r2[v2], l2[m2][c3][v2] = l2[m2 - 1][c3][v2] + i2[v2], f2[m2][c3][v2] = f2[m2 - 1][c3][v2] + n2[v2], u2[m2][c3][v2] = u2[m2 - 1][c3][v2] + a2[v2], this._weights[p2][m2][c3][v2] = this._weights[p2 - 1][m2][c3][v2] + o2[m2][c3][v2], this._momentsRed[p2][m2][c3][v2] = this._momentsRed[p2 - 1][m2][c3][v2] + s2[m2][c3][v2], this._momentsGreen[p2][m2][c3][v2] = this._momentsGreen[p2 - 1][m2][c3][v2] + h2[m2][c3][v2], this._momentsBlue[p2][m2][c3][v2] = this._momentsBlue[p2 - 1][m2][c3][v2] + l2[m2][c3][v2], this._momentsAlpha[p2][m2][c3][v2] = this._momentsAlpha[p2 - 1][m2][c3][v2] + f2[m2][c3][v2], this._moments[p2][m2][c3][v2] = this._moments[p2 - 1][m2][c3][v2] + u2[m2][c3][v2];
                }
              }
            }
          }
          static _volumeFloat(t2, e2) {
            return e2[t2.alphaMaximum][t2.redMaximum][t2.greenMaximum][t2.blueMaximum] - e2[t2.alphaMaximum][t2.redMaximum][t2.greenMinimum][t2.blueMaximum] - e2[t2.alphaMaximum][t2.redMinimum][t2.greenMaximum][t2.blueMaximum] + e2[t2.alphaMaximum][t2.redMinimum][t2.greenMinimum][t2.blueMaximum] - e2[t2.alphaMinimum][t2.redMaximum][t2.greenMaximum][t2.blueMaximum] + e2[t2.alphaMinimum][t2.redMaximum][t2.greenMinimum][t2.blueMaximum] + e2[t2.alphaMinimum][t2.redMinimum][t2.greenMaximum][t2.blueMaximum] - e2[t2.alphaMinimum][t2.redMinimum][t2.greenMinimum][t2.blueMaximum] - (e2[t2.alphaMaximum][t2.redMaximum][t2.greenMaximum][t2.blueMinimum] - e2[t2.alphaMinimum][t2.redMaximum][t2.greenMaximum][t2.blueMinimum] - e2[t2.alphaMaximum][t2.redMaximum][t2.greenMinimum][t2.blueMinimum] + e2[t2.alphaMinimum][t2.redMaximum][t2.greenMinimum][t2.blueMinimum] - e2[t2.alphaMaximum][t2.redMinimum][t2.greenMaximum][t2.blueMinimum] + e2[t2.alphaMinimum][t2.redMinimum][t2.greenMaximum][t2.blueMinimum] + e2[t2.alphaMaximum][t2.redMinimum][t2.greenMinimum][t2.blueMinimum] - e2[t2.alphaMinimum][t2.redMinimum][t2.greenMinimum][t2.blueMinimum]);
          }
          static _volume(t2, e2) {
            return 0 | Ot._volumeFloat(t2, e2);
          }
          static _top(t2, e2, r2, i2) {
            let n2;
            switch (e2) {
              case Ot._alpha:
                n2 = i2[r2][t2.redMaximum][t2.greenMaximum][t2.blueMaximum] - i2[r2][t2.redMaximum][t2.greenMinimum][t2.blueMaximum] - i2[r2][t2.redMinimum][t2.greenMaximum][t2.blueMaximum] + i2[r2][t2.redMinimum][t2.greenMinimum][t2.blueMaximum] - (i2[r2][t2.redMaximum][t2.greenMaximum][t2.blueMinimum] - i2[r2][t2.redMaximum][t2.greenMinimum][t2.blueMinimum] - i2[r2][t2.redMinimum][t2.greenMaximum][t2.blueMinimum] + i2[r2][t2.redMinimum][t2.greenMinimum][t2.blueMinimum]);
                break;
              case Ot._red:
                n2 = i2[t2.alphaMaximum][r2][t2.greenMaximum][t2.blueMaximum] - i2[t2.alphaMaximum][r2][t2.greenMinimum][t2.blueMaximum] - i2[t2.alphaMinimum][r2][t2.greenMaximum][t2.blueMaximum] + i2[t2.alphaMinimum][r2][t2.greenMinimum][t2.blueMaximum] - (i2[t2.alphaMaximum][r2][t2.greenMaximum][t2.blueMinimum] - i2[t2.alphaMaximum][r2][t2.greenMinimum][t2.blueMinimum] - i2[t2.alphaMinimum][r2][t2.greenMaximum][t2.blueMinimum] + i2[t2.alphaMinimum][r2][t2.greenMinimum][t2.blueMinimum]);
                break;
              case Ot._green:
                n2 = i2[t2.alphaMaximum][t2.redMaximum][r2][t2.blueMaximum] - i2[t2.alphaMaximum][t2.redMinimum][r2][t2.blueMaximum] - i2[t2.alphaMinimum][t2.redMaximum][r2][t2.blueMaximum] + i2[t2.alphaMinimum][t2.redMinimum][r2][t2.blueMaximum] - (i2[t2.alphaMaximum][t2.redMaximum][r2][t2.blueMinimum] - i2[t2.alphaMaximum][t2.redMinimum][r2][t2.blueMinimum] - i2[t2.alphaMinimum][t2.redMaximum][r2][t2.blueMinimum] + i2[t2.alphaMinimum][t2.redMinimum][r2][t2.blueMinimum]);
                break;
              case Ot._blue:
                n2 = i2[t2.alphaMaximum][t2.redMaximum][t2.greenMaximum][r2] - i2[t2.alphaMaximum][t2.redMaximum][t2.greenMinimum][r2] - i2[t2.alphaMaximum][t2.redMinimum][t2.greenMaximum][r2] + i2[t2.alphaMaximum][t2.redMinimum][t2.greenMinimum][r2] - (i2[t2.alphaMinimum][t2.redMaximum][t2.greenMaximum][r2] - i2[t2.alphaMinimum][t2.redMaximum][t2.greenMinimum][r2] - i2[t2.alphaMinimum][t2.redMinimum][t2.greenMaximum][r2] + i2[t2.alphaMinimum][t2.redMinimum][t2.greenMinimum][r2]);
                break;
              default:
                throw new Error("impossible");
            }
            return 0 | n2;
          }
          static _bottom(t2, e2, r2) {
            switch (e2) {
              case Ot._alpha:
                return -r2[t2.alphaMinimum][t2.redMaximum][t2.greenMaximum][t2.blueMaximum] + r2[t2.alphaMinimum][t2.redMaximum][t2.greenMinimum][t2.blueMaximum] + r2[t2.alphaMinimum][t2.redMinimum][t2.greenMaximum][t2.blueMaximum] - r2[t2.alphaMinimum][t2.redMinimum][t2.greenMinimum][t2.blueMaximum] - (-r2[t2.alphaMinimum][t2.redMaximum][t2.greenMaximum][t2.blueMinimum] + r2[t2.alphaMinimum][t2.redMaximum][t2.greenMinimum][t2.blueMinimum] + r2[t2.alphaMinimum][t2.redMinimum][t2.greenMaximum][t2.blueMinimum] - r2[t2.alphaMinimum][t2.redMinimum][t2.greenMinimum][t2.blueMinimum]);
              case Ot._red:
                return -r2[t2.alphaMaximum][t2.redMinimum][t2.greenMaximum][t2.blueMaximum] + r2[t2.alphaMaximum][t2.redMinimum][t2.greenMinimum][t2.blueMaximum] + r2[t2.alphaMinimum][t2.redMinimum][t2.greenMaximum][t2.blueMaximum] - r2[t2.alphaMinimum][t2.redMinimum][t2.greenMinimum][t2.blueMaximum] - (-r2[t2.alphaMaximum][t2.redMinimum][t2.greenMaximum][t2.blueMinimum] + r2[t2.alphaMaximum][t2.redMinimum][t2.greenMinimum][t2.blueMinimum] + r2[t2.alphaMinimum][t2.redMinimum][t2.greenMaximum][t2.blueMinimum] - r2[t2.alphaMinimum][t2.redMinimum][t2.greenMinimum][t2.blueMinimum]);
              case Ot._green:
                return -r2[t2.alphaMaximum][t2.redMaximum][t2.greenMinimum][t2.blueMaximum] + r2[t2.alphaMaximum][t2.redMinimum][t2.greenMinimum][t2.blueMaximum] + r2[t2.alphaMinimum][t2.redMaximum][t2.greenMinimum][t2.blueMaximum] - r2[t2.alphaMinimum][t2.redMinimum][t2.greenMinimum][t2.blueMaximum] - (-r2[t2.alphaMaximum][t2.redMaximum][t2.greenMinimum][t2.blueMinimum] + r2[t2.alphaMaximum][t2.redMinimum][t2.greenMinimum][t2.blueMinimum] + r2[t2.alphaMinimum][t2.redMaximum][t2.greenMinimum][t2.blueMinimum] - r2[t2.alphaMinimum][t2.redMinimum][t2.greenMinimum][t2.blueMinimum]);
              case Ot._blue:
                return -r2[t2.alphaMaximum][t2.redMaximum][t2.greenMaximum][t2.blueMinimum] + r2[t2.alphaMaximum][t2.redMaximum][t2.greenMinimum][t2.blueMinimum] + r2[t2.alphaMaximum][t2.redMinimum][t2.greenMaximum][t2.blueMinimum] - r2[t2.alphaMaximum][t2.redMinimum][t2.greenMinimum][t2.blueMinimum] - (-r2[t2.alphaMinimum][t2.redMaximum][t2.greenMaximum][t2.blueMinimum] + r2[t2.alphaMinimum][t2.redMaximum][t2.greenMinimum][t2.blueMinimum] + r2[t2.alphaMinimum][t2.redMinimum][t2.greenMaximum][t2.blueMinimum] - r2[t2.alphaMinimum][t2.redMinimum][t2.greenMinimum][t2.blueMinimum]);
              default:
                return 0;
            }
          }
          _calculateVariance(t2) {
            const e2 = Ot._volume(t2, this._momentsRed), r2 = Ot._volume(t2, this._momentsGreen), i2 = Ot._volume(t2, this._momentsBlue), n2 = Ot._volume(t2, this._momentsAlpha);
            return Ot._volumeFloat(t2, this._moments) - (e2 * e2 + r2 * r2 + i2 * i2 + n2 * n2) / Ot._volume(t2, this._weights);
          }
          _maximize(t2, e2, r2, i2, n2, a2, o2, s2, h2) {
            const l2 = 0 | Ot._bottom(t2, e2, this._momentsRed), f2 = 0 | Ot._bottom(t2, e2, this._momentsGreen), u2 = 0 | Ot._bottom(t2, e2, this._momentsBlue), c2 = 0 | Ot._bottom(t2, e2, this._momentsAlpha), d2 = 0 | Ot._bottom(t2, e2, this._weights);
            let p2 = 0, m2 = -1;
            for (let g2 = r2; g2 < i2; ++g2) {
              let r3 = l2 + Ot._top(t2, e2, g2, this._momentsRed), i3 = f2 + Ot._top(t2, e2, g2, this._momentsGreen), b2 = u2 + Ot._top(t2, e2, g2, this._momentsBlue), _2 = c2 + Ot._top(t2, e2, g2, this._momentsAlpha), y2 = d2 + Ot._top(t2, e2, g2, this._weights);
              if (0 !== y2) {
                let t3 = r3 * r3 + i3 * i3 + b2 * b2 + _2 * _2, e3 = t3 / y2;
                r3 = n2 - r3, i3 = a2 - i3, b2 = o2 - b2, _2 = s2 - _2, y2 = h2 - y2, 0 !== y2 && (t3 = r3 * r3 + i3 * i3 + b2 * b2 + _2 * _2, e3 += t3 / y2, e3 > p2 && (p2 = e3, m2 = g2));
              }
            }
            return { max: p2, position: m2 };
          }
          _cut(t2, e2) {
            let r2;
            const i2 = Ot._volume(t2, this._momentsRed), n2 = Ot._volume(t2, this._momentsGreen), a2 = Ot._volume(t2, this._momentsBlue), o2 = Ot._volume(t2, this._momentsAlpha), s2 = Ot._volume(t2, this._weights), h2 = this._maximize(t2, Ot._red, t2.redMinimum + 1, t2.redMaximum, i2, n2, a2, o2, s2), l2 = this._maximize(t2, Ot._green, t2.greenMinimum + 1, t2.greenMaximum, i2, n2, a2, o2, s2), f2 = this._maximize(t2, Ot._blue, t2.blueMinimum + 1, t2.blueMaximum, i2, n2, a2, o2, s2), u2 = this._maximize(t2, Ot._alpha, t2.alphaMinimum + 1, t2.alphaMaximum, i2, n2, a2, o2, s2);
            if (u2.max >= h2.max && u2.max >= l2.max && u2.max >= f2.max) {
              if (r2 = Ot._alpha, u2.position < 0)
                return false;
            } else
              r2 = h2.max >= u2.max && h2.max >= l2.max && h2.max >= f2.max ? Ot._red : l2.max >= u2.max && l2.max >= h2.max && l2.max >= f2.max ? Ot._green : Ot._blue;
            switch (e2.redMaximum = t2.redMaximum, e2.greenMaximum = t2.greenMaximum, e2.blueMaximum = t2.blueMaximum, e2.alphaMaximum = t2.alphaMaximum, r2) {
              case Ot._red:
                e2.redMinimum = t2.redMaximum = h2.position, e2.greenMinimum = t2.greenMinimum, e2.blueMinimum = t2.blueMinimum, e2.alphaMinimum = t2.alphaMinimum;
                break;
              case Ot._green:
                e2.greenMinimum = t2.greenMaximum = l2.position, e2.redMinimum = t2.redMinimum, e2.blueMinimum = t2.blueMinimum, e2.alphaMinimum = t2.alphaMinimum;
                break;
              case Ot._blue:
                e2.blueMinimum = t2.blueMaximum = f2.position, e2.redMinimum = t2.redMinimum, e2.greenMinimum = t2.greenMinimum, e2.alphaMinimum = t2.alphaMinimum;
                break;
              case Ot._alpha:
                e2.alphaMinimum = t2.alphaMaximum = u2.position, e2.blueMinimum = t2.blueMinimum, e2.redMinimum = t2.redMinimum, e2.greenMinimum = t2.greenMinimum;
            }
            return t2.volume = (t2.redMaximum - t2.redMinimum) * (t2.greenMaximum - t2.greenMinimum) * (t2.blueMaximum - t2.blueMinimum) * (t2.alphaMaximum - t2.alphaMinimum), e2.volume = (e2.redMaximum - e2.redMinimum) * (e2.greenMaximum - e2.greenMinimum) * (e2.blueMaximum - e2.blueMinimum) * (e2.alphaMaximum - e2.alphaMinimum), true;
          }
          _initialize(t2) {
            this._colors = t2, this._cubes = [];
            for (let e2 = 0; e2 < t2; e2++)
              this._cubes[e2] = new Pt();
            this._cubes[0].redMinimum = 0, this._cubes[0].greenMinimum = 0, this._cubes[0].blueMinimum = 0, this._cubes[0].alphaMinimum = 0, this._cubes[0].redMaximum = this._maxSideIndex, this._cubes[0].greenMaximum = this._maxSideIndex, this._cubes[0].blueMaximum = this._maxSideIndex, this._cubes[0].alphaMaximum = this._alphaMaxSideIndex, this._weights = It(this._alphaSideSize, this._sideSize, this._sideSize, this._sideSize), this._momentsRed = It(this._alphaSideSize, this._sideSize, this._sideSize, this._sideSize), this._momentsGreen = It(this._alphaSideSize, this._sideSize, this._sideSize, this._sideSize), this._momentsBlue = It(this._alphaSideSize, this._sideSize, this._sideSize, this._sideSize), this._momentsAlpha = It(this._alphaSideSize, this._sideSize, this._sideSize, this._sideSize), this._moments = It(this._alphaSideSize, this._sideSize, this._sideSize, this._sideSize), this._table = [];
            for (let t3 = 0; t3 < 256; ++t3)
              this._table[t3] = t3 * t3;
            this._pixels = [];
          }
          _setQuality(t2 = 5) {
            this._significantBitsPerChannel = t2, this._maxSideIndex = 1 << this._significantBitsPerChannel, this._alphaMaxSideIndex = this._maxSideIndex, this._sideSize = this._maxSideIndex + 1, this._alphaSideSize = this._alphaMaxSideIndex + 1;
          }
        }, Lt = Ot;
        f(Lt, "_alpha", 3), f(Lt, "_red", 2), f(Lt, "_green", 1), f(Lt, "_blue", 0);
        var Ct = {};
        h(Ct, { AbstractImageQuantizer: () => Ut, ErrorDiffusionArray: () => Nt, ErrorDiffusionArrayKernel: () => Dt, ErrorDiffusionRiemersma: () => Ht, NearestColor: () => zt });
        var Ut = class {
          quantizeSync(t2, e2) {
            for (const r2 of this.quantize(t2, e2))
              if (r2.pointContainer)
                return r2.pointContainer;
            throw new Error("unreachable");
          }
        }, zt = class extends Ut {
          constructor(t2) {
            super(), f(this, "_distance"), this._distance = t2;
          }
          *quantize(t2, e2) {
            const r2 = t2.getPointArray(), i2 = t2.getWidth(), n2 = t2.getHeight(), a2 = new gt(n2, 99);
            for (let t3 = 0; t3 < n2; t3++) {
              a2.shouldNotify(t3) && (yield { progress: a2.progress });
              for (let n3 = 0, a3 = t3 * i2; n3 < i2; n3++, a3++) {
                const t4 = r2[a3];
                t4.from(e2.getNearestColor(this._distance, t4));
              }
            }
            yield { pointContainer: t2, progress: 100 };
          }
        }, Dt = ((t2) => (t2[t2.FloydSteinberg = 0] = "FloydSteinberg", t2[t2.FalseFloydSteinberg = 1] = "FalseFloydSteinberg", t2[t2.Stucki = 2] = "Stucki", t2[t2.Atkinson = 3] = "Atkinson", t2[t2.Jarvis = 4] = "Jarvis", t2[t2.Burkes = 5] = "Burkes", t2[t2.Sierra = 6] = "Sierra", t2[t2.TwoSierra = 7] = "TwoSierra", t2[t2.SierraLite = 8] = "SierraLite", t2))(Dt || {}), Nt = class extends Ut {
          constructor(t2, e2, r2 = true, i2 = 0, n2 = false) {
            super(), f(this, "_minColorDistance"), f(this, "_serpentine"), f(this, "_kernel"), f(this, "_calculateErrorLikeGIMP"), f(this, "_distance"), this._setKernel(e2), this._distance = t2, this._minColorDistance = i2, this._serpentine = r2, this._calculateErrorLikeGIMP = n2;
          }
          *quantize(t2, e2) {
            const r2 = t2.getPointArray(), i2 = new ht(), n2 = t2.getWidth(), a2 = t2.getHeight(), o2 = [];
            let s2 = 1, h2 = 1;
            for (const t3 of this._kernel) {
              const e3 = t3[2] + 1;
              h2 < e3 && (h2 = e3);
            }
            for (let t3 = 0; t3 < h2; t3++)
              this._fillErrorLine(o2[t3] = [], n2);
            const l2 = new gt(a2, 99);
            for (let t3 = 0; t3 < a2; t3++) {
              l2.shouldNotify(t3) && (yield { progress: l2.progress }), this._serpentine && (s2 *= -1);
              const h3 = t3 * n2, f2 = 1 === s2 ? 0 : n2 - 1, u2 = 1 === s2 ? n2 : -1;
              this._fillErrorLine(o2[0], n2), o2.push(o2.shift());
              const c2 = o2[0];
              for (let l3 = f2, d2 = h3 + f2; l3 !== u2; l3 += s2, d2 += s2) {
                const h4 = r2[d2], f3 = c2[l3];
                i2.from(h4);
                const u3 = ht.createByRGBA(S(h4.r + f3[0]), S(h4.g + f3[1]), S(h4.b + f3[2]), S(h4.a + f3[3])), p2 = e2.getNearestColor(this._distance, u3);
                if (h4.from(p2), this._minColorDistance && this._distance.calculateNormalized(i2, p2) < this._minColorDistance)
                  continue;
                let m2, g2, b2, _2;
                this._calculateErrorLikeGIMP ? (m2 = u3.r - p2.r, g2 = u3.g - p2.g, b2 = u3.b - p2.b, _2 = u3.a - p2.a) : (m2 = i2.r - p2.r, g2 = i2.g - p2.g, b2 = i2.b - p2.b, _2 = i2.a - p2.a);
                const y2 = 1 === s2 ? 0 : this._kernel.length - 1, w2 = 1 === s2 ? this._kernel.length : -1;
                for (let e3 = y2; e3 !== w2; e3 += s2) {
                  const r3 = this._kernel[e3][1] * s2, i3 = this._kernel[e3][2];
                  if (r3 + l3 >= 0 && r3 + l3 < n2 && i3 + t3 >= 0 && i3 + t3 < a2) {
                    const t4 = this._kernel[e3][0], n3 = o2[i3][r3 + l3];
                    n3[0] += m2 * t4, n3[1] += g2 * t4, n3[2] += b2 * t4, n3[3] += _2 * t4;
                  }
                }
              }
            }
            yield { pointContainer: t2, progress: 100 };
          }
          _fillErrorLine(t2, e2) {
            t2.length > e2 && (t2.length = e2);
            const r2 = t2.length;
            for (let e3 = 0; e3 < r2; e3++) {
              const r3 = t2[e3];
              r3[0] = r3[1] = r3[2] = r3[3] = 0;
            }
            for (let i2 = r2; i2 < e2; i2++)
              t2[i2] = [0, 0, 0, 0];
          }
          _setKernel(t2) {
            switch (t2) {
              case 0:
                this._kernel = [[7 / 16, 1, 0], [3 / 16, -1, 1], [5 / 16, 0, 1], [1 / 16, 1, 1]];
                break;
              case 1:
                this._kernel = [[3 / 8, 1, 0], [3 / 8, 0, 1], [2 / 8, 1, 1]];
                break;
              case 2:
                this._kernel = [[8 / 42, 1, 0], [4 / 42, 2, 0], [2 / 42, -2, 1], [4 / 42, -1, 1], [8 / 42, 0, 1], [4 / 42, 1, 1], [2 / 42, 2, 1], [1 / 42, -2, 2], [2 / 42, -1, 2], [4 / 42, 0, 2], [2 / 42, 1, 2], [1 / 42, 2, 2]];
                break;
              case 3:
                this._kernel = [[1 / 8, 1, 0], [1 / 8, 2, 0], [1 / 8, -1, 1], [1 / 8, 0, 1], [1 / 8, 1, 1], [1 / 8, 0, 2]];
                break;
              case 4:
                this._kernel = [[7 / 48, 1, 0], [5 / 48, 2, 0], [3 / 48, -2, 1], [5 / 48, -1, 1], [7 / 48, 0, 1], [5 / 48, 1, 1], [3 / 48, 2, 1], [1 / 48, -2, 2], [3 / 48, -1, 2], [5 / 48, 0, 2], [3 / 48, 1, 2], [1 / 48, 2, 2]];
                break;
              case 5:
                this._kernel = [[0.25, 1, 0], [4 / 32, 2, 0], [2 / 32, -2, 1], [4 / 32, -1, 1], [0.25, 0, 1], [4 / 32, 1, 1], [2 / 32, 2, 1]];
                break;
              case 6:
                this._kernel = [[5 / 32, 1, 0], [3 / 32, 2, 0], [2 / 32, -2, 1], [4 / 32, -1, 1], [5 / 32, 0, 1], [4 / 32, 1, 1], [2 / 32, 2, 1], [2 / 32, -1, 2], [3 / 32, 0, 2], [2 / 32, 1, 2]];
                break;
              case 7:
                this._kernel = [[0.25, 1, 0], [3 / 16, 2, 0], [1 / 16, -2, 1], [2 / 16, -1, 1], [3 / 16, 0, 1], [2 / 16, 1, 1], [1 / 16, 2, 1]];
                break;
              case 8:
                this._kernel = [[0.5, 1, 0], [1 / 4, -1, 1], [1 / 4, 0, 1]];
                break;
              default:
                throw new Error(`ErrorDiffusionArray: unknown kernel = ${t2}`);
            }
          }
        };
        function* Ft(t2, e2, r2) {
          const i2 = Math.max(t2, e2), n2 = { width: t2, height: e2, level: Math.floor(Math.log(i2) / Math.log(2) + 1), callback: r2, tracker: new gt(t2 * e2, 99), index: 0, x: 0, y: 0 };
          yield* jt(n2, 1), Gt(n2, 0);
        }
        function* jt(t2, e2) {
          if (!(t2.level < 1)) {
            switch (t2.tracker.shouldNotify(t2.index) && (yield { progress: t2.tracker.progress }), t2.level--, e2) {
              case 2:
                yield* jt(t2, 1), Gt(t2, 3), yield* jt(t2, 2), Gt(t2, 4), yield* jt(t2, 2), Gt(t2, 2), yield* jt(t2, 4);
                break;
              case 3:
                yield* jt(t2, 4), Gt(t2, 2), yield* jt(t2, 3), Gt(t2, 1), yield* jt(t2, 3), Gt(t2, 3), yield* jt(t2, 1);
                break;
              case 1:
                yield* jt(t2, 2), Gt(t2, 4), yield* jt(t2, 1), Gt(t2, 3), yield* jt(t2, 1), Gt(t2, 1), yield* jt(t2, 3);
                break;
              case 4:
                yield* jt(t2, 3), Gt(t2, 1), yield* jt(t2, 4), Gt(t2, 2), yield* jt(t2, 4), Gt(t2, 4), yield* jt(t2, 2);
            }
            t2.level++;
          }
        }
        function Gt(t2, e2) {
          switch (t2.x >= 0 && t2.x < t2.width && t2.y >= 0 && t2.y < t2.height && (t2.callback(t2.x, t2.y), t2.index++), e2) {
            case 2:
              t2.x--;
              break;
            case 3:
              t2.x++;
              break;
            case 1:
              t2.y--;
              break;
            case 4:
              t2.y++;
          }
        }
        var Ht = class extends Ut {
          constructor(t2, e2 = 16, r2 = 1) {
            super(), f(this, "_distance"), f(this, "_weights"), f(this, "_errorQueueSize"), this._distance = t2, this._errorQueueSize = e2, this._weights = Ht._createWeights(r2, e2);
          }
          *quantize(t2, e2) {
            const r2 = t2.getPointArray(), i2 = t2.getWidth(), n2 = t2.getHeight(), a2 = [];
            let o2 = 0;
            for (let t3 = 0; t3 < this._errorQueueSize; t3++)
              a2[t3] = { r: 0, g: 0, b: 0, a: 0 };
            yield* Ft(i2, n2, (t3, n3) => {
              const s2 = r2[t3 + n3 * i2];
              let { r: h2, g: l2, b: f2, a: u2 } = s2;
              for (let t4 = 0; t4 < this._errorQueueSize; t4++) {
                const e3 = this._weights[t4], r3 = a2[(t4 + o2) % this._errorQueueSize];
                h2 += r3.r * e3, l2 += r3.g * e3, f2 += r3.b * e3, u2 += r3.a * e3;
              }
              const c2 = ht.createByRGBA(S(h2), S(l2), S(f2), S(u2)), d2 = e2.getNearestColor(this._distance, c2);
              o2 = (o2 + 1) % this._errorQueueSize;
              const p2 = (o2 + this._errorQueueSize - 1) % this._errorQueueSize;
              a2[p2].r = s2.r - d2.r, a2[p2].g = s2.g - d2.g, a2[p2].b = s2.b - d2.b, a2[p2].a = s2.a - d2.a, s2.from(d2);
            }), yield { pointContainer: t2, progress: 100 };
          }
          static _createWeights(t2, e2) {
            const r2 = [], i2 = Math.exp(Math.log(e2) / (e2 - 1));
            for (let n2 = 0, a2 = 1; n2 < e2; n2++)
              r2[n2] = (a2 + 0.5 | 0) / e2 * t2, a2 *= i2;
            return r2;
          }
        }, Wt = {};
        h(Wt, { ssim: () => Yt });
        var qt = 0.01, Zt = 0.03;
        function Yt(t2, e2) {
          if (t2.getHeight() !== e2.getHeight() || t2.getWidth() !== e2.getWidth())
            throw new Error("Images have different sizes!");
          const r2 = (255 * qt) ** 2, i2 = (255 * Zt) ** 2;
          let n2 = 0, a2 = 0;
          return function(t3, e3, r3) {
            const i3 = t3.getWidth(), n3 = t3.getHeight();
            for (let a3 = 0; a3 < n3; a3 += 8)
              for (let o2 = 0; o2 < i3; o2 += 8) {
                const s2 = Math.min(8, i3 - o2), h2 = Math.min(8, n3 - a3), l2 = Vt(t3, o2, a3, s2, h2), f2 = Vt(e3, o2, a3, s2, h2);
                r3(l2, f2, Xt(l2), Xt(f2));
              }
          }(t2, e2, (t3, e3, o2, s2) => {
            let h2 = 0, l2 = 0, f2 = 0;
            for (let r3 = 0; r3 < t3.length; r3++)
              l2 += (t3[r3] - o2) ** 2, f2 += (e3[r3] - s2) ** 2, h2 += (t3[r3] - o2) * (e3[r3] - s2);
            const u2 = t3.length - 1;
            l2 /= u2, f2 /= u2, h2 /= u2, a2 += (2 * o2 * s2 + r2) * (2 * h2 + i2) / ((o2 ** 2 + s2 ** 2 + r2) * (l2 + f2 + i2)), n2++;
          }), a2 / n2;
        }
        function Vt(t2, e2, r2, i2, n2) {
          const a2 = t2.getPointArray(), o2 = [];
          let s2 = 0;
          for (let h2 = r2; h2 < r2 + n2; h2++) {
            const r3 = h2 * t2.getWidth();
            for (let t3 = e2; t3 < e2 + i2; t3++) {
              const e3 = a2[r3 + t3];
              o2[s2] = 0.2126 * e3.r + 0.7152 * e3.g + 0.0722 * e3.b, s2++;
            }
          }
          return o2;
        }
        function Xt(t2) {
          let e2 = 0;
          for (const r2 of t2)
            e2 += r2;
          return e2 / t2.length;
        }
        var Jt = "function" == typeof setImmediate ? setImmediate : void 0 !== i && "function" == typeof (null == i ? void 0 : i.nextTick) ? (t2) => i.nextTick(t2) : (t2) => setTimeout(t2, 0);
        function Qt(t2, { colorDistanceFormula: e2, paletteQuantization: r2, colors: i2 } = {}) {
          const n2 = ie(ee(e2), r2, i2);
          return t2.forEach((t3) => n2.sample(t3)), n2.quantizeSync();
        }
        async function Kt(t2, { colorDistanceFormula: e2, paletteQuantization: r2, colors: i2, onProgress: n2 } = {}) {
          return new Promise((a2, o2) => {
            const s2 = ie(ee(e2), r2, i2);
            let h2;
            t2.forEach((t3) => s2.sample(t3));
            const l2 = s2.quantize(), f2 = () => {
              try {
                const t3 = l2.next();
                t3.done ? a2(h2) : (t3.value.palette && (h2 = t3.value.palette), n2 && n2(t3.value.progress), Jt(f2));
              } catch (t3) {
                o2(t3);
              }
            };
            Jt(f2);
          });
        }
        function $t(t2, e2, { colorDistanceFormula: r2, imageQuantization: i2 } = {}) {
          return re(ee(r2), i2).quantizeSync(t2, e2);
        }
        async function te(t2, e2, { colorDistanceFormula: r2, imageQuantization: i2, onProgress: n2 } = {}) {
          return new Promise((a2, o2) => {
            let s2;
            const h2 = re(ee(r2), i2).quantize(t2, e2), l2 = () => {
              try {
                const t3 = h2.next();
                t3.done ? a2(s2) : (t3.value.pointContainer && (s2 = t3.value.pointContainer), n2 && n2(t3.value.progress), Jt(l2));
              } catch (t3) {
                o2(t3);
              }
            };
            Jt(l2);
          });
        }
        function ee(t2 = "euclidean-bt709") {
          switch (t2) {
            case "cie94-graphic-arts":
              return new Y();
            case "cie94-textiles":
              return new Z();
            case "ciede2000":
              return new X();
            case "color-metric":
              return new J();
            case "euclidean":
              return new K();
            case "euclidean-bt709":
              return new $();
            case "euclidean-bt709-noalpha":
              return new tt();
            case "manhattan":
              return new rt();
            case "manhattan-bt709":
              return new nt();
            case "manhattan-nommyde":
              return new it();
            case "pngquant":
              return new at();
            default:
              throw new Error(`Unknown colorDistanceFormula ${t2}`);
          }
        }
        function re(t2, e2 = "floyd-steinberg") {
          switch (e2) {
            case "nearest":
              return new zt(t2);
            case "riemersma":
              return new Ht(t2);
            case "floyd-steinberg":
              return new Nt(t2, 0);
            case "false-floyd-steinberg":
              return new Nt(t2, 1);
            case "stucki":
              return new Nt(t2, 2);
            case "atkinson":
              return new Nt(t2, 3);
            case "jarvis":
              return new Nt(t2, 4);
            case "burkes":
              return new Nt(t2, 5);
            case "sierra":
              return new Nt(t2, 6);
            case "two-sierra":
              return new Nt(t2, 7);
            case "sierra-lite":
              return new Nt(t2, 8);
            default:
              throw new Error(`Unknown imageQuantization ${e2}`);
          }
        }
        function ie(t2, e2 = "wuquant", r2 = 256) {
          switch (e2) {
            case "neuquant":
              return new yt(t2, r2);
            case "rgbquant":
              return new Mt(t2, r2);
            case "wuquant":
              return new Lt(t2, r2);
            case "neuquant-float":
              return new xt(t2, r2);
            default:
              throw new Error(`Unknown paletteQuantization ${e2}`);
          }
        }
        t.exports = l(u);
      } }, __webpack_module_cache__ = {};
      function __webpack_require__(t) {
        var e = __webpack_module_cache__[t];
        if (void 0 !== e)
          return e.exports;
        var r = __webpack_module_cache__[t] = { exports: {} };
        return __webpack_modules__[t](r, r.exports, __webpack_require__), r.exports;
      }
      __webpack_require__.n = (t) => {
        var e = t && t.__esModule ? () => t.default : () => t;
        return __webpack_require__.d(e, { a: e }), e;
      }, __webpack_require__.d = (t, e) => {
        for (var r in e)
          __webpack_require__.o(e, r) && !__webpack_require__.o(t, r) && Object.defineProperty(t, r, { enumerable: true, get: e[r] });
      }, __webpack_require__.g = function() {
        if ("object" == typeof globalThis)
          return globalThis;
        try {
          return this || new Function("return this")();
        } catch (t) {
          if ("object" == typeof window)
            return window;
        }
      }(), __webpack_require__.o = (t, e) => Object.prototype.hasOwnProperty.call(t, e), __webpack_require__.r = (t) => {
        "undefined" != typeof Symbol && Symbol.toStringTag && Object.defineProperty(t, Symbol.toStringTag, { value: "Module" }), Object.defineProperty(t, "__esModule", { value: true });
      };
      var __webpack_exports__ = {};
      (() => {
        "use strict";
        var t = {};
        __webpack_require__.r(t), __webpack_require__.d(t, { AUTO: () => et, BLEND_ADD: () => ut, BLEND_DARKEN: () => pt, BLEND_DESTINATION_OVER: () => lt, BLEND_DIFFERENCE: () => bt, BLEND_EXCLUSION: () => _t, BLEND_HARDLIGHT: () => gt, BLEND_LIGHTEN: () => mt, BLEND_MULTIPLY: () => ft, BLEND_OVERLAY: () => dt, BLEND_SCREEN: () => ct, BLEND_SOURCE_OVER: () => ht, EDGE_CROP: () => vt, EDGE_EXTEND: () => yt, EDGE_WRAP: () => wt, HORIZONTAL_ALIGN_CENTER: () => it, HORIZONTAL_ALIGN_LEFT: () => rt, HORIZONTAL_ALIGN_RIGHT: () => nt, VERTICAL_ALIGN_BOTTOM: () => st, VERTICAL_ALIGN_MIDDLE: () => ot, VERTICAL_ALIGN_TOP: () => at });
        var e = {};
        __webpack_require__.r(e), __webpack_require__.d(e, { add: () => St, darken: () => It, difference: () => Rt, dstOver: () => Et, exclusion: () => Pt, hardLight: () => Tt, lighten: () => Bt, multiply: () => kt, overlay: () => At, screen: () => Mt, srcOver: () => xt });
        var r = __webpack_require__(5546), i = __webpack_require__.n(r), n = __webpack_require__(1023), a = __webpack_require__.n(n), o = __webpack_require__(2699), s = __webpack_require__.n(o);
        function h(t2) {
          if (void 0 === t2)
            return false;
          if ("function" != typeof t2)
            throw new TypeError("Callback must be a function");
          return true;
        }
        function l(t2, e2) {
          if ("string" == typeof t2 && (t2 = new Error(t2)), "function" == typeof e2)
            return e2.call(this, t2);
          throw t2;
        }
        function f(t2, e2, r2, i2, n2, a2) {
          e2 = Math.round(e2), r2 = Math.round(r2), i2 = Math.round(i2), n2 = Math.round(n2);
          for (let o2 = r2; o2 < r2 + n2; o2++)
            for (let r3 = e2; r3 < e2 + i2; r3++) {
              const e3 = t2.bitmap.width * o2 + r3 << 2;
              a2.call(t2, r3, o2, e3);
            }
          return t2;
        }
        var u = __webpack_require__(236), c = __webpack_require__.n(u), d = __webpack_require__(1294), p = __webpack_require__.n(d);
        function m(t2) {
          return m = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(t3) {
            return typeof t3;
          } : function(t3) {
            return t3 && "function" == typeof Symbol && t3.constructor === Symbol && t3 !== Symbol.prototype ? "symbol" : typeof t3;
          }, m(t2);
        }
        var g = /^\s+/, b = /\s+$/;
        function _(t2, e2) {
          if (e2 = e2 || {}, (t2 = t2 || "") instanceof _)
            return t2;
          if (!(this instanceof _))
            return new _(t2, e2);
          var r2 = function(t3) {
            var e3, r3, i2, n2 = { r: 0, g: 0, b: 0 }, a2 = 1, o2 = null, s2 = null, h2 = null, l2 = false, f2 = false;
            return "string" == typeof t3 && (t3 = function(t4) {
              t4 = t4.replace(g, "").replace(b, "").toLowerCase();
              var e4, r4 = false;
              if (C[t4])
                t4 = C[t4], r4 = true;
              else if ("transparent" == t4)
                return { r: 0, g: 0, b: 0, a: 0, format: "name" };
              return (e4 = V.rgb.exec(t4)) ? { r: e4[1], g: e4[2], b: e4[3] } : (e4 = V.rgba.exec(t4)) ? { r: e4[1], g: e4[2], b: e4[3], a: e4[4] } : (e4 = V.hsl.exec(t4)) ? { h: e4[1], s: e4[2], l: e4[3] } : (e4 = V.hsla.exec(t4)) ? { h: e4[1], s: e4[2], l: e4[3], a: e4[4] } : (e4 = V.hsv.exec(t4)) ? { h: e4[1], s: e4[2], v: e4[3] } : (e4 = V.hsva.exec(t4)) ? { h: e4[1], s: e4[2], v: e4[3], a: e4[4] } : (e4 = V.hex8.exec(t4)) ? { r: F(e4[1]), g: F(e4[2]), b: F(e4[3]), a: W(e4[4]), format: r4 ? "name" : "hex8" } : (e4 = V.hex6.exec(t4)) ? { r: F(e4[1]), g: F(e4[2]), b: F(e4[3]), format: r4 ? "name" : "hex" } : (e4 = V.hex4.exec(t4)) ? { r: F(e4[1] + "" + e4[1]), g: F(e4[2] + "" + e4[2]), b: F(e4[3] + "" + e4[3]), a: W(e4[4] + "" + e4[4]), format: r4 ? "name" : "hex8" } : !!(e4 = V.hex3.exec(t4)) && { r: F(e4[1] + "" + e4[1]), g: F(e4[2] + "" + e4[2]), b: F(e4[3] + "" + e4[3]), format: r4 ? "name" : "hex" };
            }(t3)), "object" == m(t3) && (X(t3.r) && X(t3.g) && X(t3.b) ? (e3 = t3.r, r3 = t3.g, i2 = t3.b, n2 = { r: 255 * D(e3, 255), g: 255 * D(r3, 255), b: 255 * D(i2, 255) }, l2 = true, f2 = "%" === String(t3.r).substr(-1) ? "prgb" : "rgb") : X(t3.h) && X(t3.s) && X(t3.v) ? (o2 = G(t3.s), s2 = G(t3.v), n2 = function(t4, e4, r4) {
              t4 = 6 * D(t4, 360), e4 = D(e4, 100), r4 = D(r4, 100);
              var i3 = Math.floor(t4), n3 = t4 - i3, a3 = r4 * (1 - e4), o3 = r4 * (1 - n3 * e4), s3 = r4 * (1 - (1 - n3) * e4), h3 = i3 % 6;
              return { r: 255 * [r4, o3, a3, a3, s3, r4][h3], g: 255 * [s3, r4, r4, o3, a3, a3][h3], b: 255 * [a3, a3, s3, r4, r4, o3][h3] };
            }(t3.h, o2, s2), l2 = true, f2 = "hsv") : X(t3.h) && X(t3.s) && X(t3.l) && (o2 = G(t3.s), h2 = G(t3.l), n2 = function(t4, e4, r4) {
              var i3, n3, a3;
              function o3(t5, e5, r5) {
                return r5 < 0 && (r5 += 1), r5 > 1 && (r5 -= 1), r5 < 1 / 6 ? t5 + 6 * (e5 - t5) * r5 : r5 < 0.5 ? e5 : r5 < 2 / 3 ? t5 + (e5 - t5) * (2 / 3 - r5) * 6 : t5;
              }
              if (t4 = D(t4, 360), e4 = D(e4, 100), r4 = D(r4, 100), 0 === e4)
                i3 = n3 = a3 = r4;
              else {
                var s3 = r4 < 0.5 ? r4 * (1 + e4) : r4 + e4 - r4 * e4, h3 = 2 * r4 - s3;
                i3 = o3(h3, s3, t4 + 1 / 3), n3 = o3(h3, s3, t4), a3 = o3(h3, s3, t4 - 1 / 3);
              }
              return { r: 255 * i3, g: 255 * n3, b: 255 * a3 };
            }(t3.h, o2, h2), l2 = true, f2 = "hsl"), t3.hasOwnProperty("a") && (a2 = t3.a)), a2 = z(a2), { ok: l2, format: t3.format || f2, r: Math.min(255, Math.max(n2.r, 0)), g: Math.min(255, Math.max(n2.g, 0)), b: Math.min(255, Math.max(n2.b, 0)), a: a2 };
          }(t2);
          this._originalInput = t2, this._r = r2.r, this._g = r2.g, this._b = r2.b, this._a = r2.a, this._roundA = Math.round(100 * this._a) / 100, this._format = e2.format || r2.format, this._gradientType = e2.gradientType, this._r < 1 && (this._r = Math.round(this._r)), this._g < 1 && (this._g = Math.round(this._g)), this._b < 1 && (this._b = Math.round(this._b)), this._ok = r2.ok;
        }
        function y(t2, e2, r2) {
          t2 = D(t2, 255), e2 = D(e2, 255), r2 = D(r2, 255);
          var i2, n2, a2 = Math.max(t2, e2, r2), o2 = Math.min(t2, e2, r2), s2 = (a2 + o2) / 2;
          if (a2 == o2)
            i2 = n2 = 0;
          else {
            var h2 = a2 - o2;
            switch (n2 = s2 > 0.5 ? h2 / (2 - a2 - o2) : h2 / (a2 + o2), a2) {
              case t2:
                i2 = (e2 - r2) / h2 + (e2 < r2 ? 6 : 0);
                break;
              case e2:
                i2 = (r2 - t2) / h2 + 2;
                break;
              case r2:
                i2 = (t2 - e2) / h2 + 4;
            }
            i2 /= 6;
          }
          return { h: i2, s: n2, l: s2 };
        }
        function w(t2, e2, r2) {
          t2 = D(t2, 255), e2 = D(e2, 255), r2 = D(r2, 255);
          var i2, n2, a2 = Math.max(t2, e2, r2), o2 = Math.min(t2, e2, r2), s2 = a2, h2 = a2 - o2;
          if (n2 = 0 === a2 ? 0 : h2 / a2, a2 == o2)
            i2 = 0;
          else {
            switch (a2) {
              case t2:
                i2 = (e2 - r2) / h2 + (e2 < r2 ? 6 : 0);
                break;
              case e2:
                i2 = (r2 - t2) / h2 + 2;
                break;
              case r2:
                i2 = (t2 - e2) / h2 + 4;
            }
            i2 /= 6;
          }
          return { h: i2, s: n2, v: s2 };
        }
        function v(t2, e2, r2, i2) {
          var n2 = [j(Math.round(t2).toString(16)), j(Math.round(e2).toString(16)), j(Math.round(r2).toString(16))];
          return i2 && n2[0].charAt(0) == n2[0].charAt(1) && n2[1].charAt(0) == n2[1].charAt(1) && n2[2].charAt(0) == n2[2].charAt(1) ? n2[0].charAt(0) + n2[1].charAt(0) + n2[2].charAt(0) : n2.join("");
        }
        function x(t2, e2, r2, i2) {
          return [j(H(i2)), j(Math.round(t2).toString(16)), j(Math.round(e2).toString(16)), j(Math.round(r2).toString(16))].join("");
        }
        function E(t2, e2) {
          e2 = 0 === e2 ? 0 : e2 || 10;
          var r2 = _(t2).toHsl();
          return r2.s -= e2 / 100, r2.s = N(r2.s), _(r2);
        }
        function k(t2, e2) {
          e2 = 0 === e2 ? 0 : e2 || 10;
          var r2 = _(t2).toHsl();
          return r2.s += e2 / 100, r2.s = N(r2.s), _(r2);
        }
        function S(t2) {
          return _(t2).desaturate(100);
        }
        function M(t2, e2) {
          e2 = 0 === e2 ? 0 : e2 || 10;
          var r2 = _(t2).toHsl();
          return r2.l += e2 / 100, r2.l = N(r2.l), _(r2);
        }
        function A(t2, e2) {
          e2 = 0 === e2 ? 0 : e2 || 10;
          var r2 = _(t2).toRgb();
          return r2.r = Math.max(0, Math.min(255, r2.r - Math.round(-e2 / 100 * 255))), r2.g = Math.max(0, Math.min(255, r2.g - Math.round(-e2 / 100 * 255))), r2.b = Math.max(0, Math.min(255, r2.b - Math.round(-e2 / 100 * 255))), _(r2);
        }
        function I(t2, e2) {
          e2 = 0 === e2 ? 0 : e2 || 10;
          var r2 = _(t2).toHsl();
          return r2.l -= e2 / 100, r2.l = N(r2.l), _(r2);
        }
        function B(t2, e2) {
          var r2 = _(t2).toHsl(), i2 = (r2.h + e2) % 360;
          return r2.h = i2 < 0 ? 360 + i2 : i2, _(r2);
        }
        function T(t2) {
          var e2 = _(t2).toHsl();
          return e2.h = (e2.h + 180) % 360, _(e2);
        }
        function R(t2, e2) {
          if (isNaN(e2) || e2 <= 0)
            throw new Error("Argument to polyad must be a positive number");
          for (var r2 = _(t2).toHsl(), i2 = [_(t2)], n2 = 360 / e2, a2 = 1; a2 < e2; a2++)
            i2.push(_({ h: (r2.h + a2 * n2) % 360, s: r2.s, l: r2.l }));
          return i2;
        }
        function P(t2) {
          var e2 = _(t2).toHsl(), r2 = e2.h;
          return [_(t2), _({ h: (r2 + 72) % 360, s: e2.s, l: e2.l }), _({ h: (r2 + 216) % 360, s: e2.s, l: e2.l })];
        }
        function O(t2, e2, r2) {
          e2 = e2 || 6, r2 = r2 || 30;
          var i2 = _(t2).toHsl(), n2 = 360 / r2, a2 = [_(t2)];
          for (i2.h = (i2.h - (n2 * e2 >> 1) + 720) % 360; --e2; )
            i2.h = (i2.h + n2) % 360, a2.push(_(i2));
          return a2;
        }
        function L(t2, e2) {
          e2 = e2 || 6;
          for (var r2 = _(t2).toHsv(), i2 = r2.h, n2 = r2.s, a2 = r2.v, o2 = [], s2 = 1 / e2; e2--; )
            o2.push(_({ h: i2, s: n2, v: a2 })), a2 = (a2 + s2) % 1;
          return o2;
        }
        _.prototype = { isDark: function() {
          return this.getBrightness() < 128;
        }, isLight: function() {
          return !this.isDark();
        }, isValid: function() {
          return this._ok;
        }, getOriginalInput: function() {
          return this._originalInput;
        }, getFormat: function() {
          return this._format;
        }, getAlpha: function() {
          return this._a;
        }, getBrightness: function() {
          var t2 = this.toRgb();
          return (299 * t2.r + 587 * t2.g + 114 * t2.b) / 1e3;
        }, getLuminance: function() {
          var t2, e2, r2, i2 = this.toRgb();
          return t2 = i2.r / 255, e2 = i2.g / 255, r2 = i2.b / 255, 0.2126 * (t2 <= 0.03928 ? t2 / 12.92 : Math.pow((t2 + 0.055) / 1.055, 2.4)) + 0.7152 * (e2 <= 0.03928 ? e2 / 12.92 : Math.pow((e2 + 0.055) / 1.055, 2.4)) + 0.0722 * (r2 <= 0.03928 ? r2 / 12.92 : Math.pow((r2 + 0.055) / 1.055, 2.4));
        }, setAlpha: function(t2) {
          return this._a = z(t2), this._roundA = Math.round(100 * this._a) / 100, this;
        }, toHsv: function() {
          var t2 = w(this._r, this._g, this._b);
          return { h: 360 * t2.h, s: t2.s, v: t2.v, a: this._a };
        }, toHsvString: function() {
          var t2 = w(this._r, this._g, this._b), e2 = Math.round(360 * t2.h), r2 = Math.round(100 * t2.s), i2 = Math.round(100 * t2.v);
          return 1 == this._a ? "hsv(" + e2 + ", " + r2 + "%, " + i2 + "%)" : "hsva(" + e2 + ", " + r2 + "%, " + i2 + "%, " + this._roundA + ")";
        }, toHsl: function() {
          var t2 = y(this._r, this._g, this._b);
          return { h: 360 * t2.h, s: t2.s, l: t2.l, a: this._a };
        }, toHslString: function() {
          var t2 = y(this._r, this._g, this._b), e2 = Math.round(360 * t2.h), r2 = Math.round(100 * t2.s), i2 = Math.round(100 * t2.l);
          return 1 == this._a ? "hsl(" + e2 + ", " + r2 + "%, " + i2 + "%)" : "hsla(" + e2 + ", " + r2 + "%, " + i2 + "%, " + this._roundA + ")";
        }, toHex: function(t2) {
          return v(this._r, this._g, this._b, t2);
        }, toHexString: function(t2) {
          return "#" + this.toHex(t2);
        }, toHex8: function(t2) {
          return function(t3, e2, r2, i2, n2) {
            var a2 = [j(Math.round(t3).toString(16)), j(Math.round(e2).toString(16)), j(Math.round(r2).toString(16)), j(H(i2))];
            return n2 && a2[0].charAt(0) == a2[0].charAt(1) && a2[1].charAt(0) == a2[1].charAt(1) && a2[2].charAt(0) == a2[2].charAt(1) && a2[3].charAt(0) == a2[3].charAt(1) ? a2[0].charAt(0) + a2[1].charAt(0) + a2[2].charAt(0) + a2[3].charAt(0) : a2.join("");
          }(this._r, this._g, this._b, this._a, t2);
        }, toHex8String: function(t2) {
          return "#" + this.toHex8(t2);
        }, toRgb: function() {
          return { r: Math.round(this._r), g: Math.round(this._g), b: Math.round(this._b), a: this._a };
        }, toRgbString: function() {
          return 1 == this._a ? "rgb(" + Math.round(this._r) + ", " + Math.round(this._g) + ", " + Math.round(this._b) + ")" : "rgba(" + Math.round(this._r) + ", " + Math.round(this._g) + ", " + Math.round(this._b) + ", " + this._roundA + ")";
        }, toPercentageRgb: function() {
          return { r: Math.round(100 * D(this._r, 255)) + "%", g: Math.round(100 * D(this._g, 255)) + "%", b: Math.round(100 * D(this._b, 255)) + "%", a: this._a };
        }, toPercentageRgbString: function() {
          return 1 == this._a ? "rgb(" + Math.round(100 * D(this._r, 255)) + "%, " + Math.round(100 * D(this._g, 255)) + "%, " + Math.round(100 * D(this._b, 255)) + "%)" : "rgba(" + Math.round(100 * D(this._r, 255)) + "%, " + Math.round(100 * D(this._g, 255)) + "%, " + Math.round(100 * D(this._b, 255)) + "%, " + this._roundA + ")";
        }, toName: function() {
          return 0 === this._a ? "transparent" : !(this._a < 1) && (U[v(this._r, this._g, this._b, true)] || false);
        }, toFilter: function(t2) {
          var e2 = "#" + x(this._r, this._g, this._b, this._a), r2 = e2, i2 = this._gradientType ? "GradientType = 1, " : "";
          if (t2) {
            var n2 = _(t2);
            r2 = "#" + x(n2._r, n2._g, n2._b, n2._a);
          }
          return "progid:DXImageTransform.Microsoft.gradient(" + i2 + "startColorstr=" + e2 + ",endColorstr=" + r2 + ")";
        }, toString: function(t2) {
          var e2 = !!t2;
          t2 = t2 || this._format;
          var r2 = false, i2 = this._a < 1 && this._a >= 0;
          return e2 || !i2 || "hex" !== t2 && "hex6" !== t2 && "hex3" !== t2 && "hex4" !== t2 && "hex8" !== t2 && "name" !== t2 ? ("rgb" === t2 && (r2 = this.toRgbString()), "prgb" === t2 && (r2 = this.toPercentageRgbString()), "hex" !== t2 && "hex6" !== t2 || (r2 = this.toHexString()), "hex3" === t2 && (r2 = this.toHexString(true)), "hex4" === t2 && (r2 = this.toHex8String(true)), "hex8" === t2 && (r2 = this.toHex8String()), "name" === t2 && (r2 = this.toName()), "hsl" === t2 && (r2 = this.toHslString()), "hsv" === t2 && (r2 = this.toHsvString()), r2 || this.toHexString()) : "name" === t2 && 0 === this._a ? this.toName() : this.toRgbString();
        }, clone: function() {
          return _(this.toString());
        }, _applyModification: function(t2, e2) {
          var r2 = t2.apply(null, [this].concat([].slice.call(e2)));
          return this._r = r2._r, this._g = r2._g, this._b = r2._b, this.setAlpha(r2._a), this;
        }, lighten: function() {
          return this._applyModification(M, arguments);
        }, brighten: function() {
          return this._applyModification(A, arguments);
        }, darken: function() {
          return this._applyModification(I, arguments);
        }, desaturate: function() {
          return this._applyModification(E, arguments);
        }, saturate: function() {
          return this._applyModification(k, arguments);
        }, greyscale: function() {
          return this._applyModification(S, arguments);
        }, spin: function() {
          return this._applyModification(B, arguments);
        }, _applyCombination: function(t2, e2) {
          return t2.apply(null, [this].concat([].slice.call(e2)));
        }, analogous: function() {
          return this._applyCombination(O, arguments);
        }, complement: function() {
          return this._applyCombination(T, arguments);
        }, monochromatic: function() {
          return this._applyCombination(L, arguments);
        }, splitcomplement: function() {
          return this._applyCombination(P, arguments);
        }, triad: function() {
          return this._applyCombination(R, [3]);
        }, tetrad: function() {
          return this._applyCombination(R, [4]);
        } }, _.fromRatio = function(t2, e2) {
          if ("object" == m(t2)) {
            var r2 = {};
            for (var i2 in t2)
              t2.hasOwnProperty(i2) && (r2[i2] = "a" === i2 ? t2[i2] : G(t2[i2]));
            t2 = r2;
          }
          return _(t2, e2);
        }, _.equals = function(t2, e2) {
          return !(!t2 || !e2) && _(t2).toRgbString() == _(e2).toRgbString();
        }, _.random = function() {
          return _.fromRatio({ r: Math.random(), g: Math.random(), b: Math.random() });
        }, _.mix = function(t2, e2, r2) {
          r2 = 0 === r2 ? 0 : r2 || 50;
          var i2 = _(t2).toRgb(), n2 = _(e2).toRgb(), a2 = r2 / 100;
          return _({ r: (n2.r - i2.r) * a2 + i2.r, g: (n2.g - i2.g) * a2 + i2.g, b: (n2.b - i2.b) * a2 + i2.b, a: (n2.a - i2.a) * a2 + i2.a });
        }, _.readability = function(t2, e2) {
          var r2 = _(t2), i2 = _(e2);
          return (Math.max(r2.getLuminance(), i2.getLuminance()) + 0.05) / (Math.min(r2.getLuminance(), i2.getLuminance()) + 0.05);
        }, _.isReadable = function(t2, e2, r2) {
          var i2, n2, a2, o2, s2, h2 = _.readability(t2, e2);
          switch (n2 = false, (a2 = r2, "AA" !== (o2 = ((a2 = a2 || { level: "AA", size: "small" }).level || "AA").toUpperCase()) && "AAA" !== o2 && (o2 = "AA"), "small" !== (s2 = (a2.size || "small").toLowerCase()) && "large" !== s2 && (s2 = "small"), i2 = { level: o2, size: s2 }).level + i2.size) {
            case "AAsmall":
            case "AAAlarge":
              n2 = h2 >= 4.5;
              break;
            case "AAlarge":
              n2 = h2 >= 3;
              break;
            case "AAAsmall":
              n2 = h2 >= 7;
          }
          return n2;
        }, _.mostReadable = function(t2, e2, r2) {
          var i2, n2, a2, o2, s2 = null, h2 = 0;
          n2 = (r2 = r2 || {}).includeFallbackColors, a2 = r2.level, o2 = r2.size;
          for (var l2 = 0; l2 < e2.length; l2++)
            (i2 = _.readability(t2, e2[l2])) > h2 && (h2 = i2, s2 = _(e2[l2]));
          return _.isReadable(t2, s2, { level: a2, size: o2 }) || !n2 ? s2 : (r2.includeFallbackColors = false, _.mostReadable(t2, ["#fff", "#000"], r2));
        };
        var C = _.names = { aliceblue: "f0f8ff", antiquewhite: "faebd7", aqua: "0ff", aquamarine: "7fffd4", azure: "f0ffff", beige: "f5f5dc", bisque: "ffe4c4", black: "000", blanchedalmond: "ffebcd", blue: "00f", blueviolet: "8a2be2", brown: "a52a2a", burlywood: "deb887", burntsienna: "ea7e5d", cadetblue: "5f9ea0", chartreuse: "7fff00", chocolate: "d2691e", coral: "ff7f50", cornflowerblue: "6495ed", cornsilk: "fff8dc", crimson: "dc143c", cyan: "0ff", darkblue: "00008b", darkcyan: "008b8b", darkgoldenrod: "b8860b", darkgray: "a9a9a9", darkgreen: "006400", darkgrey: "a9a9a9", darkkhaki: "bdb76b", darkmagenta: "8b008b", darkolivegreen: "556b2f", darkorange: "ff8c00", darkorchid: "9932cc", darkred: "8b0000", darksalmon: "e9967a", darkseagreen: "8fbc8f", darkslateblue: "483d8b", darkslategray: "2f4f4f", darkslategrey: "2f4f4f", darkturquoise: "00ced1", darkviolet: "9400d3", deeppink: "ff1493", deepskyblue: "00bfff", dimgray: "696969", dimgrey: "696969", dodgerblue: "1e90ff", firebrick: "b22222", floralwhite: "fffaf0", forestgreen: "228b22", fuchsia: "f0f", gainsboro: "dcdcdc", ghostwhite: "f8f8ff", gold: "ffd700", goldenrod: "daa520", gray: "808080", green: "008000", greenyellow: "adff2f", grey: "808080", honeydew: "f0fff0", hotpink: "ff69b4", indianred: "cd5c5c", indigo: "4b0082", ivory: "fffff0", khaki: "f0e68c", lavender: "e6e6fa", lavenderblush: "fff0f5", lawngreen: "7cfc00", lemonchiffon: "fffacd", lightblue: "add8e6", lightcoral: "f08080", lightcyan: "e0ffff", lightgoldenrodyellow: "fafad2", lightgray: "d3d3d3", lightgreen: "90ee90", lightgrey: "d3d3d3", lightpink: "ffb6c1", lightsalmon: "ffa07a", lightseagreen: "20b2aa", lightskyblue: "87cefa", lightslategray: "789", lightslategrey: "789", lightsteelblue: "b0c4de", lightyellow: "ffffe0", lime: "0f0", limegreen: "32cd32", linen: "faf0e6", magenta: "f0f", maroon: "800000", mediumaquamarine: "66cdaa", mediumblue: "0000cd", mediumorchid: "ba55d3", mediumpurple: "9370db", mediumseagreen: "3cb371", mediumslateblue: "7b68ee", mediumspringgreen: "00fa9a", mediumturquoise: "48d1cc", mediumvioletred: "c71585", midnightblue: "191970", mintcream: "f5fffa", mistyrose: "ffe4e1", moccasin: "ffe4b5", navajowhite: "ffdead", navy: "000080", oldlace: "fdf5e6", olive: "808000", olivedrab: "6b8e23", orange: "ffa500", orangered: "ff4500", orchid: "da70d6", palegoldenrod: "eee8aa", palegreen: "98fb98", paleturquoise: "afeeee", palevioletred: "db7093", papayawhip: "ffefd5", peachpuff: "ffdab9", peru: "cd853f", pink: "ffc0cb", plum: "dda0dd", powderblue: "b0e0e6", purple: "800080", rebeccapurple: "663399", red: "f00", rosybrown: "bc8f8f", royalblue: "4169e1", saddlebrown: "8b4513", salmon: "fa8072", sandybrown: "f4a460", seagreen: "2e8b57", seashell: "fff5ee", sienna: "a0522d", silver: "c0c0c0", skyblue: "87ceeb", slateblue: "6a5acd", slategray: "708090", slategrey: "708090", snow: "fffafa", springgreen: "00ff7f", steelblue: "4682b4", tan: "d2b48c", teal: "008080", thistle: "d8bfd8", tomato: "ff6347", turquoise: "40e0d0", violet: "ee82ee", wheat: "f5deb3", white: "fff", whitesmoke: "f5f5f5", yellow: "ff0", yellowgreen: "9acd32" }, U = _.hexNames = function(t2) {
          var e2 = {};
          for (var r2 in t2)
            t2.hasOwnProperty(r2) && (e2[t2[r2]] = r2);
          return e2;
        }(C);
        function z(t2) {
          return t2 = parseFloat(t2), (isNaN(t2) || t2 < 0 || t2 > 1) && (t2 = 1), t2;
        }
        function D(t2, e2) {
          (function(t3) {
            return "string" == typeof t3 && -1 != t3.indexOf(".") && 1 === parseFloat(t3);
          })(t2) && (t2 = "100%");
          var r2 = function(t3) {
            return "string" == typeof t3 && -1 != t3.indexOf("%");
          }(t2);
          return t2 = Math.min(e2, Math.max(0, parseFloat(t2))), r2 && (t2 = parseInt(t2 * e2, 10) / 100), Math.abs(t2 - e2) < 1e-6 ? 1 : t2 % e2 / parseFloat(e2);
        }
        function N(t2) {
          return Math.min(1, Math.max(0, t2));
        }
        function F(t2) {
          return parseInt(t2, 16);
        }
        function j(t2) {
          return 1 == t2.length ? "0" + t2 : "" + t2;
        }
        function G(t2) {
          return t2 <= 1 && (t2 = 100 * t2 + "%"), t2;
        }
        function H(t2) {
          return Math.round(255 * parseFloat(t2)).toString(16);
        }
        function W(t2) {
          return F(t2) / 255;
        }
        var q, Z, Y, V = (Z = "[\\s|\\(]+(" + (q = "(?:[-\\+]?\\d*\\.\\d+%?)|(?:[-\\+]?\\d+%?)") + ")[,|\\s]+(" + q + ")[,|\\s]+(" + q + ")\\s*\\)?", Y = "[\\s|\\(]+(" + q + ")[,|\\s]+(" + q + ")[,|\\s]+(" + q + ")[,|\\s]+(" + q + ")\\s*\\)?", { CSS_UNIT: new RegExp(q), rgb: new RegExp("rgb" + Z), rgba: new RegExp("rgba" + Y), hsl: new RegExp("hsl" + Z), hsla: new RegExp("hsla" + Y), hsv: new RegExp("hsv" + Z), hsva: new RegExp("hsva" + Y), hex3: /^#?([0-9a-fA-F]{1})([0-9a-fA-F]{1})([0-9a-fA-F]{1})$/, hex6: /^#?([0-9a-fA-F]{2})([0-9a-fA-F]{2})([0-9a-fA-F]{2})$/, hex4: /^#?([0-9a-fA-F]{1})([0-9a-fA-F]{1})([0-9a-fA-F]{1})([0-9a-fA-F]{1})$/, hex8: /^#?([0-9a-fA-F]{2})([0-9a-fA-F]{2})([0-9a-fA-F]{2})([0-9a-fA-F]{2})$/ });
        function X(t2) {
          return !!V.CSS_UNIT.exec(t2);
        }
        function J(t2, e2) {
          this.size = this.size || t2, this.smallerSize = this.smallerSize || e2, function(t3) {
            for (let e3 = 1; e3 < t3; e3++)
              K[e3] = 1;
            K[0] = 1 / Math.sqrt(2);
          }(this.size);
        }
        function Q(t2) {
          const e2 = 255 & t2, r2 = 255 & (t2 >>>= 8), i2 = 255 & (t2 >>>= 8);
          return { r: 255 & (t2 >>>= 8), g: i2, b: r2, a: e2 };
        }
        J.prototype.size = 32, J.prototype.smallerSize = 8, J.prototype.distance = function(t2, e2) {
          let r2 = 0;
          for (let i2 = 0; i2 < t2.length; i2++)
            t2[i2] !== e2[i2] && r2++;
          return r2 / t2.length;
        }, J.prototype.getHash = function(t2) {
          (t2 = t2.clone().resize(this.size, this.size)).grayscale();
          const e2 = [];
          for (let r3 = 0; r3 < t2.bitmap.width; r3++) {
            e2[r3] = [];
            for (let i3 = 0; i3 < t2.bitmap.height; i3++)
              e2[r3][i3] = Q(t2.getPixelColor(r3, i3)).b;
          }
          const r2 = function(t3, e3) {
            const r3 = e3, i3 = [];
            for (let e4 = 0; e4 < r3; e4++) {
              i3[e4] = [];
              for (let n3 = 0; n3 < r3; n3++) {
                let a3 = 0;
                for (let i4 = 0; i4 < r3; i4++)
                  for (let o2 = 0; o2 < r3; o2++)
                    a3 += Math.cos((2 * i4 + 1) / (2 * r3) * e4 * Math.PI) * Math.cos((2 * o2 + 1) / (2 * r3) * n3 * Math.PI) * t3[i4][o2];
                a3 *= K[e4] * K[n3] / 4, i3[e4][n3] = a3;
              }
            }
            return i3;
          }(e2, this.size);
          let i2 = 0;
          for (let t3 = 0; t3 < this.smallerSize; t3++)
            for (let e3 = 0; e3 < this.smallerSize; e3++)
              i2 += r2[t3][e3];
          const n2 = i2 / (this.smallerSize * this.smallerSize);
          let a2 = "";
          for (let t3 = 0; t3 < this.smallerSize; t3++)
            for (let e3 = 0; e3 < this.smallerSize; e3++)
              a2 += r2[t3][e3] > n2 ? "1" : "0";
          return a2;
        };
        const K = [], $ = J;
        __webpack_require__(9307);
        const tt = (t2, e2) => {
          let { url: r2, ...i2 } = t2;
          fetch(r2, i2).then((t3) => {
            if (t3.ok)
              return t3.arrayBuffer().catch((t4) => {
                throw new Error(`Response is not a buffer for url ${r2}. Error: ${t4.message}`);
              });
            throw new Error(`HTTP Status ${t3.status} for url ${r2}`);
          }).then((t3) => e2(null, t3)).catch((t3) => e2(t3));
        }, et = -1, rt = 1, it = 2, nt = 4, at = 8, ot = 16, st = 32, ht = "srcOver", lt = "dstOver", ft = "multiply", ut = "add", ct = "screen", dt = "overlay", pt = "darken", mt = "lighten", gt = "hardLight", bt = "difference", _t = "exclusion", yt = 1, wt = 2, vt = 3;
        function xt(t2, e2) {
          let r2 = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : 1;
          t2.a *= r2;
          const i2 = e2.a + t2.a - e2.a * t2.a;
          return { r: (t2.r * t2.a + e2.r * e2.a * (1 - t2.a)) / i2, g: (t2.g * t2.a + e2.g * e2.a * (1 - t2.a)) / i2, b: (t2.b * t2.a + e2.b * e2.a * (1 - t2.a)) / i2, a: i2 };
        }
        function Et(t2, e2) {
          let r2 = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : 1;
          t2.a *= r2;
          const i2 = e2.a + t2.a - e2.a * t2.a;
          return { r: (e2.r * e2.a + t2.r * t2.a * (1 - e2.a)) / i2, g: (e2.g * e2.a + t2.g * t2.a * (1 - e2.a)) / i2, b: (e2.b * e2.a + t2.b * t2.a * (1 - e2.a)) / i2, a: i2 };
        }
        function kt(t2, e2) {
          let r2 = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : 1;
          t2.a *= r2;
          const i2 = e2.a + t2.a - e2.a * t2.a, n2 = t2.r * t2.a, a2 = t2.g * t2.a, o2 = t2.b * t2.a, s2 = e2.r * e2.a, h2 = e2.g * e2.a, l2 = e2.b * e2.a;
          return { r: (n2 * s2 + n2 * (1 - e2.a) + s2 * (1 - t2.a)) / i2, g: (a2 * h2 + a2 * (1 - e2.a) + h2 * (1 - t2.a)) / i2, b: (o2 * l2 + o2 * (1 - e2.a) + l2 * (1 - t2.a)) / i2, a: i2 };
        }
        function St(t2, e2) {
          let r2 = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : 1;
          t2.a *= r2;
          const i2 = e2.a + t2.a - e2.a * t2.a, n2 = t2.r * t2.a, a2 = t2.g * t2.a, o2 = t2.b * t2.a;
          return { r: (n2 + e2.r * e2.a) / i2, g: (a2 + e2.g * e2.a) / i2, b: (o2 + e2.b * e2.a) / i2, a: i2 };
        }
        function Mt(t2, e2) {
          let r2 = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : 1;
          t2.a *= r2;
          const i2 = e2.a + t2.a - e2.a * t2.a, n2 = t2.r * t2.a, a2 = t2.g * t2.a, o2 = t2.b * t2.a, s2 = e2.r * e2.a, h2 = e2.g * e2.a, l2 = e2.b * e2.a;
          return { r: (n2 * e2.a + s2 * t2.a - n2 * s2 + n2 * (1 - e2.a) + s2 * (1 - t2.a)) / i2, g: (a2 * e2.a + h2 * t2.a - a2 * h2 + a2 * (1 - e2.a) + h2 * (1 - t2.a)) / i2, b: (o2 * e2.a + l2 * t2.a - o2 * l2 + o2 * (1 - e2.a) + l2 * (1 - t2.a)) / i2, a: i2 };
        }
        function At(t2, e2) {
          let r2 = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : 1;
          t2.a *= r2;
          const i2 = e2.a + t2.a - e2.a * t2.a, n2 = t2.r * t2.a, a2 = t2.g * t2.a, o2 = t2.b * t2.a, s2 = e2.r * e2.a, h2 = e2.g * e2.a, l2 = e2.b * e2.a;
          return { r: (2 * s2 <= e2.a ? 2 * n2 * s2 + n2 * (1 - e2.a) + s2 * (1 - t2.a) : n2 * (1 + e2.a) + s2 * (1 + t2.a) - 2 * s2 * n2 - e2.a * t2.a) / i2, g: (2 * h2 <= e2.a ? 2 * a2 * h2 + a2 * (1 - e2.a) + h2 * (1 - t2.a) : a2 * (1 + e2.a) + h2 * (1 + t2.a) - 2 * h2 * a2 - e2.a * t2.a) / i2, b: (2 * l2 <= e2.a ? 2 * o2 * l2 + o2 * (1 - e2.a) + l2 * (1 - t2.a) : o2 * (1 + e2.a) + l2 * (1 + t2.a) - 2 * l2 * o2 - e2.a * t2.a) / i2, a: i2 };
        }
        function It(t2, e2) {
          let r2 = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : 1;
          t2.a *= r2;
          const i2 = e2.a + t2.a - e2.a * t2.a, n2 = t2.r * t2.a, a2 = t2.g * t2.a, o2 = t2.b * t2.a, s2 = e2.r * e2.a, h2 = e2.g * e2.a, l2 = e2.b * e2.a;
          return { r: (Math.min(n2 * e2.a, s2 * t2.a) + n2 * (1 - e2.a) + s2 * (1 - t2.a)) / i2, g: (Math.min(a2 * e2.a, h2 * t2.a) + a2 * (1 - e2.a) + h2 * (1 - t2.a)) / i2, b: (Math.min(o2 * e2.a, l2 * t2.a) + o2 * (1 - e2.a) + l2 * (1 - t2.a)) / i2, a: i2 };
        }
        function Bt(t2, e2) {
          let r2 = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : 1;
          t2.a *= r2;
          const i2 = e2.a + t2.a - e2.a * t2.a, n2 = t2.r * t2.a, a2 = t2.g * t2.a, o2 = t2.b * t2.a, s2 = e2.r * e2.a, h2 = e2.g * e2.a, l2 = e2.b * e2.a;
          return { r: (Math.max(n2 * e2.a, s2 * t2.a) + n2 * (1 - e2.a) + s2 * (1 - t2.a)) / i2, g: (Math.max(a2 * e2.a, h2 * t2.a) + a2 * (1 - e2.a) + h2 * (1 - t2.a)) / i2, b: (Math.max(o2 * e2.a, l2 * t2.a) + o2 * (1 - e2.a) + l2 * (1 - t2.a)) / i2, a: i2 };
        }
        function Tt(t2, e2) {
          let r2 = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : 1;
          t2.a *= r2;
          const i2 = e2.a + t2.a - e2.a * t2.a, n2 = t2.r * t2.a, a2 = t2.g * t2.a, o2 = t2.b * t2.a, s2 = e2.r * e2.a, h2 = e2.g * e2.a, l2 = e2.b * e2.a;
          return { r: (2 * n2 <= t2.a ? 2 * n2 * s2 + n2 * (1 - e2.a) + s2 * (1 - t2.a) : n2 * (1 + e2.a) + s2 * (1 + t2.a) - 2 * s2 * n2 - e2.a * t2.a) / i2, g: (2 * a2 <= t2.a ? 2 * a2 * h2 + a2 * (1 - e2.a) + h2 * (1 - t2.a) : a2 * (1 + e2.a) + h2 * (1 + t2.a) - 2 * h2 * a2 - e2.a * t2.a) / i2, b: (2 * o2 <= t2.a ? 2 * o2 * l2 + o2 * (1 - e2.a) + l2 * (1 - t2.a) : o2 * (1 + e2.a) + l2 * (1 + t2.a) - 2 * l2 * o2 - e2.a * t2.a) / i2, a: i2 };
        }
        function Rt(t2, e2) {
          let r2 = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : 1;
          t2.a *= r2;
          const i2 = e2.a + t2.a - e2.a * t2.a, n2 = t2.r * t2.a, a2 = t2.g * t2.a, o2 = t2.b * t2.a, s2 = e2.r * e2.a, h2 = e2.g * e2.a, l2 = e2.b * e2.a;
          return { r: (n2 + s2 - 2 * Math.min(n2 * e2.a, s2 * t2.a)) / i2, g: (a2 + h2 - 2 * Math.min(a2 * e2.a, h2 * t2.a)) / i2, b: (o2 + l2 - 2 * Math.min(o2 * e2.a, l2 * t2.a)) / i2, a: i2 };
        }
        function Pt(t2, e2) {
          let r2 = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : 1;
          t2.a *= r2;
          const i2 = e2.a + t2.a - e2.a * t2.a, n2 = t2.r * t2.a, a2 = t2.g * t2.a, o2 = t2.b * t2.a, s2 = e2.r * e2.a, h2 = e2.g * e2.a, l2 = e2.b * e2.a;
          return { r: (n2 * e2.a + s2 * t2.a - 2 * n2 * s2 + n2 * (1 - e2.a) + s2 * (1 - t2.a)) / i2, g: (a2 * e2.a + h2 * t2.a - 2 * a2 * h2 + a2 * (1 - e2.a) + h2 * (1 - t2.a)) / i2, b: (o2 * e2.a + l2 * t2.a - 2 * o2 * l2 + o2 * (1 - e2.a) + l2 * (1 - t2.a)) / i2, a: i2 };
        }
        const Ot = function(t2, e2) {
          for (var r2 = arguments.length, i2 = new Array(r2 > 2 ? r2 - 2 : 0), n2 = 2; n2 < r2; n2++)
            i2[n2 - 2] = arguments[n2];
          return new Promise((r3, n3) => {
            i2.push((t3, e3) => {
              t3 && n3(t3), r3(e3);
            }), t2.bind(e2)(...i2);
          });
        }, Lt = {}, Ct = (t2, e2) => {
          Lt[t2] = e2;
        }, Ut = (t2) => {
          const e2 = t2.split("/").slice(-1);
          var r2;
          return (r2 = e2[e2.length - 1].split(".").pop(), Object.entries(Lt).find((t3) => t3[1].includes(r2)) || [])[0];
        };
        var zt = __webpack_require__(5025), Dt = __webpack_require__.n(zt), Nt = __webpack_require__(6551), Ft = __webpack_require__.n(Nt), jt = __webpack_require__(8834).lW;
        function Gt(t2) {
          return t2._exif && t2._exif.tags && t2._exif.tags.Orientation || 1;
        }
        async function Ht(t2, e2, r2) {
          const i2 = await async function(t3, e3) {
            const r3 = await Dt().fromBuffer(t3);
            return r3 ? r3.mime : e3 ? Ut(e3) : null;
          }(t2, e2);
          if ("string" != typeof i2)
            return r2(new Error("Could not find MIME for Buffer <" + e2 + ">"));
          this._originalMime = i2.toLowerCase();
          try {
            const e3 = this.getMIME();
            if (!this.constructor.decoders[e3])
              return l.call(this, "Unsupported MIME type: " + e3, r2);
            this.bitmap = this.constructor.decoders[e3](t2);
          } catch (t3) {
            return r2.call(this, t3, this);
          }
          try {
            this._exif = Ft().create(t2).parse(), function(t3) {
              if (Gt(t3) < 2)
                return;
              const e3 = function(t4) {
                const e4 = t4.getWidth(), r4 = t4.getHeight();
                switch (Gt(t4)) {
                  case 1:
                  default:
                    return null;
                  case 2:
                    return function(t5, r5) {
                      return [e4 - t5 - 1, r5];
                    };
                  case 3:
                    return function(t5, i3) {
                      return [e4 - t5 - 1, r4 - i3 - 1];
                    };
                  case 4:
                    return function(t5, e5) {
                      return [t5, r4 - e5 - 1];
                    };
                  case 5:
                    return function(t5, e5) {
                      return [e5, t5];
                    };
                  case 6:
                    return function(t5, e5) {
                      return [e5, r4 - t5 - 1];
                    };
                  case 7:
                    return function(t5, i3) {
                      return [e4 - i3 - 1, r4 - t5 - 1];
                    };
                  case 8:
                    return function(t5, r5) {
                      return [e4 - r5 - 1, t5];
                    };
                }
              }(t3), r3 = Gt(t3) > 4;
              !function(t4, e4, r4, i3) {
                const n2 = t4.bitmap.data, a2 = t4.bitmap.width, o2 = jt.alloc(n2.length);
                for (let t5 = 0; t5 < e4; t5++)
                  for (let s2 = 0; s2 < r4; s2++) {
                    const [r5, h2] = i3(t5, s2), l2 = e4 * s2 + t5 << 2, f2 = a2 * h2 + r5 << 2, u2 = n2.readUInt32BE(f2);
                    o2.writeUInt32BE(u2, l2);
                  }
                t4.bitmap.data = o2, t4.bitmap.width = e4, t4.bitmap.height = r4;
              }(t3, r3 ? t3.bitmap.height : t3.bitmap.width, r3 ? t3.bitmap.width : t3.bitmap.height, e3);
            }(this);
          } catch (t3) {
          }
          return r2.call(this, null, this), this;
        }
        function Wt(t2, e2) {
          if (t2 === et && (t2 = this.getMIME()), "string" != typeof t2)
            return l.call(this, "mime must be a string", e2);
          if ("function" != typeof e2)
            return l.call(this, "cb must be a function", e2);
          if (t2 = t2.toLowerCase(), this._rgba && this.constructor.hasAlpha[t2] ? this.bitmap.data = jt.from(this.bitmap.data) : this.bitmap.data = function(t3, e3) {
            return new t3(e3.bitmap.width, e3.bitmap.height, e3._background).composite(e3, 0, 0).bitmap;
          }(this.constructor, this).data, !this.constructor.encoders[t2])
            return l.call(this, "Unsupported MIME type: " + t2, e2);
          {
            const r2 = this.constructor.encoders[t2](this);
            r2 instanceof Promise ? r2.then((t3) => {
              e2.call(this, null, t3);
            }) : e2.call(this, null, r2);
          }
          return this;
        }
        function qt(t2) {
          return Ot(Wt, this, t2);
        }
        var Zt = __webpack_require__(8834).lW;
        function Yt(t2, e2, r2) {
          return (e2 = function(t3) {
            var e3 = function(t4, e4) {
              if ("object" != typeof t4 || null === t4)
                return t4;
              var r3 = t4[Symbol.toPrimitive];
              if (void 0 !== r3) {
                var i2 = r3.call(t4, "string");
                if ("object" != typeof i2)
                  return i2;
                throw new TypeError("@@toPrimitive must return a primitive value.");
              }
              return String(t4);
            }(t3);
            return "symbol" == typeof e3 ? e3 : String(e3);
          }(e2)) in t2 ? Object.defineProperty(t2, e2, { value: r2, enumerable: true, configurable: true, writable: true }) : t2[e2] = r2, t2;
        }
        const Vt = "0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ$_", Xt = [NaN, NaN];
        for (let t2 = 2; t2 < 65; t2++) {
          const e2 = c()(c().BIN, Vt.slice(0, t2))(new Array(65).join("1"));
          Xt.push(e2.length);
        }
        function Jt() {
        }
        function Qt(t2) {
          return Object.prototype.toString.call(t2).toLowerCase().indexOf("arraybuffer") > -1;
        }
        function Kt(t2) {
          const e2 = Zt.alloc(t2.byteLength), r2 = new Uint8Array(t2);
          for (let t3 = 0; t3 < e2.length; ++t3)
            e2[t3] = r2[t3];
          return e2;
        }
        function $t(t2, e2) {
          tt(t2, (r2, i2) => r2 ? e2(r2) : "object" == typeof i2 && Zt.isBuffer(i2) ? e2(null, i2) : "object" == typeof i2 && Qt(i2) ? e2(null, Kt(i2)) : new Error(`Could not load Buffer from <${t2.url}>`));
        }
        const te = { data: null, width: null, height: null };
        class ee extends s() {
          constructor() {
            for (var t2 = arguments.length, e2 = new Array(t2), r2 = 0; r2 < t2; r2++)
              e2[r2] = arguments[r2];
            super(), Yt(this, "bitmap", te), Yt(this, "_background", 0), Yt(this, "_originalMime", ee.MIME_PNG), Yt(this, "_exif", null), Yt(this, "_rgba", true), Yt(this, "writeAsync", (t3) => Ot(this.write, this, t3)), Yt(this, "getBase64Async", (t3) => Ot(this.getBase64, this, t3)), Yt(this, "getBuffer", Wt), Yt(this, "getBufferAsync", qt), Yt(this, "getPixelColour", this.getPixelColor), Yt(this, "setPixelColour", this.setPixelColor);
            const n2 = this;
            let a2 = Jt;
            function o2() {
              for (var t3 = arguments.length, e3 = new Array(t3), r3 = 0; r3 < t3; r3++)
                e3[r3] = arguments[r3];
              const [i2] = e3;
              (i2 || {}).methodName = "constructor", setTimeout(() => {
                i2 && a2 === Jt ? n2.emitError("constructor", i2) : i2 || n2.emitMulti("constructor", "initialized"), a2.call(n2, ...e3);
              }, 1);
            }
            if (Qt(e2[0]) && (e2[0] = Kt(e2[0])), "number" == typeof e2[0] && "number" == typeof e2[1] || parseInt(e2[0], 10) && parseInt(e2[1], 10)) {
              const t3 = parseInt(e2[0], 10), r3 = parseInt(e2[1], 10);
              if (a2 = e2[2], "number" == typeof e2[2] && (this._background = e2[2], a2 = e2[3]), "string" == typeof e2[2] && (this._background = ee.cssColorToHex(e2[2]), a2 = e2[3]), void 0 === a2 && (a2 = Jt), "function" != typeof a2)
                return l.call(this, "cb must be a function", o2);
              this.bitmap = { data: Zt.alloc(t3 * r3 * 4), width: t3, height: r3 };
              for (let t4 = 0; t4 < this.bitmap.data.length; t4 += 4)
                this.bitmap.data.writeUInt32BE(this._background, t4);
              o2(null, this);
            } else if ("object" == typeof e2[0] && e2[0].url) {
              if (a2 = e2[1] || Jt, "function" != typeof a2)
                return l.call(this, "cb must be a function", o2);
              $t(e2[0], (t3, r3) => {
                if (t3)
                  return l.call(this, t3, o2);
                this.parseBitmap(r3, e2[0].url, o2);
              });
            } else if (e2[0] instanceof ee) {
              const [t3] = e2;
              if (a2 = e2[1], void 0 === a2 && (a2 = Jt), "function" != typeof a2)
                return l.call(this, "cb must be a function", o2);
              this.bitmap = { data: Zt.from(t3.bitmap.data), width: t3.bitmap.width, height: t3.bitmap.height }, this._quality = t3._quality, this._deflateLevel = t3._deflateLevel, this._deflateStrategy = t3._deflateStrategy, this._filterType = t3._filterType, this._rgba = t3._rgba, this._background = t3._background, this._originalMime = t3._originalMime, o2(null, this);
            } else if ((s2 = e2[0]) && "object" == typeof s2 && "number" == typeof s2.width && "number" == typeof s2.height && (Zt.isBuffer(s2.data) || s2.data instanceof Uint8Array || "function" == typeof Uint8ClampedArray && s2.data instanceof Uint8ClampedArray) && (s2.data.length === s2.width * s2.height * 4 || s2.data.length === s2.width * s2.height * 3)) {
              const [t3] = e2;
              a2 = e2[1] || Jt;
              const r3 = t3.width * t3.height * 4 === t3.data.length ? Zt.from(t3.data) : function(t4) {
                if (t4.length % 3 != 0)
                  throw new Error("Buffer length is incorrect");
                const e3 = Zt.allocUnsafe(t4.length / 3 * 4);
                let r4 = 0;
                for (let i2 = 0; i2 < t4.length; i2++)
                  e3[r4] = t4[i2], (i2 + 1) % 3 == 0 && (e3[++r4] = 255), r4++;
                return e3;
              }(t3.data);
              this.bitmap = { data: r3, width: t3.width, height: t3.height }, o2(null, this);
            } else if ("string" == typeof e2[0]) {
              const t3 = e2[0];
              if (a2 = e2[1], void 0 === a2 && (a2 = Jt), "function" != typeof a2)
                return l.call(this, "cb must be a function", o2);
              !function(t4, e3) {
                i() && "function" == typeof i().readFile && !t4.match(/^(http|ftp)s?:\/\/./) ? i().readFile(t4, e3) : $t({ url: t4 }, e3);
              }(t3, (e3, r3) => {
                if (e3)
                  return l.call(this, e3, o2);
                this.parseBitmap(r3, t3, o2);
              });
            } else if ("object" == typeof e2[0] && Zt.isBuffer(e2[0])) {
              const t3 = e2[0];
              if (a2 = e2[1], "function" != typeof a2)
                return l.call(this, "cb must be a function", o2);
              this.parseBitmap(t3, null, o2);
            } else {
              a2 = e2[e2.length - 1], "function" != typeof a2 && (a2 = e2[e2.length - 2], "function" != typeof a2 && (a2 = Jt));
              const t3 = ee.__extraConstructors.find((t4) => t4.test(...e2));
              if (!t3)
                return l.call(this, "No matching constructor overloading was found. Please see the docs for how to call the Jimp constructor.", o2);
              new Promise((r3, i2) => {
                t3.run.call(this, r3, i2, ...e2);
              }).then(() => o2(null, this)).catch(o2);
            }
            var s2;
          }
          parseBitmap(t2, e2, r2) {
            Ht.call(this, t2, null, r2);
          }
          rgba(t2, e2) {
            return "boolean" != typeof t2 ? l.call(this, "bool must be a boolean, true for RGBA or false for RGB", e2) : (this._rgba = t2, h(e2) && e2.call(this, null, this), this);
          }
          emitMulti(t2, e2) {
            let r2 = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : {};
            r2 = Object.assign(r2, { methodName: t2, eventName: e2 }), this.emit("any", r2), t2 && this.emit(t2, r2), this.emit(e2, r2);
          }
          emitError(t2, e2) {
            this.emitMulti(t2, "error", e2);
          }
          getHeight() {
            return this.bitmap.height;
          }
          getWidth() {
            return this.bitmap.width;
          }
          inspect() {
            return "<Jimp " + (this.bitmap === te ? "pending..." : this.bitmap.width + "x" + this.bitmap.height) + ">";
          }
          toString() {
            return "[object Jimp]";
          }
          getMIME() {
            return this._originalMime || ee.MIME_PNG;
          }
          getExtension() {
            const t2 = this.getMIME();
            return (Lt[t2.toLowerCase()] || [])[0];
          }
          write(t2, e2) {
            if (!i() || !i().createWriteStream)
              throw new Error("Cant access the filesystem. You can use the getBase64 method.");
            if ("string" != typeof t2)
              return l.call(this, "path must be a string", e2);
            if (void 0 === e2 && (e2 = Jt), "function" != typeof e2)
              return l.call(this, "cb must be a function", e2);
            const r2 = Ut(t2) || this.getMIME(), n2 = a().parse(t2);
            return n2.dir && i().mkdirSync(n2.dir, { recursive: true }), this.getBuffer(r2, (r3, n3) => {
              if (r3)
                return l.call(this, r3, e2);
              const a2 = i().createWriteStream(t2);
              a2.on("open", () => {
                a2.write(n3), a2.end();
              }).on("error", (t3) => l.call(this, t3, e2)), a2.on("finish", () => {
                e2.call(this, null, this);
              });
            }), this;
          }
          getBase64(t2, e2) {
            return t2 === ee.AUTO && (t2 = this.getMIME()), "string" != typeof t2 ? l.call(this, "mime must be a string", e2) : "function" != typeof e2 ? l.call(this, "cb must be a function", e2) : (this.getBuffer(t2, function(r2, i2) {
              if (r2)
                return l.call(this, r2, e2);
              const n2 = "data:" + t2 + ";base64," + i2.toString("base64");
              e2.call(this, null, n2);
            }), this);
          }
          hash(t2, e2) {
            if ("function" == typeof (t2 = t2 || 64) && (e2 = t2, t2 = 64), "number" != typeof t2)
              return l.call(this, "base must be a number", e2);
            if (t2 < 2 || t2 > 64)
              return l.call(this, "base must be a number between 2 and 64", e2);
            let r2 = this.pHash();
            for (r2 = c()(c().BIN, Vt.slice(0, t2))(r2); r2.length < Xt[t2]; )
              r2 = "0" + r2;
            return h(e2) && e2.call(this, null, r2), r2;
          }
          pHash() {
            return new $().getHash(this);
          }
          distanceFromHash(t2) {
            const e2 = new $(), r2 = e2.getHash(this);
            return e2.distance(r2, t2);
          }
          getPixelIndex(t2, e2, r2, i2) {
            let n2, a2;
            if ("function" == typeof r2 && void 0 === i2 && (i2 = r2, r2 = null), r2 || (r2 = ee.EDGE_EXTEND), "number" != typeof t2 || "number" != typeof e2)
              return l.call(this, "x and y must be numbers", i2);
            n2 = t2 = Math.round(t2), a2 = e2 = Math.round(e2), r2 === ee.EDGE_EXTEND && (t2 < 0 && (n2 = 0), t2 >= this.bitmap.width && (n2 = this.bitmap.width - 1), e2 < 0 && (a2 = 0), e2 >= this.bitmap.height && (a2 = this.bitmap.height - 1)), r2 === ee.EDGE_WRAP && (t2 < 0 && (n2 = this.bitmap.width + t2), t2 >= this.bitmap.width && (n2 = t2 % this.bitmap.width), e2 < 0 && (a2 = this.bitmap.height + e2), e2 >= this.bitmap.height && (a2 = e2 % this.bitmap.height));
            let o2 = this.bitmap.width * a2 + n2 << 2;
            return (n2 < 0 || n2 >= this.bitmap.width) && (o2 = -1), (a2 < 0 || a2 >= this.bitmap.height) && (o2 = -1), h(i2) && i2.call(this, null, o2), o2;
          }
          getPixelColor(t2, e2, r2) {
            if ("number" != typeof t2 || "number" != typeof e2)
              return l.call(this, "x and y must be numbers", r2);
            const i2 = this.getPixelIndex(t2, e2), n2 = this.bitmap.data.readUInt32BE(i2);
            return h(r2) && r2.call(this, null, n2), n2;
          }
          setPixelColor(t2, e2, r2, i2) {
            if ("number" != typeof t2 || "number" != typeof e2 || "number" != typeof r2)
              return l.call(this, "hex, x and y must be numbers", i2);
            const n2 = this.getPixelIndex(e2, r2);
            return this.bitmap.data.writeUInt32BE(t2, n2), h(i2) && i2.call(this, null, this), this;
          }
          hasAlpha() {
            const { width: t2, height: e2, data: r2 } = this.bitmap, i2 = t2 * e2 << 2;
            for (let t3 = 3; t3 < i2; t3 += 4)
              if (255 !== r2[t3])
                return true;
            return false;
          }
          scanIterator(t2, e2, r2, i2) {
            return "number" != typeof t2 || "number" != typeof e2 ? l.call(this, "x and y must be numbers") : "number" != typeof r2 || "number" != typeof i2 ? l.call(this, "w and h must be numbers") : function* (t3, e3, r3, i3, n2) {
              e3 = Math.round(e3), r3 = Math.round(r3), i3 = Math.round(i3), n2 = Math.round(n2);
              for (let a2 = r3; a2 < r3 + n2; a2++)
                for (let r4 = e3; r4 < e3 + i3; r4++) {
                  const e4 = t3.bitmap.width * a2 + r4 << 2;
                  yield { x: r4, y: a2, idx: e4, image: t3 };
                }
            }(this, t2, e2, r2, i2);
          }
        }
        function re(t2) {
          let e2 = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : ee;
          Object.entries(t2).forEach((t3) => {
            let [r2, i2] = t3;
            e2[r2] = i2;
          });
        }
        function ie(t2) {
          let e2 = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : ee;
          Object.entries(t2).forEach((t3) => {
            let [r2, i2] = t3;
            e2.prototype[r2] = i2;
          });
        }
        function ne(t2, e2, r2) {
          const i2 = "before-" + e2, n2 = e2.replace(/e$/, "") + "ed";
          ee.prototype[t2] = function() {
            let e3;
            for (var a2 = arguments.length, o2 = new Array(a2), s2 = 0; s2 < a2; s2++)
              o2[s2] = arguments[s2];
            const h2 = o2[r2.length - 1], l2 = this;
            let f2;
            "function" == typeof h2 ? (e3 = function() {
              for (var e4 = arguments.length, r3 = new Array(e4), i3 = 0; i3 < e4; i3++)
                r3[i3] = arguments[i3];
              const [a3, o3] = r3;
              a3 ? l2.emitError(t2, a3) : l2.emitMulti(t2, n2, { [t2]: o3 }), h2.apply(this, r3);
            }, o2[o2.length - 1] = e3) : e3 = false, this.emitMulti(t2, i2);
            try {
              f2 = r2.apply(this, o2), e3 || this.emitMulti(t2, n2, { [t2]: f2 });
            } catch (e4) {
              e4.methodName = t2, this.emitError(t2, e4);
            }
            return f2;
          }, ee.prototype[t2 + "Quiet"] = r2;
        }
        function ae(t2, e2) {
          ne(t2, "change", e2);
        }
        re(t), ie({ composite: function(t2, r2, i2) {
          let n2 = arguments.length > 3 && void 0 !== arguments[3] ? arguments[3] : {}, a2 = arguments.length > 4 ? arguments[4] : void 0;
          if ("function" == typeof n2 && (a2 = n2, n2 = {}), !(t2 instanceof this.constructor))
            return l.call(this, "The source must be a Jimp image", a2);
          if ("number" != typeof r2 || "number" != typeof i2)
            return l.call(this, "x and y must be numbers", a2);
          let { mode: o2, opacitySource: s2, opacityDest: f2 } = n2;
          o2 || (o2 = ht), ("number" != typeof s2 || s2 < 0 || s2 > 1) && (s2 = 1), ("number" != typeof f2 || f2 < 0 || f2 > 1) && (f2 = 1);
          const u2 = e[o2];
          r2 = Math.round(r2), i2 = Math.round(i2);
          const c2 = this;
          return 1 !== f2 && c2.opacity(f2), t2.scanQuiet(0, 0, t2.bitmap.width, t2.bitmap.height, function(t3, e2, n3) {
            const a3 = c2.getPixelIndex(r2 + t3, i2 + e2, vt);
            if (-1 === a3)
              return;
            const o3 = u2({ r: this.bitmap.data[n3 + 0] / 255, g: this.bitmap.data[n3 + 1] / 255, b: this.bitmap.data[n3 + 2] / 255, a: this.bitmap.data[n3 + 3] / 255 }, { r: c2.bitmap.data[a3 + 0] / 255, g: c2.bitmap.data[a3 + 1] / 255, b: c2.bitmap.data[a3 + 2] / 255, a: c2.bitmap.data[a3 + 3] / 255 }, s2);
            c2.bitmap.data[a3 + 0] = this.constructor.limit255(255 * o3.r), c2.bitmap.data[a3 + 1] = this.constructor.limit255(255 * o3.g), c2.bitmap.data[a3 + 2] = this.constructor.limit255(255 * o3.b), c2.bitmap.data[a3 + 3] = this.constructor.limit255(255 * o3.a);
          }), h(a2) && a2.call(this, null, this), this;
        } }), ee.__extraConstructors = [], ee.appendConstructorOption = function(t2, e2, r2) {
          ee.__extraConstructors.push({ name: t2, test: e2, run: r2 });
        }, ee.read = function() {
          for (var t2 = arguments.length, e2 = new Array(t2), r2 = 0; r2 < t2; r2++)
            e2[r2] = arguments[r2];
          return new Promise((t3, r3) => {
            new ee(...e2, (e3, i2) => {
              e3 ? r3(e3) : t3(i2);
            });
          });
        }, ee.create = ee.read, ee.rgbaToInt = function(t2, e2, r2, i2, n2) {
          if ("number" != typeof t2 || "number" != typeof e2 || "number" != typeof r2 || "number" != typeof i2)
            return l.call(this, "r, g, b and a must be numbers", n2);
          if (t2 < 0 || t2 > 255)
            return l.call(this, "r must be between 0 and 255", n2);
          if ((e2 < 0 || e2 > 255) && l.call(this, "g must be between 0 and 255", n2), r2 < 0 || r2 > 255)
            return l.call(this, "b must be between 0 and 255", n2);
          if (i2 < 0 || i2 > 255)
            return l.call(this, "a must be between 0 and 255", n2);
          let a2 = 255 & t2;
          return a2 <<= 8, a2 |= 255 & e2, a2 <<= 8, a2 |= 255 & r2, a2 <<= 8, a2 |= 255 & i2, a2 >>>= 0, h(n2) && n2.call(this, null, a2), a2;
        }, ee.intToRGBA = function(t2, e2) {
          if ("number" != typeof t2)
            return l.call(this, "i must be a number", e2);
          const r2 = {};
          return r2.r = Math.floor(t2 / Math.pow(256, 3)), r2.g = Math.floor((t2 - r2.r * Math.pow(256, 3)) / Math.pow(256, 2)), r2.b = Math.floor((t2 - r2.r * Math.pow(256, 3) - r2.g * Math.pow(256, 2)) / Math.pow(256, 1)), r2.a = Math.floor((t2 - r2.r * Math.pow(256, 3) - r2.g * Math.pow(256, 2) - r2.b * Math.pow(256, 1)) / Math.pow(256, 0)), h(e2) && e2.call(this, null, r2), r2;
        }, ee.cssColorToHex = function(t2) {
          return "number" == typeof (t2 = t2 || 0) ? Number(t2) : parseInt(_(t2).toHex8(), 16);
        }, ee.limit255 = function(t2) {
          return t2 = Math.max(t2, 0), Math.min(t2, 255);
        }, ee.diff = function(t2, e2) {
          let r2 = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : 0.1;
          if (!(t2 instanceof ee && e2 instanceof ee))
            return l.call(this, "img1 and img2 must be an Jimp images");
          const i2 = t2.bitmap, n2 = e2.bitmap;
          if (i2.width === n2.width && i2.height === n2.height || (i2.width * i2.height > n2.width * n2.height ? t2 = t2.cloneQuiet().resize(n2.width, n2.height) : e2 = e2.cloneQuiet().resize(i2.width, i2.height)), "number" != typeof r2 || r2 < 0 || r2 > 1)
            return l.call(this, "threshold must be a number between 0 and 1");
          const a2 = new ee(i2.width, i2.height, 4294967295);
          return { percent: p()(i2.data, n2.data, a2.bitmap.data, a2.bitmap.width, a2.bitmap.height, { threshold: r2 }) / (a2.bitmap.width * a2.bitmap.height), image: a2 };
        }, ee.distance = function(t2, e2) {
          const r2 = new $(), i2 = r2.getHash(t2), n2 = r2.getHash(e2);
          return r2.distance(i2, n2);
        }, ee.compareHashes = function(t2, e2) {
          return new $().distance(t2, e2);
        }, ee.colorDiff = function(t2, e2) {
          const r2 = (t3) => Math.pow(t3, 2), { max: i2 } = Math;
          return 0 === t2.a || t2.a || (t2.a = 255), 0 === e2.a || e2.a || (e2.a = 255), (i2(r2(t2.r - e2.r), r2(t2.r - e2.r - t2.a + e2.a)) + i2(r2(t2.g - e2.g), r2(t2.g - e2.g - t2.a + e2.a)) + i2(r2(t2.b - e2.b), r2(t2.b - e2.b - t2.a + e2.a))) / 195075;
        }, ne("clone", "clone", function(t2) {
          const e2 = new ee(this);
          return h(t2) && t2.call(e2, null, e2), e2;
        }), ae("background", function(t2, e2) {
          return "number" != typeof t2 ? l.call(this, "hex must be a hexadecimal rgba value", e2) : (this._background = t2, h(e2) && e2.call(this, null, this), this);
        }), ae("scan", function(t2, e2, r2, i2, n2, a2) {
          if ("number" != typeof t2 || "number" != typeof e2)
            return l.call(this, "x and y must be numbers", a2);
          if ("number" != typeof r2 || "number" != typeof i2)
            return l.call(this, "w and h must be numbers", a2);
          if ("function" != typeof n2)
            return l.call(this, "f must be a function", a2);
          const o2 = f(this, t2, e2, r2, i2, n2);
          return h(a2) && a2.call(this, null, o2), o2;
        });
        {
          let t2;
          "undefined" != typeof window && "object" == typeof window && (t2 = window), "undefined" != typeof self && "object" == typeof self && (t2 = self), t2.Jimp = ee, t2.Buffer = Zt;
        }
        const oe = ee;
        var se = __webpack_require__(643), he = __webpack_require__(2691), le = __webpack_require__.n(he);
        const fe = "image/jpeg", ue = () => ({ mime: { [fe]: ["jpeg", "jpg", "jpe"] }, constants: { MIME_JPEG: fe }, decoders: { [fe]: le().decode }, encoders: { [fe]: (t2) => le().encode(t2.bitmap, t2._quality).data }, class: { _quality: 100, quality(t2, e2) {
          return "number" != typeof t2 ? l.call(this, "n must be a number", e2) : t2 < 0 || t2 > 100 ? l.call(this, "n must be a number 0 - 100", e2) : (this._quality = Math.round(t2), h(e2) && e2.call(this, null, this), this);
        } } });
        var ce = __webpack_require__(9902);
        const de = "image/png", pe = () => ({ mime: { [de]: ["png"] }, constants: { MIME_PNG: de, PNG_FILTER_AUTO: -1, PNG_FILTER_NONE: 0, PNG_FILTER_SUB: 1, PNG_FILTER_UP: 2, PNG_FILTER_AVERAGE: 3, PNG_FILTER_PATH: 4 }, hasAlpha: { [de]: true }, decoders: { [de]: ce.PNG.sync.read }, encoders: { [de](t2) {
          const e2 = new ce.PNG({ width: t2.bitmap.width, height: t2.bitmap.height });
          return e2.data = t2.bitmap.data, ce.PNG.sync.write(e2, { deflateLevel: t2._deflateLevel, deflateStrategy: t2._deflateStrategy, filterType: t2._filterType, colorType: "number" == typeof t2._colorType ? t2._colorType : t2._rgba ? 6 : 2, inputHasAlpha: t2._rgba });
        } }, class: { _deflateLevel: 9, _deflateStrategy: 3, _filterType: -1, _colorType: null, deflateLevel(t2, e2) {
          return "number" != typeof t2 ? l.call(this, "l must be a number", e2) : t2 < 0 || t2 > 9 ? l.call(this, "l must be a number 0 - 9", e2) : (this._deflateLevel = Math.round(t2), h(e2) && e2.call(this, null, this), this);
        }, deflateStrategy(t2, e2) {
          return "number" != typeof t2 ? l.call(this, "s must be a number", e2) : t2 < 0 || t2 > 3 ? l.call(this, "s must be a number 0 - 3", e2) : (this._deflateStrategy = Math.round(t2), h(e2) && e2.call(this, null, this), this);
        }, filterType(t2, e2) {
          return "number" != typeof t2 ? l.call(this, "n must be a number", e2) : t2 < -1 || t2 > 4 ? l.call(this, "n must be -1 (auto) or a number 0 - 4", e2) : (this._filterType = Math.round(t2), h(e2) && e2.call(this, null, this), this);
        }, colorType(t2, e2) {
          return "number" != typeof t2 ? l.call(this, "s must be a number", e2) : 0 !== t2 && 2 !== t2 && 4 !== t2 && 6 !== t2 ? l.call(this, "s must be a number 0, 2, 4, 6.", e2) : (this._colorType = Math.round(t2), h(e2) && e2.call(this, null, this), this);
        } } });
        var me = __webpack_require__(486), ge = __webpack_require__.n(me);
        const be = "image/bmp", _e = "image/x-ms-bmp", ye = (t2) => {
          return f({ bitmap: e2 = ge().decode(t2) }, 0, 0, e2.width, e2.height, function(t3, r2, i2) {
            const n2 = this.bitmap.data[i2 + 0], a2 = this.bitmap.data[i2 + 1], o2 = this.bitmap.data[i2 + 2], s2 = this.bitmap.data[i2 + 3];
            this.bitmap.data[i2 + 0] = s2, this.bitmap.data[i2 + 1] = o2, this.bitmap.data[i2 + 2] = a2, this.bitmap.data[i2 + 3] = e2.is_with_alpha ? n2 : 255;
          }).bitmap;
          var e2;
        }, we = (t2) => ge().encode(function(t3) {
          return f(t3, 0, 0, t3.bitmap.width, t3.bitmap.height, function(t4, e2, r2) {
            const i2 = this.bitmap.data[r2 + 0], n2 = this.bitmap.data[r2 + 1], a2 = this.bitmap.data[r2 + 2], o2 = this.bitmap.data[r2 + 3];
            this.bitmap.data[r2 + 0] = o2, this.bitmap.data[r2 + 1] = a2, this.bitmap.data[r2 + 2] = n2, this.bitmap.data[r2 + 3] = i2;
          }).bitmap;
        }(t2)).data;
        var ve = __webpack_require__(9299), xe = __webpack_require__.n(ve), Ee = __webpack_require__(8834).lW;
        const ke = "image/tiff";
        var Se = __webpack_require__(63), Me = __webpack_require__(9455), Ae = __webpack_require__(8834).lW;
        const Ie = "image/gif", Be = [1, 57, 41, 21, 203, 34, 97, 73, 227, 91, 149, 62, 105, 45, 39, 137, 241, 107, 3, 173, 39, 71, 65, 238, 219, 101, 187, 87, 81, 151, 141, 133, 249, 117, 221, 209, 197, 187, 177, 169, 5, 153, 73, 139, 133, 127, 243, 233, 223, 107, 103, 99, 191, 23, 177, 171, 165, 159, 77, 149, 9, 139, 135, 131, 253, 245, 119, 231, 224, 109, 211, 103, 25, 195, 189, 23, 45, 175, 171, 83, 81, 79, 155, 151, 147, 9, 141, 137, 67, 131, 129, 251, 123, 30, 235, 115, 113, 221, 217, 53, 13, 51, 50, 49, 193, 189, 185, 91, 179, 175, 43, 169, 83, 163, 5, 79, 155, 19, 75, 147, 145, 143, 35, 69, 17, 67, 33, 65, 255, 251, 247, 243, 239, 59, 29, 229, 113, 111, 219, 27, 213, 105, 207, 51, 201, 199, 49, 193, 191, 47, 93, 183, 181, 179, 11, 87, 43, 85, 167, 165, 163, 161, 159, 157, 155, 77, 19, 75, 37, 73, 145, 143, 141, 35, 138, 137, 135, 67, 33, 131, 129, 255, 63, 250, 247, 61, 121, 239, 237, 117, 29, 229, 227, 225, 111, 55, 109, 216, 213, 211, 209, 207, 205, 203, 201, 199, 197, 195, 193, 48, 190, 47, 93, 185, 183, 181, 179, 178, 176, 175, 173, 171, 85, 21, 167, 165, 41, 163, 161, 5, 79, 157, 78, 154, 153, 19, 75, 149, 74, 147, 73, 144, 143, 71, 141, 140, 139, 137, 17, 135, 134, 133, 66, 131, 65, 129, 1], Te = [0, 9, 10, 10, 14, 12, 14, 14, 16, 15, 16, 15, 16, 15, 15, 17, 18, 17, 12, 18, 16, 17, 17, 19, 19, 18, 19, 18, 18, 19, 19, 19, 20, 19, 20, 20, 20, 20, 20, 20, 15, 20, 19, 20, 20, 20, 21, 21, 21, 20, 20, 20, 21, 18, 21, 21, 21, 21, 20, 21, 17, 21, 21, 21, 22, 22, 21, 22, 22, 21, 22, 21, 19, 22, 22, 19, 20, 22, 22, 21, 21, 21, 22, 22, 22, 18, 22, 22, 21, 22, 22, 23, 22, 20, 23, 22, 22, 23, 23, 21, 19, 21, 21, 21, 23, 23, 23, 22, 23, 23, 21, 23, 22, 23, 18, 22, 23, 20, 22, 23, 23, 23, 21, 22, 20, 22, 21, 22, 24, 24, 24, 24, 24, 22, 21, 24, 23, 23, 24, 21, 24, 23, 24, 22, 24, 24, 22, 24, 24, 22, 23, 24, 24, 24, 20, 23, 22, 23, 24, 24, 24, 24, 24, 24, 24, 23, 21, 23, 22, 23, 24, 24, 24, 22, 24, 24, 24, 23, 22, 24, 24, 25, 23, 25, 25, 23, 24, 25, 25, 24, 22, 25, 25, 25, 24, 23, 24, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 23, 25, 23, 24, 25, 25, 25, 25, 25, 25, 25, 25, 25, 24, 22, 25, 25, 23, 25, 25, 20, 24, 25, 24, 25, 25, 22, 24, 25, 24, 25, 24, 25, 25, 24, 25, 25, 25, 25, 22, 25, 25, 25, 24, 25, 24, 25, 18];
        var Re = __webpack_require__(8834).lW;
        function Pe(t2, e2, r2, i2) {
          const n2 = [0, 0, 0], a2 = (e2.length - 1) / 2;
          for (let o2 = 0; o2 < e2.length; o2 += 1)
            for (let s2 = 0; s2 < e2[o2].length; s2 += 1) {
              const h2 = t2.getPixelIndex(r2 + o2 - a2, i2 + s2 - a2);
              n2[0] += t2.bitmap.data[h2] * e2[o2][s2], n2[1] += t2.bitmap.data[h2 + 1] * e2[o2][s2], n2[2] += t2.bitmap.data[h2 + 2] * e2[o2][s2];
            }
          return n2;
        }
        const Oe = (t2) => null != t2;
        function Le(t2) {
          return this.scanQuiet(0, 0, this.bitmap.width, this.bitmap.height, function(t3, e2, r2) {
            const i2 = parseInt(0.2126 * this.bitmap.data[r2] + 0.7152 * this.bitmap.data[r2 + 1] + 0.0722 * this.bitmap.data[r2 + 2], 10);
            this.bitmap.data[r2] = i2, this.bitmap.data[r2 + 1] = i2, this.bitmap.data[r2 + 2] = i2;
          }), h(t2) && t2.call(this, null, this), this;
        }
        function Ce(t2, e2) {
          let r2 = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : 50;
          return { r: (e2.r - t2.r) * (r2 / 100) + t2.r, g: (e2.g - t2.g) * (r2 / 100) + t2.g, b: (e2.b - t2.b) * (r2 / 100) + t2.b };
        }
        function Ue(t2, e2) {
          return t2 && Array.isArray(t2) ? (t2 = t2.map((t3) => ("xor" !== t3.apply && "mix" !== t3.apply || (t3.params[0] = _(t3.params[0]).toRgb()), t3)), this.scanQuiet(0, 0, this.bitmap.width, this.bitmap.height, (r2, i2, n2) => {
            let a2 = { r: this.bitmap.data[n2], g: this.bitmap.data[n2 + 1], b: this.bitmap.data[n2 + 2] };
            const o2 = (t3, e3) => this.constructor.limit255(a2[t3] + e3);
            t2.forEach((t3) => {
              if ("mix" === t3.apply)
                a2 = Ce(a2, t3.params[0], t3.params[1]);
              else if ("tint" === t3.apply)
                a2 = Ce(a2, { r: 255, g: 255, b: 255 }, t3.params[0]);
              else if ("shade" === t3.apply)
                a2 = Ce(a2, { r: 0, g: 0, b: 0 }, t3.params[0]);
              else if ("xor" === t3.apply)
                a2 = { r: a2.r ^ t3.params[0].r, g: a2.g ^ t3.params[0].g, b: a2.b ^ t3.params[0].b };
              else if ("red" === t3.apply)
                a2.r = o2("r", t3.params[0]);
              else if ("green" === t3.apply)
                a2.g = o2("g", t3.params[0]);
              else if ("blue" === t3.apply)
                a2.b = o2("b", t3.params[0]);
              else {
                if ("hue" === t3.apply && (t3.apply = "spin"), a2 = _(a2), !a2[t3.apply])
                  return l.call(this, "action " + t3.apply + " not supported", e2);
                a2 = a2[t3.apply](...t3.params).toRgb();
              }
            }), this.bitmap.data[n2] = a2.r, this.bitmap.data[n2 + 1] = a2.g, this.bitmap.data[n2 + 2] = a2.b;
          }), h(e2) && e2.call(this, null, this), this) : l.call(this, "actions must be an array", e2);
        }
        Object.freeze({ LIGHTEN: "lighten", BRIGHTEN: "brighten", DARKEN: "darken", DESATURATE: "desaturate", SATURATE: "saturate", GREYSCALE: "greyscale", SPIN: "spin", HUE: "hue", MIX: "mix", TINT: "tint", SHADE: "shade", XOR: "xor", RED: "red", GREEN: "green", BLUE: "blue" });
        var ze = __webpack_require__(8834).lW;
        function De(t2) {
          const e2 = [1, 9, 3, 11, 13, 5, 15, 7, 4, 12, 2, 10, 16, 8, 14, 6];
          return this.scanQuiet(0, 0, this.bitmap.width, this.bitmap.height, function(t3, r2, i2) {
            const n2 = e2[((3 & r2) << 2) + t3 % 4];
            this.bitmap.data[i2] = Math.min(this.bitmap.data[i2] + n2, 255), this.bitmap.data[i2 + 1] = Math.min(this.bitmap.data[i2 + 1] + n2, 255), this.bitmap.data[i2 + 2] = Math.min(this.bitmap.data[i2 + 2] + n2, 255);
          }), h(t2) && t2.call(this, null, this), this;
        }
        var Ne = __webpack_require__(8834).lW;
        function Fe(t2, e2, r2) {
          if ("boolean" != typeof t2 || "boolean" != typeof e2)
            return l.call(this, "horizontal and vertical must be Booleans", r2);
          const i2 = Ne.alloc(this.bitmap.data.length);
          return this.scanQuiet(0, 0, this.bitmap.width, this.bitmap.height, function(r3, n2, a2) {
            const o2 = t2 ? this.bitmap.width - 1 - r3 : r3, s2 = e2 ? this.bitmap.height - 1 - n2 : n2, h2 = this.bitmap.width * s2 + o2 << 2, l2 = this.bitmap.data.readUInt32BE(a2);
            i2.writeUInt32BE(l2, h2);
          }), this.bitmap.data = Ne.from(i2), h(r2) && r2.call(this, null, this), this;
        }
        function je() {
          const t2 = { r: new Array(256).fill(0), g: new Array(256).fill(0), b: new Array(256).fill(0) };
          return this.scanQuiet(0, 0, this.bitmap.width, this.bitmap.height, function(e2, r2, i2) {
            t2.r[this.bitmap.data[i2 + 0]]++, t2.g[this.bitmap.data[i2 + 1]]++, t2.b[this.bitmap.data[i2 + 2]]++;
          }), t2;
        }
        const Ge = function(t2, e2, r2) {
          return 255 * (t2 - e2) / (r2 - e2);
        }, He = function(t2) {
          return [t2.findIndex((t3) => t3 > 0), 255 - t2.slice().reverse().findIndex((t3) => t3 > 0)];
        };
        var We = __webpack_require__(8058), qe = __webpack_require__.n(We);
        function Ze(t2, e2) {
          let r2 = 0;
          for (let i2 = 0; i2 < e2.length; i2++)
            if (t2.chars[e2[i2]]) {
              const n2 = t2.kernings[e2[i2]] && t2.kernings[e2[i2]][e2[i2 + 1]] ? t2.kernings[e2[i2]][e2[i2 + 1]] : 0;
              r2 += (t2.chars[e2[i2]].xadvance || 0) + n2;
            }
          return r2;
        }
        function Ye(t2, e2, r2) {
          const i2 = e2.replace(/[\r\n]+/g, " \n").split(" "), n2 = [];
          let a2 = [], o2 = 0;
          return i2.forEach((e3) => {
            const i3 = [...a2, e3].join(" "), s2 = Ze(t2, i3);
            s2 <= r2 && !e3.includes("\n") ? (s2 > o2 && (o2 = s2), a2.push(e3)) : (n2.push(a2), a2 = [e3.replace("\n", "")]);
          }), n2.push(a2), { lines: n2, longestLine: o2 };
        }
        function Ve(t2, e2, r2) {
          const { lines: i2 } = Ye(t2, e2, r2);
          return i2.length * t2.common.lineHeight;
        }
        function Xe(t2, e2, r2, i2, n2) {
          if (n2.width > 0 && n2.height > 0) {
            const a2 = e2.pages[n2.page];
            t2.blit(a2, r2 + n2.xoffset, i2 + n2.yoffset, n2.x, n2.y, n2.width, n2.height);
          }
          return t2;
        }
        function Je(t2, e2, r2, i2, n2) {
          for (let a2 = 0; a2 < i2.length; a2++) {
            let o2;
            o2 = t2.chars[i2[a2]] ? i2[a2] : /\s/.test(i2[a2]) ? "" : "?";
            const s2 = t2.chars[o2] || {}, h2 = t2.kernings[o2];
            Xe(this, t2, e2, r2, s2 || {}), e2 += (h2 && h2[i2[a2 + 1]] ? h2[i2[a2 + 1]] : 0) + (s2.xadvance || n2);
          }
        }
        const Qe = "//../";
        function Ke(t2, e2, r2, i2, n2, a2, o2) {
          this.widthOriginal = Math.abs(Math.floor(t2) || 0), this.heightOriginal = Math.abs(Math.floor(e2) || 0), this.targetWidth = Math.abs(Math.floor(r2) || 0), this.targetHeight = Math.abs(Math.floor(i2) || 0), this.colorChannels = n2 ? 4 : 3, this.interpolationPass = Boolean(a2), this.resizeCallback = "function" == typeof o2 ? o2 : function() {
          }, this.targetWidthMultipliedByChannels = this.targetWidth * this.colorChannels, this.originalWidthMultipliedByChannels = this.widthOriginal * this.colorChannels, this.originalHeightMultipliedByChannels = this.heightOriginal * this.colorChannels, this.widthPassResultSize = this.targetWidthMultipliedByChannels * this.heightOriginal, this.finalResultSize = this.targetWidthMultipliedByChannels * this.targetHeight, this.initialize();
        }
        Ke.prototype.initialize = function() {
          if (!(this.widthOriginal > 0 && this.heightOriginal > 0 && this.targetWidth > 0 && this.targetHeight > 0))
            throw new Error("Invalid settings specified for the resizer.");
          this.configurePasses();
        }, Ke.prototype.configurePasses = function() {
          this.widthOriginal === this.targetWidth ? this.resizeWidth = this.bypassResizer : (this.ratioWeightWidthPass = this.widthOriginal / this.targetWidth, this.ratioWeightWidthPass < 1 && this.interpolationPass ? (this.initializeFirstPassBuffers(true), this.resizeWidth = 4 === this.colorChannels ? this.resizeWidthInterpolatedRGBA : this.resizeWidthInterpolatedRGB) : (this.initializeFirstPassBuffers(false), this.resizeWidth = 4 === this.colorChannels ? this.resizeWidthRGBA : this.resizeWidthRGB)), this.heightOriginal === this.targetHeight ? this.resizeHeight = this.bypassResizer : (this.ratioWeightHeightPass = this.heightOriginal / this.targetHeight, this.ratioWeightHeightPass < 1 && this.interpolationPass ? (this.initializeSecondPassBuffers(true), this.resizeHeight = this.resizeHeightInterpolated) : (this.initializeSecondPassBuffers(false), this.resizeHeight = 4 === this.colorChannels ? this.resizeHeightRGBA : this.resizeHeightRGB));
        }, Ke.prototype._resizeWidthInterpolatedRGBChannels = function(t2, e2) {
          const r2 = e2 ? 4 : 3, i2 = this.ratioWeightWidthPass, n2 = this.widthBuffer;
          let a2, o2, s2 = 0, h2 = 0, l2 = 0, f2 = 0, u2 = 0;
          for (a2 = 0; s2 < 1 / 3; a2 += r2, s2 += i2)
            for (h2 = a2, l2 = 0; h2 < this.widthPassResultSize; l2 += this.originalWidthMultipliedByChannels, h2 += this.targetWidthMultipliedByChannels)
              n2[h2] = t2[l2], n2[h2 + 1] = t2[l2 + 1], n2[h2 + 2] = t2[l2 + 2], e2 && (n2[h2 + 3] = t2[l2 + 3]);
          for (s2 -= 1 / 3, o2 = this.widthOriginal - 1; s2 < o2; a2 += r2, s2 += i2)
            for (u2 = s2 % 1, f2 = 1 - u2, h2 = a2, l2 = Math.floor(s2) * r2; h2 < this.widthPassResultSize; l2 += this.originalWidthMultipliedByChannels, h2 += this.targetWidthMultipliedByChannels)
              n2[h2 + 0] = t2[l2 + 0] * f2 + t2[l2 + r2 + 0] * u2, n2[h2 + 1] = t2[l2 + 1] * f2 + t2[l2 + r2 + 1] * u2, n2[h2 + 2] = t2[l2 + 2] * f2 + t2[l2 + r2 + 2] * u2, e2 && (n2[h2 + 3] = t2[l2 + 3] * f2 + t2[l2 + r2 + 3] * u2);
          for (o2 = this.originalWidthMultipliedByChannels - r2; a2 < this.targetWidthMultipliedByChannels; a2 += r2)
            for (h2 = a2, l2 = o2; h2 < this.widthPassResultSize; l2 += this.originalWidthMultipliedByChannels, h2 += this.targetWidthMultipliedByChannels)
              n2[h2] = t2[l2], n2[h2 + 1] = t2[l2 + 1], n2[h2 + 2] = t2[l2 + 2], e2 && (n2[h2 + 3] = t2[l2 + 3]);
          return n2;
        }, Ke.prototype._resizeWidthRGBChannels = function(t2, e2) {
          const r2 = e2 ? 4 : 3, i2 = this.ratioWeightWidthPass, n2 = 1 / i2, a2 = this.originalWidthMultipliedByChannels - r2 + 1, o2 = this.targetWidthMultipliedByChannels - r2 + 1, s2 = this.outputWidthWorkBench, h2 = this.widthBuffer, l2 = this.outputWidthWorkBenchOpaquePixelsCount;
          let f2 = 0, u2 = 0, c2 = 0, d2 = 0, p2 = 0, m2 = 0, g2 = 0, b2 = 1, _2 = 0, y2 = 0, w2 = 0, v2 = 0;
          do {
            for (p2 = 0; p2 < this.originalHeightMultipliedByChannels; )
              s2[p2++] = 0, s2[p2++] = 0, s2[p2++] = 0, e2 && (s2[p2++] = 0, l2[p2 / r2 - 1] = 0);
            f2 = i2;
            do {
              for (u2 = 1 + c2 - d2, b2 = Math.min(f2, u2), p2 = 0, m2 = c2; p2 < this.originalHeightMultipliedByChannels; m2 += a2)
                _2 = t2[m2], y2 = t2[++m2], w2 = t2[++m2], v2 = e2 ? t2[++m2] : 255, s2[p2++] += (v2 ? _2 : 0) * b2, s2[p2++] += (v2 ? y2 : 0) * b2, s2[p2++] += (v2 ? w2 : 0) * b2, e2 && (s2[p2++] += v2 * b2, l2[p2 / r2 - 1] += v2 ? b2 : 0);
              if (!(f2 >= u2)) {
                d2 += f2;
                break;
              }
              c2 += r2, d2 = c2, f2 -= u2;
            } while (f2 > 0 && c2 < this.originalWidthMultipliedByChannels);
            for (p2 = 0, m2 = g2; p2 < this.originalHeightMultipliedByChannels; m2 += o2)
              f2 = e2 ? l2[p2 / r2] : 1, b2 = e2 ? f2 ? 1 / f2 : 0 : n2, h2[m2] = s2[p2++] * b2, h2[++m2] = s2[p2++] * b2, h2[++m2] = s2[p2++] * b2, e2 && (h2[++m2] = s2[p2++] * n2);
            g2 += r2;
          } while (g2 < this.targetWidthMultipliedByChannels);
          return h2;
        }, Ke.prototype._resizeHeightRGBChannels = function(t2, e2) {
          const r2 = this.ratioWeightHeightPass, i2 = 1 / r2, n2 = this.outputHeightWorkBench, a2 = this.heightBuffer, o2 = this.outputHeightWorkBenchOpaquePixelsCount;
          let s2 = 0, h2 = 0, l2 = 0, f2 = 0, u2 = 0, c2 = 0, d2 = 0, p2 = 1, m2 = 0, g2 = 0, b2 = 0, _2 = 0;
          do {
            for (u2 = 0; u2 < this.targetWidthMultipliedByChannels; )
              n2[u2++] = 0, n2[u2++] = 0, n2[u2++] = 0, e2 && (n2[u2++] = 0, o2[u2 / 4 - 1] = 0);
            s2 = r2;
            do {
              for (h2 = 1 + l2 - f2, p2 = Math.min(s2, h2), d2 = l2, u2 = 0; u2 < this.targetWidthMultipliedByChannels; )
                m2 = t2[d2++], g2 = t2[d2++], b2 = t2[d2++], _2 = e2 ? t2[d2++] : 255, n2[u2++] += (_2 ? m2 : 0) * p2, n2[u2++] += (_2 ? g2 : 0) * p2, n2[u2++] += (_2 ? b2 : 0) * p2, e2 && (n2[u2++] += _2 * p2, o2[u2 / 4 - 1] += _2 ? p2 : 0);
              if (!(s2 >= h2)) {
                f2 += s2;
                break;
              }
              l2 = d2, f2 = l2, s2 -= h2;
            } while (s2 > 0 && l2 < this.widthPassResultSize);
            for (u2 = 0; u2 < this.targetWidthMultipliedByChannels; )
              s2 = e2 ? o2[u2 / 4] : 1, p2 = e2 ? s2 ? 1 / s2 : 0 : i2, a2[c2++] = Math.round(n2[u2++] * p2), a2[c2++] = Math.round(n2[u2++] * p2), a2[c2++] = Math.round(n2[u2++] * p2), e2 && (a2[c2++] = Math.round(n2[u2++] * i2));
          } while (c2 < this.finalResultSize);
          return a2;
        }, Ke.prototype.resizeWidthInterpolatedRGB = function(t2) {
          return this._resizeWidthInterpolatedRGBChannels(t2, false);
        }, Ke.prototype.resizeWidthInterpolatedRGBA = function(t2) {
          return this._resizeWidthInterpolatedRGBChannels(t2, true);
        }, Ke.prototype.resizeWidthRGB = function(t2) {
          return this._resizeWidthRGBChannels(t2, false);
        }, Ke.prototype.resizeWidthRGBA = function(t2) {
          return this._resizeWidthRGBChannels(t2, true);
        }, Ke.prototype.resizeHeightInterpolated = function(t2) {
          const e2 = this.ratioWeightHeightPass, r2 = this.heightBuffer;
          let i2, n2 = 0, a2 = 0, o2 = 0, s2 = 0, h2 = 0, l2 = 0, f2 = 0;
          for (; n2 < 1 / 3; n2 += e2)
            for (o2 = 0; o2 < this.targetWidthMultipliedByChannels; )
              r2[a2++] = Math.round(t2[o2++]);
          for (n2 -= 1 / 3, i2 = this.heightOriginal - 1; n2 < i2; n2 += e2)
            for (f2 = n2 % 1, l2 = 1 - f2, s2 = Math.floor(n2) * this.targetWidthMultipliedByChannels, h2 = s2 + this.targetWidthMultipliedByChannels, o2 = 0; o2 < this.targetWidthMultipliedByChannels; ++o2)
              r2[a2++] = Math.round(t2[s2++] * l2 + t2[h2++] * f2);
          for (; a2 < this.finalResultSize; )
            for (o2 = 0, s2 = i2 * this.targetWidthMultipliedByChannels; o2 < this.targetWidthMultipliedByChannels; ++o2)
              r2[a2++] = Math.round(t2[s2++]);
          return r2;
        }, Ke.prototype.resizeHeightRGB = function(t2) {
          return this._resizeHeightRGBChannels(t2, false);
        }, Ke.prototype.resizeHeightRGBA = function(t2) {
          return this._resizeHeightRGBChannels(t2, true);
        }, Ke.prototype.resize = function(t2) {
          this.resizeCallback(this.resizeHeight(this.resizeWidth(t2)));
        }, Ke.prototype.bypassResizer = function(t2) {
          return t2;
        }, Ke.prototype.initializeFirstPassBuffers = function(t2) {
          this.widthBuffer = this.generateFloatBuffer(this.widthPassResultSize), t2 || (this.outputWidthWorkBench = this.generateFloatBuffer(this.originalHeightMultipliedByChannels), this.colorChannels > 3 && (this.outputWidthWorkBenchOpaquePixelsCount = this.generateFloat64Buffer(this.heightOriginal)));
        }, Ke.prototype.initializeSecondPassBuffers = function(t2) {
          this.heightBuffer = this.generateUint8Buffer(this.finalResultSize), t2 || (this.outputHeightWorkBench = this.generateFloatBuffer(this.targetWidthMultipliedByChannels), this.colorChannels > 3 && (this.outputHeightWorkBenchOpaquePixelsCount = this.generateFloat64Buffer(this.targetWidth)));
        }, Ke.prototype.generateFloatBuffer = function(t2) {
          try {
            return new Float32Array(t2);
          } catch (t3) {
            return [];
          }
        }, Ke.prototype.generateFloat64Buffer = function(t2) {
          try {
            return new Float64Array(t2);
          } catch (t3) {
            return [];
          }
        }, Ke.prototype.generateUint8Buffer = function(t2) {
          try {
            return new Uint8Array(t2);
          } catch (t3) {
            return [];
          }
        };
        const $e = Ke;
        var tr = __webpack_require__(8834).lW;
        const er = { nearestNeighbor(t2, e2) {
          const r2 = t2.width, i2 = t2.height, n2 = e2.width, a2 = e2.height, o2 = t2.data, s2 = e2.data;
          for (let t3 = 0; t3 < a2; t3++)
            for (let e3 = 0; e3 < n2; e3++) {
              let h2 = 4 * (t3 * n2 + e3), l2 = 4 * (Math.floor(t3 * i2 / a2) * r2 + Math.floor(e3 * r2 / n2));
              s2[h2++] = o2[l2++], s2[h2++] = o2[l2++], s2[h2++] = o2[l2++], s2[h2++] = o2[l2++];
            }
        }, bilinearInterpolation(t2, e2) {
          const r2 = t2.width, i2 = t2.height, n2 = e2.width, a2 = e2.height, o2 = t2.data, s2 = e2.data, h2 = function(t3, e3, r3, i3, n3) {
            return e3 === i3 ? r3 : Math.round((t3 - e3) * n3 + (i3 - t3) * r3);
          }, l2 = function(t3, e3, i3, n3, a3, l3, f2, u2) {
            let c2 = 4 * (f2 * r2 + n3) + e3, d2 = 4 * (f2 * r2 + a3) + e3;
            const p2 = h2(i3, n3, o2[c2], a3, o2[d2]);
            if (u2 === f2)
              s2[t3 + e3] = p2;
            else {
              c2 = 4 * (u2 * r2 + n3) + e3, d2 = 4 * (u2 * r2 + a3) + e3;
              const m2 = h2(i3, n3, o2[c2], a3, o2[d2]);
              s2[t3 + e3] = h2(l3, f2, p2, u2, m2);
            }
          };
          for (let t3 = 0; t3 < a2; t3++)
            for (let e3 = 0; e3 < n2; e3++) {
              const o3 = 4 * (t3 * n2 + e3), s3 = e3 * r2 / n2, h3 = Math.floor(s3), f2 = Math.min(Math.ceil(s3), r2 - 1), u2 = t3 * i2 / a2, c2 = Math.floor(u2), d2 = Math.min(Math.ceil(u2), i2 - 1);
              l2(o3, 0, s3, h3, f2, u2, c2, d2), l2(o3, 1, s3, h3, f2, u2, c2, d2), l2(o3, 2, s3, h3, f2, u2, c2, d2), l2(o3, 3, s3, h3, f2, u2, c2, d2);
            }
        }, _interpolate2D(t2, e2, r2, i2) {
          const n2 = t2.data, a2 = e2.data, o2 = t2.width, s2 = t2.height, h2 = e2.width, l2 = e2.height, f2 = Math.max(1, Math.floor(o2 / h2)), u2 = h2 * f2, c2 = Math.max(1, Math.floor(s2 / l2)), d2 = l2 * c2, p2 = tr.alloc(u2 * s2 * 4);
          for (let t3 = 0; t3 < s2; t3++)
            for (let e3 = 0; e3 < u2; e3++) {
              const r3 = e3 * (o2 - 1) / u2, a3 = Math.floor(r3), s3 = r3 - a3, h3 = 4 * (t3 * o2 + a3), l3 = 4 * (t3 * u2 + e3);
              for (let t4 = 0; t4 < 4; t4++) {
                const e4 = h3 + t4, r4 = a3 > 0 ? n2[e4 - 4] : 2 * n2[e4] - n2[e4 + 4], f3 = n2[e4], u3 = n2[e4 + 4], c3 = a3 < o2 - 2 ? n2[e4 + 8] : 2 * n2[e4 + 4] - n2[e4];
                p2[l3 + t4] = i2(r4, f3, u3, c3, s3);
              }
            }
          const m2 = tr.alloc(u2 * d2 * 4);
          for (let t3 = 0; t3 < d2; t3++)
            for (let e3 = 0; e3 < u2; e3++) {
              const r3 = t3 * (s2 - 1) / d2, n3 = Math.floor(r3), a3 = r3 - n3, o3 = 4 * (n3 * u2 + e3), h3 = 4 * (t3 * u2 + e3);
              for (let t4 = 0; t4 < 4; t4++) {
                const e4 = o3 + t4, r4 = n3 > 0 ? p2[e4 - 4 * u2] : 2 * p2[e4] - p2[e4 + 4 * u2], l3 = p2[e4], f3 = p2[e4 + 4 * u2], c3 = n3 < s2 - 2 ? p2[e4 + 8 * u2] : 2 * p2[e4 + 4 * u2] - p2[e4];
                m2[h3 + t4] = i2(r4, l3, f3, c3, a3);
              }
            }
          const g2 = f2 * c2;
          if (g2 > 1)
            for (let t3 = 0; t3 < l2; t3++)
              for (let e3 = 0; e3 < h2; e3++) {
                let r3 = 0, i3 = 0, n3 = 0, o3 = 0, s3 = 0;
                for (let a3 = 0; a3 < c2; a3++) {
                  const h3 = t3 * c2 + a3;
                  for (let t4 = 0; t4 < f2; t4++) {
                    const a4 = 4 * (h3 * u2 + (e3 * f2 + t4)), l4 = m2[a4 + 3];
                    l4 && (r3 += m2[a4], i3 += m2[a4 + 1], n3 += m2[a4 + 2], s3++), o3 += l4;
                  }
                }
                const l3 = 4 * (t3 * h2 + e3);
                a2[l3] = s3 ? Math.round(r3 / s3) : 0, a2[l3 + 1] = s3 ? Math.round(i3 / s3) : 0, a2[l3 + 2] = s3 ? Math.round(n3 / s3) : 0, a2[l3 + 3] = Math.round(o3 / g2);
              }
          else
            e2.data = m2;
        }, bicubicInterpolation(t2, e2, r2) {
          return this._interpolate2D(t2, e2, r2, function(t3, e3, r3, i2, n2) {
            const a2 = i2 - r3 - t3 + e3, o2 = t3 - e3 - a2, s2 = r3 - t3, h2 = e3;
            return Math.max(0, Math.min(255, a2 * (n2 * n2 * n2) + o2 * (n2 * n2) + s2 * n2 + h2));
          });
        }, hermiteInterpolation(t2, e2, r2) {
          return this._interpolate2D(t2, e2, r2, function(t3, e3, r3, i2, n2) {
            const a2 = e3, o2 = 0.5 * (r3 - t3), s2 = t3 - 2.5 * e3 + 2 * r3 - 0.5 * i2, h2 = 0.5 * (i2 - t3) + 1.5 * (e3 - r3);
            return Math.max(0, Math.min(255, Math.round(((h2 * n2 + s2) * n2 + o2) * n2 + a2)));
          });
        }, bezierInterpolation(t2, e2, r2) {
          return this._interpolate2D(t2, e2, r2, function(t3, e3, r3, i2, n2) {
            const a2 = 1 - n2, o2 = e3 * a2 * a2 * a2, s2 = 3 * (e3 + (r3 - t3) / 4) * a2 * a2 * n2, h2 = 3 * (r3 - (i2 - e3) / 4) * a2 * n2 * n2, l2 = r3 * n2 * n2 * n2;
            return Math.max(0, Math.min(255, Math.round(o2 + s2 + h2 + l2)));
          });
        } }, rr = er;
        var ir = __webpack_require__(8834).lW, nr = __webpack_require__(8834).lW;
        function ar(t2) {
          if (Math.abs(t2) % 90 != 0)
            throw new Error("Unsupported matrix rotation degree");
          if (t2 %= 360, 0 === Math.abs(t2))
            return;
          const e2 = this.bitmap.width, r2 = this.bitmap.height;
          let i2;
          switch (t2) {
            case 90:
            case -270:
              i2 = 90;
              break;
            case 180:
            case -180:
              i2 = 180;
              break;
            case 270:
            case -90:
              i2 = -90;
              break;
            default:
              throw new Error("Unsupported matrix rotation degree");
          }
          const n2 = 180 === i2 ? e2 : r2, a2 = 180 === i2 ? r2 : e2, o2 = nr.alloc(this.bitmap.data.length);
          function s2(t3, e3) {
            return function(e4, r3) {
              return r3 * t3 + e4 << 2;
            };
          }
          const h2 = s2(e2), l2 = s2(n2);
          for (let t3 = 0; t3 < e2; t3++)
            for (let n3 = 0; n3 < r2; n3++) {
              const a3 = h2(t3, n3), s3 = this.bitmap.data.readUInt32BE(a3);
              let f2;
              switch (i2) {
                case 90:
                  f2 = l2(n3, e2 - t3 - 1);
                  break;
                case -90:
                  f2 = l2(r2 - n3 - 1, t3);
                  break;
                case 180:
                  f2 = l2(e2 - t3 - 1, r2 - n3 - 1);
                  break;
                default:
                  throw new Error("Unsupported matrix rotation angle");
              }
              o2.writeUInt32BE(s3, f2);
            }
          this.bitmap.data = o2, this.bitmap.width = n2, this.bitmap.height = a2;
        }
        function or(t2, e2) {
          const r2 = (t2 %= 360) * Math.PI / 180, i2 = Math.cos(r2), n2 = Math.sin(r2);
          let a2 = this.bitmap.width, o2 = this.bitmap.height;
          if (true === e2 || "string" == typeof e2) {
            a2 = Math.ceil(Math.abs(this.bitmap.width * i2) + Math.abs(this.bitmap.height * n2)) + 1, o2 = Math.ceil(Math.abs(this.bitmap.width * n2) + Math.abs(this.bitmap.height * i2)) + 1, a2 % 2 != 0 && a2++, o2 % 2 != 0 && o2++;
            const t3 = this.cloneQuiet();
            this.scanQuiet(0, 0, this.bitmap.width, this.bitmap.height, function(t4, e3, r4) {
              this.bitmap.data.writeUInt32BE(this._background, r4);
            });
            const r3 = Math.max(a2, o2, this.bitmap.width, this.bitmap.height);
            this.resize(r3, r3, e2), this.blit(t3, this.bitmap.width / 2 - t3.bitmap.width / 2, this.bitmap.height / 2 - t3.bitmap.height / 2);
          }
          const s2 = this.bitmap.width, h2 = this.bitmap.height, l2 = nr.alloc(this.bitmap.data.length);
          function f2(t3, e3) {
            return function(r3, i3) {
              return { x: r3 + t3, y: i3 + e3 };
            };
          }
          const u2 = f2(-s2 / 2, -h2 / 2), c2 = f2(s2 / 2 + 0.5, h2 / 2 + 0.5);
          for (let t3 = 1; t3 <= h2; t3++)
            for (let e3 = 1; e3 <= s2; e3++) {
              const r3 = u2(e3, t3), a3 = c2(i2 * r3.x - n2 * r3.y, i2 * r3.y + n2 * r3.x), o3 = s2 * (t3 - 1) + e3 - 1 << 2;
              if (a3.x >= 0 && a3.x < s2 && a3.y >= 0 && a3.y < h2) {
                const t4 = (s2 * (0 | a3.y) + a3.x | 0) << 2, e4 = this.bitmap.data.readUInt32BE(t4);
                l2.writeUInt32BE(e4, o3);
              } else
                l2.writeUInt32BE(this._background, o3);
            }
          if (this.bitmap.data = l2, true === e2 || "string" == typeof e2) {
            const t3 = s2 / 2 - a2 / 2, e3 = h2 / 2 - o2 / 2;
            this.crop(t3, e3, a2, o2);
          }
        }
        const sr = [() => ({ blit(t2, e2, r2, i2, n2, a2, o2, s2) {
          if (!(t2 instanceof this.constructor))
            return l.call(this, "The source must be a Jimp image", s2);
          if ("number" != typeof e2 || "number" != typeof r2)
            return l.call(this, "x and y must be numbers", s2);
          if ("function" == typeof i2)
            s2 = i2, i2 = 0, n2 = 0, a2 = t2.bitmap.width, o2 = t2.bitmap.height;
          else {
            if (typeof i2 != typeof n2 || typeof n2 != typeof a2 || typeof a2 != typeof o2)
              return l.call(this, "srcx, srcy, srcw, srch must be numbers", s2);
            i2 = i2 || 0, n2 = n2 || 0, a2 = a2 || t2.bitmap.width, o2 = o2 || t2.bitmap.height;
          }
          e2 = Math.round(e2), r2 = Math.round(r2), i2 = Math.round(i2), n2 = Math.round(n2), a2 = Math.round(a2), o2 = Math.round(o2);
          const f2 = this.bitmap.width, u2 = this.bitmap.height, c2 = this;
          return t2.scanQuiet(i2, n2, a2, o2, function(t3, a3, o3) {
            const s3 = e2 + t3 - i2, h2 = r2 + a3 - n2;
            if (s3 >= 0 && h2 >= 0 && f2 - s3 > 0 && u2 - h2 > 0) {
              const t4 = c2.getPixelIndex(s3, h2), e3 = { r: this.bitmap.data[o3], g: this.bitmap.data[o3 + 1], b: this.bitmap.data[o3 + 2], a: this.bitmap.data[o3 + 3] }, r3 = { r: c2.bitmap.data[t4], g: c2.bitmap.data[t4 + 1], b: c2.bitmap.data[t4 + 2], a: c2.bitmap.data[t4 + 3] };
              c2.bitmap.data[t4] = (e3.a * (e3.r - r3.r) - r3.r + 255 >> 8) + r3.r, c2.bitmap.data[t4 + 1] = (e3.a * (e3.g - r3.g) - r3.g + 255 >> 8) + r3.g, c2.bitmap.data[t4 + 2] = (e3.a * (e3.b - r3.b) - r3.b + 255 >> 8) + r3.b, c2.bitmap.data[t4 + 3] = this.constructor.limit255(r3.a + e3.a);
            }
          }), h(s2) && s2.call(this, null, this), this;
        } }), () => ({ blur(t2, e2) {
          if ("number" != typeof t2)
            return l.call(this, "r must be a number", e2);
          if (t2 < 1)
            return l.call(this, "r must be greater than 0", e2);
          let r2, i2, n2, a2, o2, s2, f2, u2, c2, d2, p2, m2, g2, b2;
          const _2 = this.bitmap.width - 1, y2 = this.bitmap.height - 1, w2 = t2 + 1, v2 = Be[t2], x2 = Te[t2], E2 = [], k2 = [], S2 = [], M2 = [], A2 = [], I2 = [];
          let B2 = 2;
          for (; B2-- > 0; ) {
            for (m2 = 0, g2 = 0, s2 = 0; s2 < this.bitmap.height; s2++) {
              for (r2 = this.bitmap.data[g2] * w2, i2 = this.bitmap.data[g2 + 1] * w2, n2 = this.bitmap.data[g2 + 2] * w2, a2 = this.bitmap.data[g2 + 3] * w2, f2 = 1; f2 <= t2; f2++)
                u2 = g2 + ((f2 > _2 ? _2 : f2) << 2), r2 += this.bitmap.data[u2++], i2 += this.bitmap.data[u2++], n2 += this.bitmap.data[u2++], a2 += this.bitmap.data[u2];
              for (o2 = 0; o2 < this.bitmap.width; o2++)
                E2[m2] = r2, k2[m2] = i2, S2[m2] = n2, M2[m2] = a2, 0 === s2 && (A2[o2] = ((u2 = o2 + w2) < _2 ? u2 : _2) << 2, I2[o2] = (u2 = o2 - t2) > 0 ? u2 << 2 : 0), c2 = g2 + A2[o2], d2 = g2 + I2[o2], r2 += this.bitmap.data[c2++] - this.bitmap.data[d2++], i2 += this.bitmap.data[c2++] - this.bitmap.data[d2++], n2 += this.bitmap.data[c2++] - this.bitmap.data[d2++], a2 += this.bitmap.data[c2] - this.bitmap.data[d2], m2++;
              g2 += this.bitmap.width << 2;
            }
            for (o2 = 0; o2 < this.bitmap.width; o2++) {
              for (p2 = o2, r2 = E2[p2] * w2, i2 = k2[p2] * w2, n2 = S2[p2] * w2, a2 = M2[p2] * w2, f2 = 1; f2 <= t2; f2++)
                p2 += f2 > y2 ? 0 : this.bitmap.width, r2 += E2[p2], i2 += k2[p2], n2 += S2[p2], a2 += M2[p2];
              for (m2 = o2 << 2, s2 = 0; s2 < this.bitmap.height; s2++)
                b2 = a2 * v2 >>> x2, this.bitmap.data[m2 + 3] = b2, b2 > 255 && (this.bitmap.data[m2 + 3] = 255), b2 > 0 ? (b2 = 255 / b2, this.bitmap.data[m2] = (r2 * v2 >>> x2) * b2, this.bitmap.data[m2 + 1] = (i2 * v2 >>> x2) * b2, this.bitmap.data[m2 + 2] = (n2 * v2 >>> x2) * b2) : (this.bitmap.data[m2 + 2] = 0, this.bitmap.data[m2 + 1] = 0, this.bitmap.data[m2] = 0), 0 === o2 && (A2[s2] = ((u2 = s2 + w2) < y2 ? u2 : y2) * this.bitmap.width, I2[s2] = (u2 = s2 - t2) > 0 ? u2 * this.bitmap.width : 0), c2 = o2 + A2[s2], d2 = o2 + I2[s2], r2 += E2[c2] - E2[d2], i2 += k2[c2] - k2[d2], n2 += S2[c2] - S2[d2], a2 += M2[c2] - M2[d2], m2 += this.bitmap.width << 2;
            }
          }
          return h(e2) && e2.call(this, null, this), this;
        } }), () => ({ circle() {
          let t2 = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {}, e2 = arguments.length > 1 ? arguments[1] : void 0;
          "function" == typeof t2 && (e2 = t2, t2 = {});
          const r2 = t2.radius || (this.bitmap.width > this.bitmap.height ? this.bitmap.height : this.bitmap.width) / 2, i2 = "number" == typeof t2.x ? t2.x : this.bitmap.width / 2, n2 = "number" == typeof t2.y ? t2.y : this.bitmap.height / 2;
          return this.scanQuiet(0, 0, this.bitmap.width, this.bitmap.height, function(t3, e3, a2) {
            const o2 = Math.sqrt(Math.pow(t3 - i2, 2) + Math.pow(e3 - n2, 2));
            r2 - o2 <= 0 ? this.bitmap.data[a2 + 3] = 0 : r2 - o2 < 1 && (this.bitmap.data[a2 + 3] = 255 * (r2 - o2));
          }), h(e2) && e2.call(this, null, this), this;
        } }), () => ({ brightness(t2, e2) {
          return "number" != typeof t2 ? l.call(this, "val must be numbers", e2) : t2 < -1 || t2 > 1 ? l.call(this, "val must be a number between -1 and +1", e2) : (this.scanQuiet(0, 0, this.bitmap.width, this.bitmap.height, function(e3, r2, i2) {
            t2 < 0 ? (this.bitmap.data[i2] *= 1 + t2, this.bitmap.data[i2 + 1] *= 1 + t2, this.bitmap.data[i2 + 2] *= 1 + t2) : (this.bitmap.data[i2] += (255 - this.bitmap.data[i2]) * t2, this.bitmap.data[i2 + 1] += (255 - this.bitmap.data[i2 + 1]) * t2, this.bitmap.data[i2 + 2] += (255 - this.bitmap.data[i2 + 2]) * t2);
          }), h(e2) && e2.call(this, null, this), this);
        }, contrast(t2, e2) {
          if ("number" != typeof t2)
            return l.call(this, "val must be numbers", e2);
          if (t2 < -1 || t2 > 1)
            return l.call(this, "val must be a number between -1 and +1", e2);
          const r2 = (t2 + 1) / (1 - t2);
          function i2(t3) {
            return (t3 = Math.floor(r2 * (t3 - 127) + 127)) < 0 ? 0 : t3 > 255 ? 255 : t3;
          }
          return this.scanQuiet(0, 0, this.bitmap.width, this.bitmap.height, function(t3, e3, r3) {
            this.bitmap.data[r3] = i2(this.bitmap.data[r3]), this.bitmap.data[r3 + 1] = i2(this.bitmap.data[r3 + 1]), this.bitmap.data[r3 + 2] = i2(this.bitmap.data[r3 + 2]);
          }), h(e2) && e2.call(this, null, this), this;
        }, posterize(t2, e2) {
          return "number" != typeof t2 ? l.call(this, "n must be numbers", e2) : (t2 < 2 && (t2 = 2), this.scanQuiet(0, 0, this.bitmap.width, this.bitmap.height, function(e3, r2, i2) {
            this.bitmap.data[i2] = Math.floor(this.bitmap.data[i2] / 255 * (t2 - 1)) / (t2 - 1) * 255, this.bitmap.data[i2 + 1] = Math.floor(this.bitmap.data[i2 + 1] / 255 * (t2 - 1)) / (t2 - 1) * 255, this.bitmap.data[i2 + 2] = Math.floor(this.bitmap.data[i2 + 2] / 255 * (t2 - 1)) / (t2 - 1) * 255;
          }), h(e2) && e2.call(this, null, this), this);
        }, greyscale: Le, grayscale: Le, opacity(t2, e2) {
          return "number" != typeof t2 ? l.call(this, "f must be a number", e2) : t2 < 0 || t2 > 1 ? l.call(this, "f must be a number from 0 to 1", e2) : (this.scanQuiet(0, 0, this.bitmap.width, this.bitmap.height, function(e3, r2, i2) {
            const n2 = this.bitmap.data[i2 + 3] * t2;
            this.bitmap.data[i2 + 3] = n2;
          }), h(e2) && e2.call(this, null, this), this);
        }, sepia(t2) {
          return this.scanQuiet(0, 0, this.bitmap.width, this.bitmap.height, function(t3, e2, r2) {
            let i2 = this.bitmap.data[r2], n2 = this.bitmap.data[r2 + 1], a2 = this.bitmap.data[r2 + 2];
            i2 = 0.393 * i2 + 0.769 * n2 + 0.189 * a2, n2 = 0.349 * i2 + 0.686 * n2 + 0.168 * a2, a2 = 0.272 * i2 + 0.534 * n2 + 0.131 * a2, this.bitmap.data[r2] = i2 < 255 ? i2 : 255, this.bitmap.data[r2 + 1] = n2 < 255 ? n2 : 255, this.bitmap.data[r2 + 2] = a2 < 255 ? a2 : 255;
          }), h(t2) && t2.call(this, null, this), this;
        }, fade(t2, e2) {
          return "number" != typeof t2 ? l.call(this, "f must be a number", e2) : t2 < 0 || t2 > 1 ? l.call(this, "f must be a number from 0 to 1", e2) : (this.opacity(1 - t2), h(e2) && e2.call(this, null, this), this);
        }, convolution(t2, e2, r2) {
          "function" == typeof e2 && void 0 === r2 && (r2 = e2, e2 = null), e2 || (e2 = this.constructor.EDGE_EXTEND);
          const i2 = Re.from(this.bitmap.data), n2 = t2.length, a2 = t2[0].length, o2 = Math.floor(n2 / 2), s2 = Math.floor(a2 / 2), l2 = -o2, f2 = -s2;
          let u2, c2, d2, p2, m2, g2, b2, _2, y2, w2;
          return this.scanQuiet(0, 0, this.bitmap.width, this.bitmap.height, function(r3, n3, a3) {
            p2 = 0, d2 = 0, c2 = 0;
            for (let i3 = l2; i3 <= o2; i3++)
              for (let a4 = f2; a4 <= s2; a4++)
                _2 = r3 + a4, y2 = n3 + i3, u2 = t2[i3 + o2][a4 + s2], w2 = this.getPixelIndex(_2, y2, e2), -1 === w2 ? (b2 = 0, g2 = 0, m2 = 0) : (m2 = this.bitmap.data[w2 + 0], g2 = this.bitmap.data[w2 + 1], b2 = this.bitmap.data[w2 + 2]), c2 += u2 * m2, d2 += u2 * g2, p2 += u2 * b2;
            c2 < 0 && (c2 = 0), d2 < 0 && (d2 = 0), p2 < 0 && (p2 = 0), c2 > 255 && (c2 = 255), d2 > 255 && (d2 = 255), p2 > 255 && (p2 = 255), i2[a3 + 0] = c2, i2[a3 + 1] = d2, i2[a3 + 2] = p2;
          }), this.bitmap.data = i2, h(r2) && r2.call(this, null, this), this;
        }, opaque(t2) {
          return this.scanQuiet(0, 0, this.bitmap.width, this.bitmap.height, function(t3, e2, r2) {
            this.bitmap.data[r2 + 3] = 255;
          }), h(t2) && t2.call(this, null, this), this;
        }, pixelate(t2, e2, r2, i2, n2, a2) {
          if ("function" == typeof e2)
            a2 = e2, n2 = null, i2 = null, r2 = null, e2 = null;
          else {
            if ("number" != typeof t2)
              return l.call(this, "size must be a number", a2);
            if (Oe(e2) && "number" != typeof e2)
              return l.call(this, "x must be a number", a2);
            if (Oe(r2) && "number" != typeof r2)
              return l.call(this, "y must be a number", a2);
            if (Oe(i2) && "number" != typeof i2)
              return l.call(this, "w must be a number", a2);
            if (Oe(n2) && "number" != typeof n2)
              return l.call(this, "h must be a number", a2);
          }
          const o2 = [[1 / 16, 2 / 16, 1 / 16], [2 / 16, 0.25, 2 / 16], [1 / 16, 2 / 16, 1 / 16]];
          e2 = e2 || 0, r2 = r2 || 0, i2 = Oe(i2) ? i2 : this.bitmap.width - e2, n2 = Oe(n2) ? n2 : this.bitmap.height - r2;
          const s2 = this.cloneQuiet();
          return this.scanQuiet(e2, r2, i2, n2, function(e3, r3, i3) {
            e3 = t2 * Math.floor(e3 / t2), r3 = t2 * Math.floor(r3 / t2);
            const n3 = Pe(s2, o2, e3, r3);
            this.bitmap.data[i3] = n3[0], this.bitmap.data[i3 + 1] = n3[1], this.bitmap.data[i3 + 2] = n3[2];
          }), h(a2) && a2.call(this, null, this), this;
        }, convolute(t2, e2, r2, i2, n2, a2) {
          if (!Array.isArray(t2))
            return l.call(this, "the kernel must be an array", a2);
          if ("function" == typeof e2)
            a2 = e2, e2 = null, r2 = null, i2 = null, n2 = null;
          else {
            if (Oe(e2) && "number" != typeof e2)
              return l.call(this, "x must be a number", a2);
            if (Oe(r2) && "number" != typeof r2)
              return l.call(this, "y must be a number", a2);
            if (Oe(i2) && "number" != typeof i2)
              return l.call(this, "w must be a number", a2);
            if (Oe(n2) && "number" != typeof n2)
              return l.call(this, "h must be a number", a2);
          }
          e2 = Oe(e2) ? e2 : 0, r2 = Oe(r2) ? r2 : 0, i2 = Oe(i2) ? i2 : this.bitmap.width - e2, n2 = Oe(n2) ? n2 : this.bitmap.height - r2;
          const o2 = this.cloneQuiet();
          return this.scanQuiet(e2, r2, i2, n2, function(e3, r3, i3) {
            const n3 = Pe(o2, t2, e3, r3);
            this.bitmap.data[i3] = this.constructor.limit255(n3[0]), this.bitmap.data[i3 + 1] = this.constructor.limit255(n3[1]), this.bitmap.data[i3 + 2] = this.constructor.limit255(n3[2]);
          }), h(a2) && a2.call(this, null, this), this;
        }, color: Ue, colour: Ue }), () => ({ contain(t2, e2, r2, i2, n2) {
          if ("number" != typeof t2 || "number" != typeof e2)
            return l.call(this, "w and h must be numbers", n2);
          "string" == typeof r2 && ("function" == typeof i2 && void 0 === n2 && (n2 = i2), i2 = r2, r2 = null), "function" == typeof r2 && (void 0 === n2 && (n2 = r2), i2 = null, r2 = null), "function" == typeof i2 && void 0 === n2 && (n2 = i2, i2 = null);
          const a2 = 7 & (r2 = r2 || this.constructor.HORIZONTAL_ALIGN_CENTER | this.constructor.VERTICAL_ALIGN_MIDDLE), o2 = r2 >> 3;
          if ((0 === a2 || a2 & a2 - 1) && (0 === o2 || o2 & o2 - 1))
            return l.call(this, "only use one flag per alignment direction", n2);
          const s2 = a2 >> 1, f2 = o2 >> 1, u2 = t2 / e2 > this.bitmap.width / this.bitmap.height ? e2 / this.bitmap.height : t2 / this.bitmap.width, c2 = this.cloneQuiet().scale(u2, i2);
          return this.resize(t2, e2, i2), this.scanQuiet(0, 0, this.bitmap.width, this.bitmap.height, function(t3, e3, r3) {
            this.bitmap.data.writeUInt32BE(this._background, r3);
          }), this.blit(c2, (this.bitmap.width - c2.bitmap.width) / 2 * s2, (this.bitmap.height - c2.bitmap.height) / 2 * f2), h(n2) && n2.call(this, null, this), this;
        } }), () => ({ cover(t2, e2, r2, i2, n2) {
          if ("number" != typeof t2 || "number" != typeof e2)
            return l.call(this, "w and h must be numbers", n2);
          r2 && "function" == typeof r2 && void 0 === n2 ? (n2 = r2, r2 = null, i2 = null) : "function" == typeof i2 && void 0 === n2 && (n2 = i2, i2 = null);
          const a2 = 7 & (r2 = r2 || this.constructor.HORIZONTAL_ALIGN_CENTER | this.constructor.VERTICAL_ALIGN_MIDDLE), o2 = r2 >> 3;
          if ((0 === a2 || a2 & a2 - 1) && (0 === o2 || o2 & o2 - 1))
            return l.call(this, "only use one flag per alignment direction", n2);
          const s2 = a2 >> 1, f2 = o2 >> 1, u2 = t2 / e2 > this.bitmap.width / this.bitmap.height ? t2 / this.bitmap.width : e2 / this.bitmap.height;
          return this.scale(u2, i2), this.crop((this.bitmap.width - t2) / 2 * s2, (this.bitmap.height - e2) / 2 * f2, t2, e2), h(n2) && n2.call(this, null, this), this;
        } }), function(t2) {
          return t2("crop", function(t3, e2, r2, i2, n2) {
            if ("number" != typeof t3 || "number" != typeof e2)
              return l.call(this, "x and y must be numbers", n2);
            if ("number" != typeof r2 || "number" != typeof i2)
              return l.call(this, "w and h must be numbers", n2);
            if (t3 = Math.round(t3), e2 = Math.round(e2), r2 = Math.round(r2), i2 = Math.round(i2), 0 === t3 && r2 === this.bitmap.width) {
              const n3 = r2 * e2 + t3 << 2, a2 = n3 + (i2 * r2 << 2);
              this.bitmap.data = this.bitmap.data.slice(n3, a2);
            } else {
              const n3 = ze.allocUnsafe(r2 * i2 * 4);
              let a2 = 0;
              this.scanQuiet(t3, e2, r2, i2, function(t4, e3, r3) {
                const i3 = this.bitmap.data.readUInt32BE(r3, true);
                n3.writeUInt32BE(i3, a2, true), a2 += 4;
              }), this.bitmap.data = n3;
            }
            return this.bitmap.width = r2, this.bitmap.height = i2, h(n2) && n2.call(this, null, this), this;
          }), { class: { autocrop() {
            const t3 = this.bitmap.width, e2 = this.bitmap.height;
            let r2, i2 = 0, n2 = 2e-4, a2 = true, o2 = false, s2 = { north: false, south: false, east: false, west: false };
            for (var l2 = arguments.length, f2 = new Array(l2), u2 = 0; u2 < l2; u2++)
              f2[u2] = arguments[u2];
            for (let t4 = 0, e3 = f2.length; t4 < e3; t4++)
              if ("number" == typeof f2[t4] && (n2 = f2[t4]), "boolean" == typeof f2[t4] && (a2 = f2[t4]), "function" == typeof f2[t4] && (r2 = f2[t4]), "object" == typeof f2[t4]) {
                const e4 = f2[t4];
                void 0 !== e4.tolerance && ({ tolerance: n2 } = e4), void 0 !== e4.cropOnlyFrames && ({ cropOnlyFrames: a2 } = e4), void 0 !== e4.cropSymmetric && ({ cropSymmetric: o2 } = e4), void 0 !== e4.leaveBorder && ({ leaveBorder: i2 } = e4), void 0 !== e4.ignoreSides && ({ ignoreSides: s2 } = e4);
              }
            let c2 = this.getPixelColor(0, 0);
            const d2 = this.constructor.intToRGBA(c2);
            let p2 = 0, m2 = 0, g2 = 0, b2 = 0;
            if (c2 = this.getPixelColor(0, 0), !s2.north)
              t:
                for (let r3 = 0; r3 < e2 - 1; r3++) {
                  for (let e3 = 0; e3 < t3; e3++) {
                    const t4 = this.getPixelColor(e3, r3), i3 = this.constructor.intToRGBA(t4);
                    if (this.constructor.colorDiff(d2, i3) > n2)
                      break t;
                  }
                  p2++;
                }
            if (c2 = this.getPixelColor(t3, 0), !s2.west)
              t:
                for (let r3 = 0; r3 < t3 - 1; r3++) {
                  for (let t4 = 0 + p2; t4 < e2; t4++) {
                    const e3 = this.getPixelColor(r3, t4), i3 = this.constructor.intToRGBA(e3);
                    if (this.constructor.colorDiff(d2, i3) > n2)
                      break t;
                  }
                  b2++;
                }
            if (c2 = this.getPixelColor(0, e2), !s2.south)
              t:
                for (let r3 = e2 - 1; r3 >= p2 + 1; r3--) {
                  for (let e3 = t3 - m2 - 1; e3 >= 0; e3--) {
                    const t4 = this.getPixelColor(e3, r3), i3 = this.constructor.intToRGBA(t4);
                    if (this.constructor.colorDiff(d2, i3) > n2)
                      break t;
                  }
                  g2++;
                }
            if (c2 = this.getPixelColor(t3, e2), !s2.east)
              t:
                for (let r3 = t3 - 1; r3 >= 0 + b2 + 1; r3--) {
                  for (let t4 = e2 - 1; t4 >= 0 + p2; t4--) {
                    const e3 = this.getPixelColor(r3, t4), i3 = this.constructor.intToRGBA(e3);
                    if (this.constructor.colorDiff(d2, i3) > n2)
                      break t;
                  }
                  m2++;
                }
            let _2 = false;
            if (b2 -= i2, m2 -= i2, p2 -= i2, g2 -= i2, o2) {
              const t4 = Math.min(m2, b2), e3 = Math.min(p2, g2);
              b2 = t4, m2 = t4, p2 = e3, g2 = e3;
            }
            b2 = b2 >= 0 ? b2 : 0, m2 = m2 >= 0 ? m2 : 0, p2 = p2 >= 0 ? p2 : 0, g2 = g2 >= 0 ? g2 : 0;
            const y2 = t3 - (b2 + m2), w2 = e2 - (g2 + p2);
            return _2 = a2 ? 0 !== m2 && 0 !== p2 && 0 !== b2 && 0 !== g2 : 0 !== m2 || 0 !== p2 || 0 !== b2 || 0 !== g2, _2 && this.crop(b2, p2, y2, w2), h(r2) && r2.call(this, null, this), this;
          } } };
        }, () => ({ displace(t2, e2, r2) {
          if ("object" != typeof t2 || t2.constructor !== this.constructor)
            return l.call(this, "The source must be a Jimp image", r2);
          if ("number" != typeof e2)
            return l.call(this, "factor must be a number", r2);
          const i2 = this.cloneQuiet();
          return this.scanQuiet(0, 0, this.bitmap.width, this.bitmap.height, function(r3, n2, a2) {
            let o2 = t2.bitmap.data[a2] / 256 * e2;
            o2 = Math.round(o2);
            const s2 = this.getPixelIndex(r3 + o2, n2);
            this.bitmap.data[s2] = i2.bitmap.data[a2], this.bitmap.data[s2 + 1] = i2.bitmap.data[a2 + 1], this.bitmap.data[s2 + 2] = i2.bitmap.data[a2 + 2];
          }), h(r2) && r2.call(this, null, this), this;
        } }), () => ({ dither565: De, dither16: De }), () => ({ fisheye() {
          let t2 = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : { r: 2.5 }, e2 = arguments.length > 1 ? arguments[1] : void 0;
          "function" == typeof t2 && (e2 = t2, t2 = { r: 2.5 });
          const r2 = this.cloneQuiet(), { width: i2, height: n2 } = r2.bitmap;
          return r2.scanQuiet(0, 0, i2, n2, (e3, a2) => {
            const o2 = e3 / i2, s2 = a2 / n2, h2 = Math.sqrt(Math.pow(o2 - 0.5, 2) + Math.pow(s2 - 0.5, 2)), l2 = 2 * Math.pow(h2, t2.r), f2 = (o2 - 0.5) / h2, u2 = (s2 - 0.5) / h2, c2 = Math.round((l2 * f2 + 0.5) * i2), d2 = Math.round((l2 * u2 + 0.5) * n2), p2 = r2.getPixelColor(c2, d2);
            this.setPixelColor(p2, e3, a2);
          }), this.setPixelColor(r2.getPixelColor(i2 / 2, n2 / 2), i2 / 2, n2 / 2), h(e2) && e2.call(this, null, this), this;
        } }), () => ({ flip: Fe, mirror: Fe }), () => ({ gaussian(t2, e2) {
          if ("number" != typeof t2)
            return l.call(this, "r must be a number", e2);
          if (t2 < 1)
            return l.call(this, "r must be greater than 0", e2);
          const r2 = Math.ceil(2.57 * t2), i2 = 2 * r2 + 1, n2 = t2 * t2 * 2, a2 = n2 * Math.PI, o2 = [];
          for (let t3 = 0; t3 < i2; t3++) {
            o2[t3] = [];
            for (let e3 = 0; e3 < i2; e3++) {
              const i3 = (e3 - r2) ** 2 + (t3 - r2) ** 2;
              o2[t3][e3] = Math.exp(-i3 / n2) / a2;
            }
          }
          for (let t3 = 0; t3 < this.bitmap.height; t3++)
            for (let e3 = 0; e3 < this.bitmap.width; e3++) {
              let n3 = 0, a3 = 0, s2 = 0, h2 = 0, l2 = 0;
              for (let f2 = 0; f2 < i2; f2++) {
                for (let u3 = 0; u3 < i2; u3++) {
                  const i3 = Math.min(this.bitmap.width - 1, Math.max(0, u3 + e3 - r2)), c2 = Math.min(this.bitmap.height - 1, Math.max(0, f2 + t3 - r2)), d2 = o2[f2][u3], p2 = c2 * this.bitmap.width + i3 << 2;
                  n3 += this.bitmap.data[p2] * d2, a3 += this.bitmap.data[p2 + 1] * d2, s2 += this.bitmap.data[p2 + 2] * d2, h2 += this.bitmap.data[p2 + 3] * d2, l2 += d2;
                }
                const u2 = t3 * this.bitmap.width + e3 << 2;
                this.bitmap.data[u2] = Math.round(n3 / l2), this.bitmap.data[u2 + 1] = Math.round(a3 / l2), this.bitmap.data[u2 + 2] = Math.round(s2 / l2), this.bitmap.data[u2 + 3] = Math.round(h2 / l2);
              }
            }
          return h(e2) && e2.call(this, null, this), this;
        } }), () => ({ invert(t2) {
          return this.scanQuiet(0, 0, this.bitmap.width, this.bitmap.height, function(t3, e2, r2) {
            this.bitmap.data[r2] = 255 - this.bitmap.data[r2], this.bitmap.data[r2 + 1] = 255 - this.bitmap.data[r2 + 1], this.bitmap.data[r2 + 2] = 255 - this.bitmap.data[r2 + 2];
          }), h(t2) && t2.call(this, null, this), this;
        } }), () => ({ mask(t2) {
          let e2 = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 0, r2 = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : 0, i2 = arguments.length > 3 ? arguments[3] : void 0;
          if (!(t2 instanceof this.constructor))
            return l.call(this, "The source must be a Jimp image", i2);
          if ("number" != typeof e2 || "number" != typeof r2)
            return l.call(this, "x and y must be numbers", i2);
          e2 = Math.round(e2), r2 = Math.round(r2);
          const n2 = this.bitmap.width, a2 = this.bitmap.height, o2 = this;
          return t2.scanQuiet(0, 0, t2.bitmap.width, t2.bitmap.height, function(t3, i3, s2) {
            const h2 = e2 + t3, l2 = r2 + i3;
            if (h2 >= 0 && l2 >= 0 && h2 < n2 && l2 < a2) {
              const t4 = o2.getPixelIndex(h2, l2), { data: e3 } = this.bitmap, r3 = (e3[s2 + 0] + e3[s2 + 1] + e3[s2 + 2]) / 3;
              o2.bitmap.data[t4 + 3] *= r3 / 255;
            }
          }), h(i2) && i2.call(this, null, this), this;
        } }), () => ({ normalize(t2) {
          const e2 = je.call(this), r2 = { r: He(e2.r), g: He(e2.g), b: He(e2.b) };
          return this.scanQuiet(0, 0, this.bitmap.width, this.bitmap.height, function(t3, e3, i2) {
            const n2 = this.bitmap.data[i2 + 0], a2 = this.bitmap.data[i2 + 1], o2 = this.bitmap.data[i2 + 2];
            this.bitmap.data[i2 + 0] = Ge(n2, r2.r[0], r2.r[1]), this.bitmap.data[i2 + 1] = Ge(a2, r2.g[0], r2.g[1]), this.bitmap.data[i2 + 2] = Ge(o2, r2.b[0], r2.b[1]);
          }), h(t2) && t2.call(this, null, this), this;
        } }), () => ({ constants: { measureText: Ze, measureTextHeight: Ve, FONT_SANS_8_BLACK: a().join(Qe, "fonts/open-sans/open-sans-8-black/open-sans-8-black.fnt"), FONT_SANS_10_BLACK: a().join(Qe, "fonts/open-sans/open-sans-10-black/open-sans-10-black.fnt"), FONT_SANS_12_BLACK: a().join(Qe, "fonts/open-sans/open-sans-12-black/open-sans-12-black.fnt"), FONT_SANS_14_BLACK: a().join(Qe, "fonts/open-sans/open-sans-14-black/open-sans-14-black.fnt"), FONT_SANS_16_BLACK: a().join(Qe, "fonts/open-sans/open-sans-16-black/open-sans-16-black.fnt"), FONT_SANS_32_BLACK: a().join(Qe, "fonts/open-sans/open-sans-32-black/open-sans-32-black.fnt"), FONT_SANS_64_BLACK: a().join(Qe, "fonts/open-sans/open-sans-64-black/open-sans-64-black.fnt"), FONT_SANS_128_BLACK: a().join(Qe, "fonts/open-sans/open-sans-128-black/open-sans-128-black.fnt"), FONT_SANS_8_WHITE: a().join(Qe, "fonts/open-sans/open-sans-8-white/open-sans-8-white.fnt"), FONT_SANS_16_WHITE: a().join(Qe, "fonts/open-sans/open-sans-16-white/open-sans-16-white.fnt"), FONT_SANS_32_WHITE: a().join(Qe, "fonts/open-sans/open-sans-32-white/open-sans-32-white.fnt"), FONT_SANS_64_WHITE: a().join(Qe, "fonts/open-sans/open-sans-64-white/open-sans-64-white.fnt"), FONT_SANS_128_WHITE: a().join(Qe, "fonts/open-sans/open-sans-128-white/open-sans-128-white.fnt"), loadFont(t2, e2) {
          return "string" != typeof t2 ? l.call(this, "file must be a string", e2) : new Promise((r2, i2) => {
            e2 = e2 || function(t3, e3) {
              t3 ? i2(t3) : r2(e3);
            }, qe()(t2, (r3, i3) => {
              const n2 = {}, o2 = {};
              if (r3)
                return l.call(this, r3, e2);
              for (let t3 = 0; t3 < i3.chars.length; t3++)
                n2[String.fromCharCode(i3.chars[t3].id)] = i3.chars[t3];
              for (let t3 = 0; t3 < i3.kernings.length; t3++) {
                const e3 = String.fromCharCode(i3.kernings[t3].first);
                o2[e3] = o2[e3] || {}, o2[e3][String.fromCharCode(i3.kernings[t3].second)] = i3.kernings[t3].amount;
              }
              (function(t3, e3, r4) {
                const i4 = r4.map((r5) => t3.read(e3 + "/" + r5));
                return Promise.all(i4);
              })(this, a().dirname(t2), i3.pages).then((t3) => {
                e2(null, { chars: n2, kernings: o2, pages: t3, common: i3.common, info: i3.info });
              });
            });
          });
        } }, class: { print(t2, e2, r2, i2, n2, a2, o2) {
          if ("function" == typeof n2 && void 0 === o2 && (o2 = n2, n2 = 1 / 0), void 0 === n2 && (n2 = 1 / 0), "function" == typeof a2 && void 0 === o2 && (o2 = a2, a2 = 1 / 0), void 0 === a2 && (a2 = 1 / 0), "object" != typeof t2)
            return l.call(this, "font must be a Jimp loadFont", o2);
          if ("number" != typeof e2 || "number" != typeof r2 || "number" != typeof n2)
            return l.call(this, "x, y and maxWidth must be numbers", o2);
          if ("number" != typeof n2)
            return l.call(this, "maxWidth must be a number", o2);
          if ("number" != typeof a2)
            return l.call(this, "maxHeight must be a number", o2);
          let s2, f2;
          "object" == typeof i2 && null !== i2.text && void 0 !== i2.text ? (s2 = i2.alignmentX || this.constructor.HORIZONTAL_ALIGN_LEFT, f2 = i2.alignmentY || this.constructor.VERTICAL_ALIGN_TOP, { text: i2 } = i2) : (s2 = this.constructor.HORIZONTAL_ALIGN_LEFT, f2 = this.constructor.VERTICAL_ALIGN_TOP, i2 = i2.toString()), a2 !== 1 / 0 && f2 === this.constructor.VERTICAL_ALIGN_BOTTOM ? r2 += a2 - Ve(t2, i2, n2) : a2 !== 1 / 0 && f2 === this.constructor.VERTICAL_ALIGN_MIDDLE && (r2 += a2 / 2 - Ve(t2, i2, n2) / 2);
          const u2 = Object.entries(t2.chars)[0][1].xadvance, { lines: c2, longestLine: d2 } = Ye(t2, i2, n2);
          return c2.forEach((i3) => {
            const a3 = i3.join(" "), o3 = function(t3, e3, r3, i4, n3) {
              return n3 === t3.HORIZONTAL_ALIGN_LEFT ? 0 : n3 === t3.HORIZONTAL_ALIGN_CENTER ? (i4 - Ze(e3, r3)) / 2 : i4 - Ze(e3, r3);
            }(this.constructor, t2, a3, n2, s2);
            Je.call(this, t2, e2 + o3, r2, a3, u2), r2 += t2.common.lineHeight;
          }), h(o2) && o2.call(this, null, this, { x: e2 + d2, y: r2 }), this;
        } } }), () => ({ constants: { RESIZE_NEAREST_NEIGHBOR: "nearestNeighbor", RESIZE_BILINEAR: "bilinearInterpolation", RESIZE_BICUBIC: "bicubicInterpolation", RESIZE_HERMITE: "hermiteInterpolation", RESIZE_BEZIER: "bezierInterpolation" }, class: { resize(t2, e2, r2, i2) {
          if ("number" != typeof t2 || "number" != typeof e2)
            return l.call(this, "w and h must be numbers", i2);
          if ("function" == typeof r2 && void 0 === i2 && (i2 = r2, r2 = null), t2 === this.constructor.AUTO && e2 === this.constructor.AUTO)
            return l.call(this, "w and h cannot both be set to auto", i2);
          if (t2 === this.constructor.AUTO && (t2 = this.bitmap.width * (e2 / this.bitmap.height)), e2 === this.constructor.AUTO && (e2 = this.bitmap.height * (t2 / this.bitmap.width)), t2 < 0 || e2 < 0)
            return l.call(this, "w and h must be positive numbers", i2);
          if (t2 = Math.round(t2) || 1, e2 = Math.round(e2) || 1, "function" == typeof rr[r2]) {
            const i3 = { data: ir.alloc(t2 * e2 * 4), width: t2, height: e2 };
            rr[r2](this.bitmap, i3), this.bitmap = i3;
          } else {
            const r3 = this;
            new $e(this.bitmap.width, this.bitmap.height, t2, e2, true, true, (i3) => {
              r3.bitmap.data = ir.from(i3), r3.bitmap.width = t2, r3.bitmap.height = e2;
            }).resize(this.bitmap.data);
          }
          return h(i2) && i2.call(this, null, this), this;
        } } }), () => ({ rotate(t2, e2, r2) {
          return null == e2 && (e2 = true), "function" == typeof e2 && void 0 === r2 && (r2 = e2, e2 = true), "number" != typeof t2 ? l.call(this, "deg must be a number", r2) : "boolean" != typeof e2 && "string" != typeof e2 ? l.call(this, "mode must be a boolean or a string", r2) : (t2 % 90 != 0 || !e2 && this.bitmap.width !== this.bitmap.height && t2 % 180 != 0 ? or.call(this, t2, e2, r2) : ar.call(this, t2), h(r2) && r2.call(this, null, this), this);
        } }), () => ({ scale(t2, e2, r2) {
          if ("number" != typeof t2)
            return l.call(this, "f must be a number", r2);
          if (t2 < 0)
            return l.call(this, "f must be a positive number", r2);
          "function" == typeof e2 && void 0 === r2 && (r2 = e2, e2 = null);
          const i2 = this.bitmap.width * t2, n2 = this.bitmap.height * t2;
          return this.resize(i2, n2, e2), h(r2) && r2.call(this, null, this), this;
        }, scaleToFit(t2, e2, r2, i2) {
          if ("number" != typeof t2 || "number" != typeof e2)
            return l.call(this, "w and h must be numbers", i2);
          "function" == typeof r2 && void 0 === i2 && (i2 = r2, r2 = null);
          const n2 = t2 / e2 > this.bitmap.width / this.bitmap.height ? e2 / this.bitmap.height : t2 / this.bitmap.width;
          return this.scale(n2, r2), h(i2) && i2.call(this, null, this), this;
        } }), () => ({ shadow() {
          let t2 = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {}, e2 = arguments.length > 1 ? arguments[1] : void 0;
          "function" == typeof t2 && (e2 = t2, t2 = {});
          const { opacity: r2 = 0.7, size: i2 = 1.1, x: n2 = -25, y: a2 = 25, blur: o2 = 5 } = t2, s2 = this.clone(), l2 = this.clone();
          return l2.scan(0, 0, l2.bitmap.width, l2.bitmap.height, (t3, e3, i3) => {
            l2.bitmap.data[i3] = 0, l2.bitmap.data[i3 + 1] = 0, l2.bitmap.data[i3 + 2] = 0, l2.bitmap.data[i3 + 3] = l2.constructor.limit255(l2.bitmap.data[i3 + 3] * r2), this.bitmap.data[i3] = 0, this.bitmap.data[i3 + 1] = 0, this.bitmap.data[i3 + 2] = 0, this.bitmap.data[i3 + 3] = 0;
          }), l2.resize(l2.bitmap.width * i2, l2.bitmap.height * i2).blur(o2), this.composite(l2, n2, a2), this.composite(s2, 0, 0), h(e2) && e2.call(this, null, this), this;
        } }), () => ({ threshold(t2, e2) {
          let { max: r2, replace: i2 = 255, autoGreyscale: n2 = true } = t2;
          return "number" != typeof r2 ? l.call(this, "max must be a number", e2) : "number" != typeof i2 ? l.call(this, "replace must be a number", e2) : "boolean" != typeof n2 ? l.call(this, "autoGreyscale must be a boolean", e2) : (r2 = this.constructor.limit255(r2), i2 = this.constructor.limit255(i2), n2 && this.greyscale(), this.scanQuiet(0, 0, this.bitmap.width, this.bitmap.height, (t3, e3, n3) => {
            const a2 = this.bitmap.data[n3] < r2 ? this.bitmap.data[n3] : i2;
            this.bitmap.data[n3] = a2, this.bitmap.data[n3 + 1] = a2, this.bitmap.data[n3 + 2] = a2;
          }), h(e2) && e2.call(this, null, this), this);
        } })];
        !function(t2) {
          let e2 = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : oe;
          const r2 = { hasAlpha: {}, encoders: {}, decoders: {}, class: {}, constants: {} };
          function i2(t3) {
            Object.entries(t3).forEach((t4) => {
              let [e3, i3] = t4;
              r2[e3] = { ...r2[e3], ...i3 };
            });
          }
          t2.types && (t2.types.forEach(function(t3) {
            const e3 = t3();
            Array.isArray(e3.mime) ? Ct(...e3.mime) : Object.entries(e3.mime).forEach((t4) => Ct(...t4)), delete e3.mime, i2(e3);
          }), e2.decoders = { ...e2.decoders, ...r2.decoders }, e2.encoders = { ...e2.encoders, ...r2.encoders }, e2.hasAlpha = { ...e2.hasAlpha, ...r2.hasAlpha }), t2.plugins && t2.plugins.forEach(function(t3) {
            const e3 = t3(ae) || {};
            e3.class || e3.constants ? i2(e3) : i2({ class: e3 });
          }), ie(r2.class, e2), re(r2.constants, e2);
        }({ types: [() => (0, se.Ee)(ue(), pe(), { mime: { [be]: ["bmp"] }, constants: { MIME_BMP: be, MIME_X_MS_BMP: _e }, decoders: { [be]: ye, [_e]: ye }, encoders: { [be]: we, [_e]: we } }, { mime: { [ke]: ["tiff", "tif"] }, constants: { MIME_TIFF: ke }, decoders: { [ke]: (t2) => {
          const e2 = xe().decode(t2), r2 = e2[0];
          e2.forEach((e3) => {
            xe().decodeImage(t2, e3);
          });
          const i2 = xe().toRGBA8(r2);
          return { data: Ee.from(i2), width: r2.t256[0], height: r2.t257[0] };
        } }, encoders: { [ke]: (t2) => {
          const e2 = xe().encodeImage(t2.bitmap.data, t2.bitmap.width, t2.bitmap.height);
          return Ee.from(e2);
        } } }, { mime: { [Ie]: ["gif"] }, constants: { MIME_GIF: Ie }, decoders: { [Ie]: (t2) => {
          const e2 = new Se.N(t2), r2 = Ae.alloc(e2.width * e2.height * 4);
          return e2.decodeAndBlitFrameRGBA(0, r2), { data: r2, width: e2.width, height: e2.height };
        } }, encoders: { [Ie]: (t2) => {
          const e2 = new Me.BitmapImage(t2.bitmap);
          Me.GifUtil.quantizeDekker(e2, 256);
          const r2 = new Me.GifFrame(e2);
          return new Me.GifCodec().encodeGif([r2], {}).then((t3) => t3.buffer);
        } } })], plugins: [(t2) => {
          const e2 = sr.map((e3) => {
            let r2 = e3(t2) || {};
            return r2.class || r2.constants || (r2 = { class: r2 }), r2;
          });
          return (0, se.Ee)(...e2);
        }] });
      })();
    })();
  }
});
export default require_jimp();
/*! Bundled license information:

jimp/browser/lib/jimp.js:
  (*! For license information please see jimp.js.LICENSE.txt *)
*/
//# sourceMappingURL=jimp_browser_lib_jimp__js.js.map
